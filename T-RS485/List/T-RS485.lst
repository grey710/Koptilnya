
AVRASM ver. 2.1.30  D:\Koptilnya\T-RS485\List\T-RS485.asm Fri Jul 22 11:10:44 2011

D:\Koptilnya\T-RS485\List\T-RS485.asm(1057): warning: Register r4 already defined by the .DEF directive
D:\Koptilnya\T-RS485\List\T-RS485.asm(1058): warning: Register r6 already defined by the .DEF directive
D:\Koptilnya\T-RS485\List\T-RS485.asm(1059): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8
                 ;Program type             : Application
                 ;Clock frequency          : 8,000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _adc_data=R4
                 	.DEF _T_now=R6
                 	.DEF _i=R8
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c025      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e c063      	RJMP _adc_isr
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G100:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x7:
00001c 0000
00001d 0000
00001e 0064      	.DB  0x0,0x0,0x0,0x0,0x64,0x0
                 _0x0:
00001f 6925
000020 2300
D:\Koptilnya\T-RS485\List\T-RS485.asm(1097): warning: .cseg .db misalignment - padding zero byte
000021 0000      	.DB  0x25,0x69,0x0,0x23,0x0
                 
                 __GLOBAL_INI_TBL:
000022 0006      	.DW  0x06
000023 0004      	.DW  0x04
000024 0038      	.DW  _0x7*2
                 
                 _0xFFFFFFFF:
000025 0000      	.DW  0
                 
                 __RESET:
000026 94f8      	CLI
000027 27ee      	CLR  R30
000028 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000029 e0f1      	LDI  R31,1
00002a bffb      	OUT  GICR,R31
00002b bfeb      	OUT  GICR,R30
00002c bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00002d e1f8      	LDI  R31,0x18
00002e bdf1      	OUT  WDTCR,R31
00002f bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000030 e08d      	LDI  R24,(14-2)+1
000031 e0a2      	LDI  R26,2
000032 27bb      	CLR  R27
                 __CLEAR_REG:
000033 93ed      	ST   X+,R30
000034 958a      	DEC  R24
000035 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000036 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000037 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000038 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000039 93ed      	ST   X+,R30
00003a 9701      	SBIW R24,1
00003b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00003c e4e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00003d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00003e 9185      	LPM  R24,Z+
00003f 9195      	LPM  R25,Z+
000040 9700      	SBIW R24,0
000041 f061      	BREQ __GLOBAL_INI_END
000042 91a5      	LPM  R26,Z+
000043 91b5      	LPM  R27,Z+
000044 9005      	LPM  R0,Z+
000045 9015      	LPM  R1,Z+
000046 01bf      	MOVW R22,R30
000047 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000048 9005      	LPM  R0,Z+
000049 920d      	ST   X+,R0
00004a 9701      	SBIW R24,1
00004b f7e1      	BRNE __GLOBAL_INI_LOOP
00004c 01fb      	MOVW R30,R22
00004d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00004e e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00004f bfed      	OUT  SPL,R30
000050 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000051 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000052 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000053 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000054 c02b      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type           : ATmega8
                 ;Program type        : Application
                 ;Clock frequency     : 8,0000 MHz
                 ;Memory model        : Small
                 ;External SRAM size  : 0
                 ;Data Stack size     : 256
                 ;*****************************************************/
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;#define ADC_VREF_TYPE 0x00
                 ;unsigned int adc_data = 0, T_now=0;
                 ;
                 ;static void avr_init();
                 ;
                 ;//unsigned int read_adc(unsigned char adc_input);
                 ;
                 ;int i=100;
                 ;
                 ;static void avr_init() {
                 ; 0000 0017 static void avr_init() {
                 
                 	.CSEG
                 _avr_init_G000:
                 ; 0000 0018 // Input/Output Ports initialization
                 ; 0000 0019 // Port B initialization
                 ; 0000 001A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=Out Func0=Out
                 ; 0000 001B // State7=T State6=T State5=P State4=P State3=P State2=P State1=0 State0=0
                 ; 0000 001C     PORTB=0x3C;
000055 e3ec      	LDI  R30,LOW(60)
000056 bbe8      	OUT  0x18,R30
                 ; 0000 001D     DDRB=0x03;
000057 e0e3      	LDI  R30,LOW(3)
000058 bbe7      	OUT  0x17,R30
                 ; 0000 001E 
                 ; 0000 001F // Port C initialization
                 ; 0000 0020 // Func6=In Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0021 // State6=T State5=0 State4=1 State3=P State2=P State1=P State0=T
                 ; 0000 0022     PORTC=0x1E;
000059 e1ee      	LDI  R30,LOW(30)
00005a bbe5      	OUT  0x15,R30
                 ; 0000 0023     DDRC=0x30;
00005b e3e0      	LDI  R30,LOW(48)
00005c bbe4      	OUT  0x14,R30
                 ; 0000 0024 
                 ; 0000 0025 // Port D initialization
                 ; 0000 0026 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0027 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0028     PORTD=0x00;
00005d e0e0      	LDI  R30,LOW(0)
00005e bbe2      	OUT  0x12,R30
                 ; 0000 0029     DDRD=0x00;
00005f bbe1      	OUT  0x11,R30
                 ; 0000 002A 
                 ; 0000 002B // USART initialization
                 ; 0000 002C // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 002D // USART Receiver: On
                 ; 0000 002E // USART Transmitter: On
                 ; 0000 002F // USART Mode: Asynchronous
                 ; 0000 0030 // USART Baud Rate: 38400
                 ; 0000 0031     UCSRA=0x00;
000060 b9eb      	OUT  0xB,R30
                 ; 0000 0032     UCSRB=0x18;
000061 e1e8      	LDI  R30,LOW(24)
000062 b9ea      	OUT  0xA,R30
                 ; 0000 0033     UCSRC=0x86;
000063 e8e6      	LDI  R30,LOW(134)
000064 bde0      	OUT  0x20,R30
                 ; 0000 0034     UBRRH=0x00;
000065 e0e0      	LDI  R30,LOW(0)
000066 bde0      	OUT  0x20,R30
                 ; 0000 0035     UBRRL=0x0C;
000067 e0ec      	LDI  R30,LOW(12)
000068 b9e9      	OUT  0x9,R30
                 ; 0000 0036 
                 ; 0000 0037 // Analog Comparator initialization
                 ; 0000 0038 // Analog Comparator: Off
                 ; 0000 0039 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 003A     ACSR=0x80;
000069 e8e0      	LDI  R30,LOW(128)
00006a b9e8      	OUT  0x8,R30
                 ; 0000 003B     SFIOR=0x00;
00006b e0e0      	LDI  R30,LOW(0)
00006c bfe0      	OUT  0x30,R30
                 ; 0000 003C 
                 ; 0000 003D // ADC initialization
                 ; 0000 003E // ADC Clock frequency: 115,200 kHz
                 ; 0000 003F // ADC Voltage Reference: AREF pin
                 ; 0000 0040     ADMUX=ADC_VREF_TYPE;
00006d b9e7      	OUT  0x7,R30
                 ; 0000 0041     ADCSRA=0x8E;
00006e e8ee      	LDI  R30,LOW(142)
00006f b9e6      	OUT  0x6,R30
                 ; 0000 0042 
                 ; 0000 0043 // Global enable interrupts
                 ; 0000 0044     #asm("sei")
000070 9478      	sei
                 ; 0000 0045 }
000071 9508      	RET
                 ;
                 ;// ADC interrupt service routine
                 ;interrupt [ADC_INT] void adc_isr(void)
                 ; 0000 0049 {
                 _adc_isr:
                 ; 0000 004A // Read the AD conversion result
                 ; 0000 004B     adc_data=ADCW;
                +
000072 b044     +IN R4 , 4
000073 b055     +IN R5 , 4 + 1
                 	__INWR 4,5,4
                 ; 0000 004C }
000074 9518      	RETI
                 ;
                 ;// Read the AD conversion result
                 ;// with noise canceling
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0051 {
                 _read_adc:
                 ; 0000 0052 ADMUX=adc_input|ADC_VREF_TYPE;
                 ;	adc_input -> Y+0
000075 81e8      	LD   R30,Y
000076 b9e7      	OUT  0x7,R30
                 ; 0000 0053 #asm
                 ; 0000 0054     in   r30,mcucr
000077 b7e5          in   r30,mcucr
                 ; 0000 0055     cbr  r30,__sm_mask
000078 78ef          cbr  r30,__sm_mask
                 ; 0000 0056     sbr  r30,__se_bit | __sm_adc_noise_red
000079 69e0          sbr  r30,__se_bit | __sm_adc_noise_red
                 ; 0000 0057     out  mcucr,r30
00007a bfe5          out  mcucr,r30
                 ; 0000 0058     sleep
00007b 9588          sleep
                 ; 0000 0059     cbr  r30,__se_bit
00007c 77ef          cbr  r30,__se_bit
                 ; 0000 005A     out  mcucr,r30
00007d bfe5          out  mcucr,r30
                 ; 0000 005B #endasm
                 ; 0000 005C return adc_data;
00007e 01f2      	MOVW R30,R4
00007f c029      	RJMP _0x2060001
                 ; 0000 005D }
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0062 {
                 _main:
                 ; 0000 0063     avr_init();
000080 dfd4      	RCALL _avr_init_G000
                 ; 0000 0064 
                 ; 0000 0065     while (1)
                 _0x3:
                 ; 0000 0066     {
                 ; 0000 0067         delay_ms(100);
000081 e6e4      	LDI  R30,LOW(100)
000082 e0f0      	LDI  R31,HIGH(100)
000083 d17d      	RCALL SUBOPT_0x0
000084 d1a8      	RCALL _delay_ms
                 ; 0000 0068         adc_data=read_adc(0);
000085 e0e0      	LDI  R30,LOW(0)
000086 93ea      	ST   -Y,R30
000087 dfed      	RCALL _read_adc
000088 012f      	MOVW R4,R30
                 ; 0000 0069 
                 ; 0000 006A         T_now = (1000 - adc_data) / 2;
000089 eee8      	LDI  R30,LOW(1000)
00008a e0f3      	LDI  R31,HIGH(1000)
00008b 19e4      	SUB  R30,R4
00008c 09f5      	SBC  R31,R5
00008d 95f6      	LSR  R31
00008e 95e7      	ROR  R30
00008f 013f      	MOVW R6,R30
                 ; 0000 006B 
                 ; 0000 006C         printf("%i", T_now);
                +
000090 e3ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000091 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000092 d16e      	RCALL SUBOPT_0x0
000093 01f3      	MOVW R30,R6
000094 2766      	CLR  R22
000095 2777      	CLR  R23
000096 d1b2      	RCALL __PUTPARD1
000097 e084      	LDI  R24,4
000098 d134      	RCALL _printf
000099 9626      	ADIW R28,6
                 ; 0000 006D         printf("#");
                +
00009a e4e1     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
00009b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
00009c d164      	RCALL SUBOPT_0x0
00009d e080      	LDI  R24,0
00009e d12e      	RCALL _printf
00009f 9622      	ADIW R28,2
                 ; 0000 006E         i++;
0000a0 01f4      	MOVW R30,R8
0000a1 9631      	ADIW R30,1
0000a2 014f      	MOVW R8,R30
                 ; 0000 006F 
                 ; 0000 0070     };
0000a3 cfdd      	RJMP _0x3
                 ; 0000 0071 }
                 _0x6:
0000a4 cfff      	RJMP _0x6
                 ;
                 ;
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 putchar0:
0000a5 9b5d           sbis usr,udre
0000a6 cffe           rjmp putchar0
0000a7 81e8           ld   r30,y
0000a8 b9ec           out  udr,r30
                 _0x2060001:
0000a9 9621      	ADIW R28,1
0000aa 9508      	RET
                 _put_usart_G100:
0000ab 81ea      	LDD  R30,Y+2
0000ac 93ea      	ST   -Y,R30
0000ad dff7      	RCALL _putchar
0000ae 81a8      	LD   R26,Y
0000af 81b9      	LDD  R27,Y+1
0000b0 91ed      	LD   R30,X+
0000b1 91fd      	LD   R31,X+
0000b2 9631      	ADIW R30,1
0000b3 93fe      	ST   -X,R31
0000b4 93ee      	ST   -X,R30
0000b5 9623      	ADIW R28,3
0000b6 9508      	RET
                 __print_G100:
0000b7 9726      	SBIW R28,6
0000b8 d195      	RCALL __SAVELOCR6
0000b9 e010      	LDI  R17,0
0000ba 85ac      	LDD  R26,Y+12
0000bb 85bd      	LDD  R27,Y+12+1
0000bc e0e0      	LDI  R30,LOW(0)
0000bd e0f0      	LDI  R31,HIGH(0)
0000be 93ed      	ST   X+,R30
0000bf 93fc      	ST   X,R31
                 _0x2000016:
0000c0 89ea      	LDD  R30,Y+18
0000c1 89fb      	LDD  R31,Y+18+1
0000c2 9631      	ADIW R30,1
0000c3 8bea      	STD  Y+18,R30
0000c4 8bfb      	STD  Y+18+1,R31
0000c5 9731      	SBIW R30,1
0000c6 91e4      	LPM  R30,Z
0000c7 2f2e      	MOV  R18,R30
0000c8 30e0      	CPI  R30,0
0000c9 f409      	BRNE PC+2
0000ca c0fc      	RJMP _0x2000018
0000cb 2fe1      	MOV  R30,R17
0000cc 30e0      	CPI  R30,0
0000cd f431      	BRNE _0x200001C
0000ce 3225      	CPI  R18,37
0000cf f411      	BRNE _0x200001D
0000d0 e011      	LDI  R17,LOW(1)
0000d1 c001      	RJMP _0x200001E
                 _0x200001D:
0000d2 d131      	RCALL SUBOPT_0x1
                 _0x200001E:
0000d3 c0f2      	RJMP _0x200001B
                 _0x200001C:
0000d4 30e1      	CPI  R30,LOW(0x1)
0000d5 f4a1      	BRNE _0x200001F
0000d6 3225      	CPI  R18,37
0000d7 f411      	BRNE _0x2000020
0000d8 d12b      	RCALL SUBOPT_0x1
0000d9 c0eb      	RJMP _0x20000C9
                 _0x2000020:
0000da e012      	LDI  R17,LOW(2)
0000db e040      	LDI  R20,LOW(0)
0000dc e000      	LDI  R16,LOW(0)
0000dd 322d      	CPI  R18,45
0000de f411      	BRNE _0x2000021
0000df e001      	LDI  R16,LOW(1)
0000e0 c0e5      	RJMP _0x200001B
                 _0x2000021:
0000e1 322b      	CPI  R18,43
0000e2 f411      	BRNE _0x2000022
0000e3 e24b      	LDI  R20,LOW(43)
0000e4 c0e1      	RJMP _0x200001B
                 _0x2000022:
0000e5 3220      	CPI  R18,32
0000e6 f411      	BRNE _0x2000023
0000e7 e240      	LDI  R20,LOW(32)
0000e8 c0dd      	RJMP _0x200001B
                 _0x2000023:
0000e9 c002      	RJMP _0x2000024
                 _0x200001F:
0000ea 30e2      	CPI  R30,LOW(0x2)
0000eb f439      	BRNE _0x2000025
                 _0x2000024:
0000ec e050      	LDI  R21,LOW(0)
0000ed e013      	LDI  R17,LOW(3)
0000ee 3320      	CPI  R18,48
0000ef f411      	BRNE _0x2000026
0000f0 6800      	ORI  R16,LOW(128)
0000f1 c0d4      	RJMP _0x200001B
                 _0x2000026:
0000f2 c003      	RJMP _0x2000027
                 _0x2000025:
0000f3 30e3      	CPI  R30,LOW(0x3)
0000f4 f009      	BREQ PC+2
0000f5 c0d0      	RJMP _0x200001B
                 _0x2000027:
0000f6 3320      	CPI  R18,48
0000f7 f010      	BRLO _0x200002A
0000f8 332a      	CPI  R18,58
0000f9 f008      	BRLO _0x200002B
                 _0x200002A:
0000fa c007      	RJMP _0x2000029
                 _0x200002B:
0000fb e0aa      	LDI  R26,LOW(10)
0000fc 9f5a      	MUL  R21,R26
0000fd 2d50      	MOV  R21,R0
0000fe 2fe2      	MOV  R30,R18
0000ff 53e0      	SUBI R30,LOW(48)
000100 0f5e      	ADD  R21,R30
000101 c0c4      	RJMP _0x200001B
                 _0x2000029:
000102 2fe2      	MOV  R30,R18
000103 36e3      	CPI  R30,LOW(0x63)
000104 f439      	BRNE _0x200002F
000105 d106      	RCALL SUBOPT_0x2
000106 d108      	RCALL SUBOPT_0x3
000107 d104      	RCALL SUBOPT_0x2
000108 81a4      	LDD  R26,Z+4
000109 93aa      	ST   -Y,R26
00010a d108      	RCALL SUBOPT_0x4
00010b c0b9      	RJMP _0x2000030
                 _0x200002F:
00010c 37e3      	CPI  R30,LOW(0x73)
00010d f429      	BRNE _0x2000032
00010e d10b      	RCALL SUBOPT_0x5
00010f d10c      	RCALL SUBOPT_0x6
000110 d0db      	RCALL _strlen
000111 2f1e      	MOV  R17,R30
000112 c007      	RJMP _0x2000033
                 _0x2000032:
000113 37e0      	CPI  R30,LOW(0x70)
000114 f449      	BRNE _0x2000035
000115 d104      	RCALL SUBOPT_0x5
000116 d105      	RCALL SUBOPT_0x6
000117 d0de      	RCALL _strlenf
000118 2f1e      	MOV  R17,R30
000119 6008      	ORI  R16,LOW(8)
                 _0x2000033:
00011a 6002      	ORI  R16,LOW(2)
00011b 770f      	ANDI R16,LOW(127)
00011c e030      	LDI  R19,LOW(0)
00011d c02d      	RJMP _0x2000036
                 _0x2000035:
00011e 36e4      	CPI  R30,LOW(0x64)
00011f f011      	BREQ _0x2000039
000120 36e9      	CPI  R30,LOW(0x69)
000121 f411      	BRNE _0x200003A
                 _0x2000039:
000122 6004      	ORI  R16,LOW(4)
000123 c002      	RJMP _0x200003B
                 _0x200003A:
000124 37e5      	CPI  R30,LOW(0x75)
000125 f429      	BRNE _0x200003C
                 _0x200003B:
000126 e2e6      	LDI  R30,LOW(_tbl10_G100*2)
000127 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000128 d0fa      	RCALL SUBOPT_0x7
000129 e015      	LDI  R17,LOW(5)
00012a c00b      	RJMP _0x200003D
                 _0x200003C:
00012b 35e8      	CPI  R30,LOW(0x58)
00012c f411      	BRNE _0x200003F
00012d 6008      	ORI  R16,LOW(8)
00012e c003      	RJMP _0x2000040
                 _0x200003F:
00012f 37e8      	CPI  R30,LOW(0x78)
000130 f009      	BREQ PC+2
000131 c093      	RJMP _0x2000071
                 _0x2000040:
000132 e3e0      	LDI  R30,LOW(_tbl16_G100*2)
000133 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000134 d0ee      	RCALL SUBOPT_0x7
000135 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000136 ff02      	SBRS R16,2
000137 c011      	RJMP _0x2000042
000138 d0e1      	RCALL SUBOPT_0x5
000139 d0ec      	RCALL SUBOPT_0x8
00013a 85ab      	LDD  R26,Y+11
00013b 23aa      	TST  R26
00013c f432      	BRPL _0x2000043
00013d 85ea      	LDD  R30,Y+10
00013e 85fb      	LDD  R31,Y+10+1
00013f d0fd      	RCALL __ANEGW1
000140 87ea      	STD  Y+10,R30
000141 87fb      	STD  Y+10+1,R31
000142 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000143 3040      	CPI  R20,0
000144 f011      	BREQ _0x2000044
000145 5f1f      	SUBI R17,-LOW(1)
000146 c001      	RJMP _0x2000045
                 _0x2000044:
000147 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000148 c002      	RJMP _0x2000046
                 _0x2000042:
000149 d0d0      	RCALL SUBOPT_0x5
00014a d0db      	RCALL SUBOPT_0x8
                 _0x2000046:
                 _0x2000036:
00014b fd00      	SBRC R16,0
00014c c010      	RJMP _0x2000047
                 _0x2000048:
00014d 1715      	CP   R17,R21
00014e f470      	BRSH _0x200004A
00014f ff07      	SBRS R16,7
000150 c008      	RJMP _0x200004B
000151 ff02      	SBRS R16,2
000152 c004      	RJMP _0x200004C
000153 7f0b      	ANDI R16,LOW(251)
000154 2f24      	MOV  R18,R20
000155 5011      	SUBI R17,LOW(1)
000156 c001      	RJMP _0x200004D
                 _0x200004C:
000157 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000158 c001      	RJMP _0x200004E
                 _0x200004B:
000159 e220      	LDI  R18,LOW(32)
                 _0x200004E:
00015a d0a9      	RCALL SUBOPT_0x1
00015b 5051      	SUBI R21,LOW(1)
00015c cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00015d 2f31      	MOV  R19,R17
00015e ff01      	SBRS R16,1
00015f c015      	RJMP _0x200004F
                 _0x2000050:
000160 3030      	CPI  R19,0
000161 f091      	BREQ _0x2000052
000162 ff03      	SBRS R16,3
000163 c005      	RJMP _0x2000053
000164 81ee      	LDD  R30,Y+6
000165 81ff      	LDD  R31,Y+6+1
000166 9125      	LPM  R18,Z+
000167 d0bb      	RCALL SUBOPT_0x7
000168 c005      	RJMP _0x2000054
                 _0x2000053:
000169 81ae      	LDD  R26,Y+6
00016a 81bf      	LDD  R27,Y+6+1
00016b 912d      	LD   R18,X+
00016c 83ae      	STD  Y+6,R26
00016d 83bf      	STD  Y+6+1,R27
                 _0x2000054:
00016e d095      	RCALL SUBOPT_0x1
00016f 3050      	CPI  R21,0
000170 f009      	BREQ _0x2000055
000171 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000172 5031      	SUBI R19,LOW(1)
000173 cfec      	RJMP _0x2000050
                 _0x2000052:
000174 c047      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000175 e320      	LDI  R18,LOW(48)
000176 81ee      	LDD  R30,Y+6
000177 81ff      	LDD  R31,Y+6+1
000178 d0cc      	RCALL __GETW1PF
000179 87e8      	STD  Y+8,R30
00017a 87f9      	STD  Y+8+1,R31
00017b 81ee      	LDD  R30,Y+6
00017c 81ff      	LDD  R31,Y+6+1
00017d 9632      	ADIW R30,2
00017e d0a4      	RCALL SUBOPT_0x7
                 _0x200005A:
00017f 85e8      	LDD  R30,Y+8
000180 85f9      	LDD  R31,Y+8+1
000181 85aa      	LDD  R26,Y+10
000182 85bb      	LDD  R27,Y+10+1
000183 17ae      	CP   R26,R30
000184 07bf      	CPC  R27,R31
000185 f050      	BRLO _0x200005C
000186 5f2f      	SUBI R18,-LOW(1)
000187 85a8      	LDD  R26,Y+8
000188 85b9      	LDD  R27,Y+8+1
000189 85ea      	LDD  R30,Y+10
00018a 85fb      	LDD  R31,Y+10+1
00018b 1bea      	SUB  R30,R26
00018c 0bfb      	SBC  R31,R27
00018d 87ea      	STD  Y+10,R30
00018e 87fb      	STD  Y+10+1,R31
00018f cfef      	RJMP _0x200005A
                 _0x200005C:
000190 332a      	CPI  R18,58
000191 f028      	BRLO _0x200005D
000192 ff03      	SBRS R16,3
000193 c002      	RJMP _0x200005E
000194 5f29      	SUBI R18,-LOW(7)
000195 c001      	RJMP _0x200005F
                 _0x200005E:
000196 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000197 fd04      	SBRC R16,4
000198 c019      	RJMP _0x2000061
000199 3321      	CPI  R18,49
00019a f420      	BRSH _0x2000063
00019b 85a8      	LDD  R26,Y+8
00019c 85b9      	LDD  R27,Y+8+1
00019d 9711      	SBIW R26,1
00019e f409      	BRNE _0x2000062
                 _0x2000063:
00019f c009      	RJMP _0x20000CA
                 _0x2000062:
0001a0 1753      	CP   R21,R19
0001a1 f010      	BRLO _0x2000067
0001a2 ff00      	SBRS R16,0
0001a3 c001      	RJMP _0x2000068
                 _0x2000067:
0001a4 c011      	RJMP _0x2000066
                 _0x2000068:
0001a5 e220      	LDI  R18,LOW(32)
0001a6 ff07      	SBRS R16,7
0001a7 c00a      	RJMP _0x2000069
0001a8 e320      	LDI  R18,LOW(48)
                 _0x20000CA:
0001a9 6100      	ORI  R16,LOW(16)
0001aa ff02      	SBRS R16,2
0001ab c006      	RJMP _0x200006A
0001ac 7f0b      	ANDI R16,LOW(251)
0001ad 934a      	ST   -Y,R20
0001ae d064      	RCALL SUBOPT_0x4
0001af 3050      	CPI  R21,0
0001b0 f009      	BREQ _0x200006B
0001b1 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0001b2 d051      	RCALL SUBOPT_0x1
0001b3 3050      	CPI  R21,0
0001b4 f009      	BREQ _0x200006C
0001b5 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0001b6 5031      	SUBI R19,LOW(1)
0001b7 85a8      	LDD  R26,Y+8
0001b8 85b9      	LDD  R27,Y+8+1
0001b9 9712      	SBIW R26,2
0001ba f008      	BRLO _0x2000059
0001bb cfb9      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0001bc ff00      	SBRS R16,0
0001bd c007      	RJMP _0x200006D
                 _0x200006E:
0001be 3050      	CPI  R21,0
0001bf f029      	BREQ _0x2000070
0001c0 5051      	SUBI R21,LOW(1)
0001c1 e2e0      	LDI  R30,LOW(32)
0001c2 93ea      	ST   -Y,R30
0001c3 d04f      	RCALL SUBOPT_0x4
0001c4 cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
0001c5 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0001c6 cef9      	RJMP _0x2000016
                 _0x2000018:
0001c7 85ac      	LDD  R26,Y+12
0001c8 85bd      	LDD  R27,Y+12+1
0001c9 d077      	RCALL __GETW1P
0001ca d08a      	RCALL __LOADLOCR6
0001cb 9664      	ADIW R28,20
0001cc 9508      	RET
                 _printf:
0001cd 92ff      	PUSH R15
0001ce 2ef8      	MOV  R15,R24
0001cf 9726      	SBIW R28,6
0001d0 d081      	RCALL __SAVELOCR2
0001d1 01de      	MOVW R26,R28
0001d2 9614      	ADIW R26,4
0001d3 d065      	RCALL __ADDW2R15
0001d4 018d      	MOVW R16,R26
0001d5 e0e0      	LDI  R30,LOW(0)
0001d6 83ec      	STD  Y+4,R30
0001d7 83ed      	STD  Y+4+1,R30
0001d8 83ee      	STD  Y+6,R30
0001d9 83ef      	STD  Y+6+1,R30
0001da 01de      	MOVW R26,R28
0001db 9618      	ADIW R26,8
0001dc d05c      	RCALL __ADDW2R15
0001dd d063      	RCALL __GETW1P
0001de d022      	RCALL SUBOPT_0x0
0001df 931a      	ST   -Y,R17
0001e0 930a      	ST   -Y,R16
0001e1 eaeb      	LDI  R30,LOW(_put_usart_G100)
0001e2 e0f0      	LDI  R31,HIGH(_put_usart_G100)
0001e3 d01d      	RCALL SUBOPT_0x0
0001e4 01fe      	MOVW R30,R28
0001e5 9638      	ADIW R30,8
0001e6 d01a      	RCALL SUBOPT_0x0
0001e7 decf      	RCALL __print_G100
0001e8 d070      	RCALL __LOADLOCR2
0001e9 9628      	ADIW R28,8
0001ea 90ff      	POP  R15
0001eb 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
0001ec 91a9          ld   r26,y+
0001ed 91b9          ld   r27,y+
0001ee 27ee          clr  r30
0001ef 27ff          clr  r31
                 strlen0:
0001f0 916d          ld   r22,x+
0001f1 2366          tst  r22
0001f2 f011          breq strlen1
0001f3 9631          adiw r30,1
0001f4 cffb          rjmp strlen0
                 strlen1:
0001f5 9508          ret
                 _strlenf:
0001f6 27aa          clr  r26
0001f7 27bb          clr  r27
0001f8 91e9          ld   r30,y+
0001f9 91f9          ld   r31,y+
                 strlenf0:
0001fa 9005      	lpm  r0,z+
0001fb 2000          tst  r0
0001fc f011          breq strlenf1
0001fd 9611          adiw r26,1
0001fe cffb          rjmp strlenf0
                 strlenf1:
0001ff 01fd          movw r30,r26
000200 9508          ret
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
000201 93fa      	ST   -Y,R31
000202 93ea      	ST   -Y,R30
000203 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x1:
000204 932a      	ST   -Y,R18
000205 85ed      	LDD  R30,Y+13
000206 85fe      	LDD  R31,Y+13+1
000207 dff9      	RCALL SUBOPT_0x0
000208 89e9      	LDD  R30,Y+17
000209 89fa      	LDD  R31,Y+17+1
00020a 9509      	ICALL
00020b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
00020c 89e8      	LDD  R30,Y+16
00020d 89f9      	LDD  R31,Y+16+1
00020e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
00020f 9734      	SBIW R30,4
000210 8be8      	STD  Y+16,R30
000211 8bf9      	STD  Y+16+1,R31
000212 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x4:
000213 85ed      	LDD  R30,Y+13
000214 85fe      	LDD  R31,Y+13+1
000215 dfeb      	RCALL SUBOPT_0x0
000216 89e9      	LDD  R30,Y+17
000217 89fa      	LDD  R31,Y+17+1
000218 9509      	ICALL
000219 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
00021a dff1      	RCALL SUBOPT_0x2
00021b cff3      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
00021c 89a8      	LDD  R26,Y+16
00021d 89b9      	LDD  R27,Y+16+1
00021e 9614      	ADIW R26,4
00021f d021      	RCALL __GETW1P
000220 83ee      	STD  Y+6,R30
000221 83ff      	STD  Y+6+1,R31
000222 cfde      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000223 83ee      	STD  Y+6,R30
000224 83ff      	STD  Y+6+1,R31
000225 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
000226 89a8      	LDD  R26,Y+16
000227 89b9      	LDD  R27,Y+16+1
000228 9614      	ADIW R26,4
000229 d017      	RCALL __GETW1P
00022a 87ea      	STD  Y+10,R30
00022b 87fb      	STD  Y+10+1,R31
00022c 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00022d 91e9      	ld   r30,y+
00022e 91f9      	ld   r31,y+
00022f 9630      	adiw r30,0
000230 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000231 ed80     +LDI R24 , LOW ( 0x7D0 )
000232 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000233 9701     +SBIW R24 , 1
000234 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000235 95a8      	wdr
000236 9731      	sbiw r30,1
000237 f7c9      	brne __delay_ms0
                 __delay_ms1:
000238 9508      	ret
                 
                 __ADDW2R15:
000239 2400      	CLR  R0
00023a 0daf      	ADD  R26,R15
00023b 1db0      	ADC  R27,R0
00023c 9508      	RET
                 
                 __ANEGW1:
00023d 95f1      	NEG  R31
00023e 95e1      	NEG  R30
00023f 40f0      	SBCI R31,0
000240 9508      	RET
                 
                 __GETW1P:
000241 91ed      	LD   R30,X+
000242 91fc      	LD   R31,X
000243 9711      	SBIW R26,1
000244 9508      	RET
                 
                 __GETW1PF:
000245 9005      	LPM  R0,Z+
000246 91f4      	LPM  R31,Z
000247 2de0      	MOV  R30,R0
000248 9508      	RET
                 
                 __PUTPARD1:
000249 937a      	ST   -Y,R23
00024a 936a      	ST   -Y,R22
00024b 93fa      	ST   -Y,R31
00024c 93ea      	ST   -Y,R30
00024d 9508      	RET
                 
                 __SAVELOCR6:
00024e 935a      	ST   -Y,R21
                 __SAVELOCR5:
00024f 934a      	ST   -Y,R20
                 __SAVELOCR4:
000250 933a      	ST   -Y,R19
                 __SAVELOCR3:
000251 932a      	ST   -Y,R18
                 __SAVELOCR2:
000252 931a      	ST   -Y,R17
000253 930a      	ST   -Y,R16
000254 9508      	RET
                 
                 __LOADLOCR6:
000255 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000256 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000257 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000258 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000259 8119      	LDD  R17,Y+1
00025a 8108      	LD   R16,Y
00025b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   2 r6 :   2 r7 :   0 
r8 :   2 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  28 r17:  17 r18:  27 r19:   8 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  12 r25:   3 r26:  37 r27:  18 r28:  12 r29:   1 r30: 146 r31:  49 
x  :  13 y  : 102 z  :  13 
Registers used: 26 out of 35 (74.3%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :  18 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  13 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  22 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :   0 
cbr   :   2 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   9 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   3 
cpc   :   1 cpi   :  29 cpse  :   0 dec   :   1 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :   3 
inc   :   0 ld    :  16 ldd   :  51 ldi   :  69 lds   :   0 lpm   :  14 
lsl   :   0 lsr   :   1 mov   :  11 movw  :  14 mul   :   1 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   0 ori   :   6 out   :  27 
pop   :   1 push  :   1 rcall :  54 ret   :  22 reti  :   1 rjmp  :  76 
rol   :   0 ror   :   1 sbc   :   2 sbci  :   1 sbi   :   0 sbic  :   0 
sbis  :   1 sbiw  :  12 sbr   :   1 sbrc  :   2 sbrs  :  10 sec   :   0 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   1 spm   :   0 st    :  27 std   :  22 
sts   :   0 sub   :   2 subi  :  13 swap  :   0 tst   :   3 wdr   :   1 

Instructions used: 51 out of 114 (44.7%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0004b8   1170     38   1208    8192  14.7%
[.dseg] 0x000060 0x000160      0      0      0    1119   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
