################################################################################
#                                                                              #
#      IAR Universal Linker V4.61L/W32                                         #
#                                                                              #
#           Link time     =  16/Aug/2010  00:12:11                             #
#           Target CPU    =  A90                                               #
#           List file     =  "D:\works\docs\статьи\files\09\Blink LED mega8\De #
#                            bug\List\blink_LED.map"                           #
#           Output file 1 =  "D:\works\docs\статьи\files\09\Blink LED mega8\De #
#                            bug\Exe\blink_LED.hex"                            #
#                            Format: intel-extended, variant: -y(CODE)         #
#           Output file 2 =  "D:\works\docs\статьи\files\09\Blink LED mega8\De #
#                            bug\Exe\blink_LED.ee.hex"                         #
#                            Format: intel-extended, variant: -y(XDATA)        #
#           Output file 3 =  "D:\works\docs\статьи\files\09\Blink LED mega8\De #
#                            bug\Exe\blink_LED.d90"                            #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -Ointel-extended,(CODE)=.hex                      #
#                            -Ointel-extended,(XDATA)=.ee.hex                  #
#                            "D:\works\docs\статьи\files\09\Blink LED mega8\De #
#                            bug\Obj\RS232.r90"                                #
#                            "D:\works\docs\статьи\files\09\Blink LED mega8\De #
#                            bug\Obj\main.r90"                                 #
#                            -o                                                #
#                            "D:\works\docs\статьи\files\09\Blink LED mega8\De #
#                            bug\Exe\blink_LED.d90"                            #
#                            -l                                                #
#                            "D:\works\docs\статьи\files\09\Blink LED mega8\De #
#                            bug\List\blink_LED.map"                           #
#                            -xms                                              #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench Evaluation 5.4\avr\LIB\"                  #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench Evaluation 5.4\avr\src\template\cfgm8.xcl"  #
#                            (-D_..X_INTVEC_SIZE=26 -D_..X_FLASH_NEND=1FFF     #
#                            -D_..X_FLASH_END=1FFF -D_..X_SRAM_BASE=60         #
#                            -D_..X_SRAM_TBASE=_..X_SRAM_BASE                  #
#                            -D_..X_SRAM_TSIZE=(100-_..X_SRAM_BASE)            #
#                            -D_..X_SRAM_END=45F                               #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_END                #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_END                 #
#                            -D_..X_EXT_ROM_SIZE=0                             #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_END                  #
#                            -D_..X_EXT_NV_SIZE=0 -D_..X_EEPROM_END=1FF        #
#                            -D_..X_EEPROM_START=0) -D_..X_HEAP_SIZE=0         #
#                            -D_..X_TINY_HEAP_SIZE=0                           #
#                            -D_..X_NEAR_HEAP_SIZE=20 -D_..X_FAR_HEAP_SIZE=0   #
#                            -D_..X_HUGE_HEAP_SIZE=0 -D_..X_CSTACK_SIZE=20     #
#                            -D_..X_RSTACK_SIZE=20 -f                          #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench Evaluation 5.4\avr\src\template\cfg1soim.xc #
#                            l"                                                #
#                            (-ca90 -w29 -Z(CODE)INTVEC=0-_..X_INTVEC_SIZE     #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE- #
#                            _..X_CSTACK_END                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_CSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_CSTACK_END=_..X_SRAM_END                   #
#                            -D_..X_RSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_RSTACK_END=_..X_SRAM_END -rt -s            #
#                            __program_start                                   #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench Evaluation 5.4\avr\LIB\DLIB\dlAVR-1s-ec_mul #
#                            -n.r90"                                           #
#                            -e_PrintfSmall=_Printf                            #
#                                                                              #
#                           Copyright (C) 1987-2009 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  R10                    = REG
  R11                    = REG
  R4                     = REG
  R5                     = REG
  R6                     = REG
  R7                     = REG
  R8                     = REG
  R9                     = REG
  __64bit_doubles        = disabled
  __cpu                  = 1
  __cpu_name             = ATmega8
  __dlib_file_descriptor = 0
  __enhanced_core        = enabled
  __has_elpm             = false
  __memory_model         = 2
  __rt_version           = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_RSTACK_END         0000045F 
           _..X_RSTACK_BASE        00000060 
           _..X_CSTACK_END         0000045F 
           _..X_CSTACK_BASE        00000060 
           _..X_FLASH_BASE         00000026 
           _..X_RSTACK_SIZE        00000020 
           _..X_CSTACK_SIZE        00000020 
           _..X_HUGE_HEAP_SIZE     00000000 
           _..X_FAR_HEAP_SIZE      00000000 
           _..X_NEAR_HEAP_SIZE     00000020 
           _..X_TINY_HEAP_SIZE     00000000 
           _..X_HEAP_SIZE          00000000 
           _..X_EEPROM_START       00000000 
           _..X_EEPROM_END         000001FF 
           _..X_EXT_NV_SIZE        00000000 
           _..X_EXT_NV_BASE        0000045F 
           _..X_EXT_ROM_SIZE       00000000 
           _..X_EXT_ROM_BASE       0000045F 
           _..X_EXT_SRAM_SIZE      00000000 
           _..X_EXT_SRAM_BASE      0000045F 
           _..X_SRAM_END           0000045F 
           _..X_SRAM_TSIZE         000000A0 
           _..X_SRAM_TBASE         00000060 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00001FFF 
           _..X_FLASH_NEND         00001FFF 
           _..X_INTVEC_SIZE        00000026 
    *************************************************************************

  FILE NAME : D:\works\docs\статьи\files\09\Blink LED mega8\Debug\Obj\RS232.r90
  PROGRAM MODULE, NAME : RS232

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 0000002A - 0000002A (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   Tx232Handler
                                                   __low_level_init (main)
                                                   putchar
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRB                0000002A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002C - 0000002C (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   Rx232Handler
                                                   Tx232Handler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR                  0000002C 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000A0 - 000000AF (0x10 bytes), align: 0
  Segment part 11.            Intra module refs:   Rx232Handler
                                                   getchar
           LOCAL                   ADDRESS         
           =====                   =======         
           RxBuffer                000000A0 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000B0 - 000000B0 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   Rx232Handler
                                                   getchar
                                                   hasinput
           LOCAL                   ADDRESS         
           =====                   =======         
           RxHead                  000000B0 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000B1 - 000000B1 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   Rx232Handler
                                                   getchar
                                                   hasinput
           LOCAL                   ADDRESS         
           =====                   =======         
           RxTail                  000000B1 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000036 - 000000A7 (0x72 bytes), align: 1
  Segment part 18.            Intra module refs:   Rx232Handler::??INTVEC 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Rx232Handler            00000036 
               interrupt function
               CSTACK = 00000000 ( 00000011 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000A8 - 000000CF (0x28 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getchar                 000000A8        main (main)
               CSTACK = 00000000 ( 00000001 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000D0 - 000000DB (0xc bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hasinput                000000D0        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000B2 - 000000B9 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   Tx232Handler
                                                   putchar
           LOCAL                   ADDRESS         
           =====                   =======         
           TxBuffer                000000B2 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   Tx232Handler
                                                   putchar
           LOCAL                   ADDRESS         
           =====                   =======         
           TxHead                  000000BA 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Tx232Handler
                                                   putchar
           LOCAL                   ADDRESS         
           =====                   =======         
           TxTail                  000000BB 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000DC - 00000147 (0x6c bytes), align: 1
  Segment part 21.            Intra module refs:   Tx232Handler::??INTVEC 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tx232Handler            000000DC 
               interrupt function
               CSTACK = 00000000 ( 00000010 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000148 - 00000177 (0x30 bytes), align: 1
  Segment part 22.            Intra module refs:   puts_P
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           putchar                 00000148        main (main)
               CSTACK = 00000000 ( 00000002 )
               RSTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000178 - 0000018F (0x18 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           puts_P                  00000178        main (main)
               calls direct
               CSTACK = 00000000 ( 00000002 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001C, align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001D, align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 0000001D 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001E, align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                0000001E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                0000001F 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000017 (0x18 bytes), align: 1
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Rx232Handler::??INTVEC 22
                                   00000016 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000019 (0x1a bytes), align: 1
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Tx232Handler::??INTVEC 24
                                   00000018 
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000030 - 00000035 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   CntT1_ms (main)
                                                   RxBuffer
                                                   RxHead
                                                   RxTail
                                                   TxBuffer
                                                   TxHead
                                                   TxTail
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   00000030 

    *************************************************************************

  FILE NAME : D:\works\docs\статьи\files\09\Blink LED mega8\Debug\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000029 - 00000029 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   __low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRL                00000029 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000031 - 00000031 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   __low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 00000031 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000032 - 00000032 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   __low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTD                00000032 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000037 - 00000037 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   __low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRB                 00000037 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000038 - 00000038 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   __low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTB                00000038 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004A - 0000004B (0x2 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   __low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1A                0000004A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004E - 0000004E (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   __low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               0000004E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000059 - 00000059 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   __low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK                00000059 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000BC - 000000BF (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   main
                                                   overflow_timer1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CntT1_ms                000000BC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000190 - 000001CD (0x3e bytes), align: 1
  Segment part 21.            Intra module refs:   overflow_timer1::??INTVEC 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           overflow_timer1         00000190 
               interrupt function
               CSTACK = 00000000 ( 00000007 )
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000001CE - 000001F9 (0x2c bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        000001CE        ?call_low_level_init (?C_STARTUP)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000001FA - 00000217 (0x1e bytes), align: 1
  Segment part 23.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay                   000001FA 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000218 - 00000247 (0x30 bytes), align: 1
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000218        ?cstartup_call_main (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000026 - 0000002C (0x7 bytes), align: 0
  Segment part 19.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           main{1}{3}::str         00000026 
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000002D - 0000002F (0x3 bytes), align: 0
  Segment part 20.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           main{1}{4}::str         0000002D 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000000D (0xe bytes), align: 1
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           overflow_timer1::??INTVEC 12
                                   0000000C 

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench Evaluation 5.4\avr\LIB\DLIB\dlAVR-1s-ec_mul-n.r90
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000248 - 00000249 (0x2 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            00000248        __exit (?__exit)
               not allocated function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000024A - 00000259 (0x10 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  0000024A        Segment part 5 (?_exit)
               calls direct
               not allocated function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000025A, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   0000025A        ?cstartup_call_main (?C_STARTUP)
                                                   exit (?exit)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000025A - 0000025B (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000001 (0x2 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000025C, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              0000025C        Segment part 0 (?RESET)
           __RESTART               0000025C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000025C - 00000267 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000268 - 00000269 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    00000268 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000026A - 0000026F (0x6 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      0000026A        ?<Segment init: NEAR_Z> (RS232)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000270 - 00000275 (0x6 bytes), align: 1
  Segment part 11.            Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     00000270 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000276 - 00000277 (0x2 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00000276        ?cstartup_call_main (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_DIVMOD_L01

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000278 - 00000293 (0x1c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_DIVMOD_L01          00000278        Rx232Handler (RS232)
                                                   Tx232Handler (RS232)
                                                   getchar (RS232)
                                                   putchar (RS232)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000294 - 00000295 (0x2 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          00000294        putchar (RS232)
                                                   puts_P (RS232)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000296 - 00000297 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          00000296 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000298 - 00000299 (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EPILOGUE_B_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000029A - 0000029B (0x2 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B2_L09        0000029A        putchar (RS232)
                                                   puts_P (RS232)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000029C - 0000029D (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?EPILOGUE_B2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B1_L09        0000029C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000029E - 000002A7 (0xa bytes), align: 1
  Segment part 16.            Intra module refs:   ?EPILOGUE_B1_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B0_L09        0000029E 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000002A8 - 000002AF (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                000002A8 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002B0 - 000002B7 (0x8 bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              000002B0 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002B8 - 000002C3 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002C4 - 000002F7 (0x34 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          000002C4        ?need_segment_init (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000002 )

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000019 (0x1a bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 0000001A - 00000025 (0xc bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000019          1A   com    1
?FILL1               CODE          0000001A - 00000025           C   rel    0
NEAR_F               CODE          00000026 - 0000002F           A   rel    0
INITTAB              CODE          00000030 - 00000035           6   rel    0
CODE                 CODE          00000036 - 000002F7         2C2   rel    1
ABSOLUTE             DATA               0000001C                     rel    0
                     DATA               0000001D                   
                     DATA               0000001E                   
                     DATA               0000001F                   
                     DATA          00000029 - 0000002A           2 
                     DATA          0000002C - 0000002C           1 
                     DATA          00000031 - 00000032           2 
                     DATA          00000037 - 00000038           2 
                     DATA          0000004A - 0000004B           2 
                     DATA          0000004E - 0000004E           1 
                     DATA          00000059 - 00000059           1 
CSTACK               DATA          00000060 - 0000007F          20   dse    0
RSTACK               DATA          00000080 - 0000009F          20   dse    0
NEAR_I               DATA               000000A0                     dse    0
NEAR_Z               DATA          000000A0 - 000000BF          20   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 748 bytes of CODE memory (+             12 range fill )
  96 bytes of DATA memory (+ 11 absolute )

Errors: none
Warnings: none

