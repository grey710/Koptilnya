;//***************************************************************************
;//
;//  Author(s)...: Pashgan    http://ChipEnable.Ru
;//
;//  Target(s)...: ATMega8535
;//
;//  Compiler....: CodeVision 2.04
;//
;//  Description.: USART/UART. Используем кольцевой буфер
;//
;//  Data........: 3.01.10
;//
;//***************************************************************************
;#include <mega8535.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "usart.h"
;
;void main( void )
; 0000 0012 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0013   unsigned char symbol;
; 0000 0014   USART_Init();
;	symbol -> R17
;PCODE: $0000000E VOL: 0
; 0000 0015   #asm("sei");
;PCODE: $0000000F VOL: 0
	sei
;PCODE: $00000010 VOL: 0
; 0000 0016 
; 0000 0017   while(1){
;PCODE: $00000011 VOL: 0
; 0000 0018     symbol = USART_GetChar();   //взять символ из буфера
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0019     if (symbol == 't')          //если 't' - ответить
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 001A       USART_SendStr(" test - OK ");
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001B   }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001C }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0

	.DSEG
_0x7:
	.BYTE 0xC
