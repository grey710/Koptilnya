;#include "lcd_lib.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "bits_macros.h"
;
;inline void LCD_CommonFunc(unsigned char data)
; 0001 0005 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0006   PORT_DATA = data;		//вывод данных на шину индикатора
;	data -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 0007   SetBit(PORT_SIG, EN);	        //установка E в 1
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 0008   delay_us(2);
;PCODE: $00000013 VOL: 0
; 0001 0009   ClearBit(PORT_SIG, EN);	//установка E в 0 - записывающий фронт
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0001 000A   delay_us(40);
;PCODE: $00000016 VOL: 0
; 0001 000B }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;
;//функция записи команды
;void LCD_WriteCom(unsigned char data)
; 0001 000F {
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0001 0010   ClearBit(PORT_SIG, RS);	//установка RS в 0 - команды
;	data -> Y+0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0001 0011   LCD_CommonFunc(data);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 0012 }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;
;//функция записи данных
;void LCD_WriteData(unsigned char data)
; 0001 0016 {
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0001 0017   SetBit(PORT_SIG, RS);	        //установка RS в 1 - данные
;	data -> Y+0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0001 0018   LCD_CommonFunc(data);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 0019 }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;
;//функция инициализации
;void LCD_Init(void)
; 0001 001D {
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0001 001E   DDRX_DATA = 0xff;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0001 001F   PORT_DATA = 0xff;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0001 0020   DDRX_SIG = 0xff;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0001 0021   PORT_SIG |= (1<<RW)|(1<<RS)|(1<<EN);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0001 0022   ClearBit(PORT_SIG, RW);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 0023 
; 0001 0024   delay_ms(40);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0001 0025   LCD_WriteCom(0x38); //0b00111000 - 8 разрядная шина, 2 строки
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0001 0026   LCD_WriteCom(0xc);  //0b00001100 - дисплей включен, курсор, мерцание выключены
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0001 0027   LCD_WriteCom(0x1);  //0b00000001 - очистка дисплея
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0001 0028   delay_ms(2);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0001 0029   LCD_WriteCom(0x6);  //0b00000110 - курсор движется вправо, сдвига нет
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0001 002A }
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;
;//функция вывода строки
;void LCD_SendStringFlash(unsigned char __flash *str)
; 0001 002E {
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0001 002F   unsigned char data;
; 0001 0030   SetBit(PORT_SIG, RS);
;PCODE: $00000051 VOL: 0
;	*str -> Y+1
;	data -> R17
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0001 0031   while (*str)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0032   {
; 0001 0033     data = *str++;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0001 0034     LCD_CommonFunc(data);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0001 0035   }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0001 0036 }
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;
