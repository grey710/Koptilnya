
AVRASM ver. 2.1.30  D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm Mon Jul 25 02:15:44 2011

D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1051): warning: Register r5 already defined by the .DEF directive
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1052): warning: Register r4 already defined by the .DEF directive
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1053): warning: Register r7 already defined by the .DEF directive
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1054): warning: Register r8 already defined by the .DEF directive
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1055): warning: Register r6 already defined by the .DEF directive
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1056): warning: Register r11 already defined by the .DEF directive
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1057): warning: Register r10 already defined by the .DEF directive
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1058): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8535
                 ;Program type             : Application
                 ;Clock frequency          : 7,813000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 128 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8535
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 512
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rx_wr_index=R5
                 	.DEF _rx_counter=R4
                 	.DEF _zadergka_pri_nagatii=R7
                 	.DEF _zadergka_zastavka=R8
                 	.DEF _t_puskatel=R6
                 	.DEF __lcd_x=R11
                 	.DEF __lcd_y=R10
                 	.DEF __lcd_maxx=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 c0bc      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 c10b      	RJMP _timer1_compa_isr
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b c0e0      	RJMP _usart_rx_isr
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
000013 cfec      	RJMP 0x00
000014 cfeb      	RJMP 0x00
                 
                 _tbl10_G100:
000015 2710
000016 03e8
000017 0064
000018 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000019 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00001a 1000
00001b 0100
00001c 0010
00001d 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00001e 0000      	.DW  0x0000
                 
                 _0x6:
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1097): warning: .cseg .db misalignment - padding zero byte
00001f 0073      	.DB  0x73
                 _0x7:
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1099): warning: .cseg .db misalignment - padding zero byte
000020 004b      	.DB  0x4B
                 _0x8:
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1101): warning: .cseg .db misalignment - padding zero byte
000021 0069      	.DB  0x69
                 _0x9:
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1103): warning: .cseg .db misalignment - padding zero byte
000022 0041      	.DB  0x41
                 _0xA:
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1105): warning: .cseg .db misalignment - padding zero byte
000023 0004      	.DB  0x4
                 _0xB:
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1107): warning: .cseg .db misalignment - padding zero byte
000024 001e      	.DB  0x1E
                 _0xC:
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1109): warning: .cseg .db misalignment - padding zero byte
000025 000a      	.DB  0xA
                 _0xD:
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1111): warning: .cseg .db misalignment - padding zero byte
000026 0001      	.DB  0x1
                 _0xE:
D:\CAD\# Projects\Коптильня\Koptilnya\Koptilnya_for_2.05\List\Koptilnya.asm(1113): warning: .cseg .db misalignment - padding zero byte
000027 0001      	.DB  0x1
                 _0x175:
000028 c864
000029 03e8      	.DB  0x64,0xC8,0xE8,0x3
                 _0x0:
00002a 6f4b
00002b 7470
00002c 6c69
00002d 796e      	.DB  0x4B,0x6F,0x70,0x74,0x69,0x6C,0x6E,0x79
00002e 0061
00002f 2e76
000030 2e31
000031 0030      	.DB  0x61,0x0,0x76,0x2E,0x31,0x2E,0x30,0x0
000032 614d
000033 2078
000034 2054
000035 6172      	.DB  0x4D,0x61,0x78,0x20,0x54,0x20,0x72,0x61
000036 6f7a
000037 7267
000038 7665
000039 0061      	.DB  0x7A,0x6F,0x67,0x72,0x65,0x76,0x61,0x0
00003a 6325
00003b 6325
00003c 6325
00003d 4d00      	.DB  0x25,0x63,0x25,0x63,0x25,0x63,0x0,0x4D
00003e 6e69
00003f 5420
000040 7220
000041 7a61      	.DB  0x69,0x6E,0x20,0x54,0x20,0x72,0x61,0x7A
000042 676f
000043 6572
000044 6176
000045 4d00      	.DB  0x6F,0x67,0x72,0x65,0x76,0x61,0x0,0x4D
000046 7861
000047 5420
000048 7220
000049 6261      	.DB  0x61,0x78,0x20,0x54,0x20,0x72,0x61,0x62
00004a 746f
00004b 6169
00004c 4d00
00004d 6e69      	.DB  0x6F,0x74,0x69,0x61,0x0,0x4D,0x69,0x6E
00004e 5420
00004f 7220
000050 6261
000051 746f      	.DB  0x20,0x54,0x20,0x72,0x61,0x62,0x6F,0x74
000052 0069
000053 6954
000054 656d
000055 7220      	.DB  0x69,0x0,0x54,0x69,0x6D,0x65,0x20,0x72
000056 6261
000057 746f
000058 2c61
000059 6320      	.DB  0x61,0x62,0x6F,0x74,0x61,0x2C,0x20,0x63
00005a 0068
00005b 6954
00005c 656d
00005d 7220      	.DB  0x68,0x0,0x54,0x69,0x6D,0x65,0x20,0x72
00005e 6261
00005f 746f
000060 2c61
000061 6d20      	.DB  0x61,0x62,0x6F,0x74,0x61,0x2C,0x20,0x6D
000062 6e69
000063 5400
000064 6d69
000065 2065      	.DB  0x69,0x6E,0x0,0x54,0x69,0x6D,0x65,0x20
000066 6d73
000067 6b6f
000068 2c65
000069 6320      	.DB  0x73,0x6D,0x6F,0x6B,0x65,0x2C,0x20,0x63
00006a 0068
00006b 6954
00006c 656d
00006d 7320      	.DB  0x68,0x0,0x54,0x69,0x6D,0x65,0x20,0x73
00006e 6f6d
00006f 656b
000070 202c
000071 696d      	.DB  0x6D,0x6F,0x6B,0x65,0x2C,0x20,0x6D,0x69
000072 006e
000073 4152
000074 4f5a
000075 5247      	.DB  0x6E,0x0,0x52,0x41,0x5A,0x4F,0x47,0x52
000076 5645
000077 e0d0
000078 eee7
000079 f0e3      	.DB  0x45,0x56,0xD0,0xE0,0xE7,0xEE,0xE3,0xF0
00007a e2e5
00007b 2500
00007c 2563
00007d 3a63      	.DB  0xE5,0xE2,0x0,0x25,0x63,0x25,0x63,0x3A
00007e 6325
00007f 6325
000080 253a
000081 2563      	.DB  0x25,0x63,0x25,0x63,0x3A,0x25,0x63,0x25
000082 2063
000083 3d54
000084 6325
000085 6325      	.DB  0x63,0x20,0x54,0x3D,0x25,0x63,0x25,0x63
000086 6325
000087 4320
000088 5200
000089 4241      	.DB  0x25,0x63,0x20,0x43,0x0,0x52,0x41,0x42
00008a 544f
00008b 0041
00008c 4d53
00008d 4b4f      	.DB  0x4F,0x54,0x41,0x0,0x53,0x4D,0x4F,0x4B
00008e 0045
00008f 5453
000090 504f
000091 7700      	.DB  0x45,0x0,0x53,0x54,0x4F,0x50,0x0,0x77
000092 7777
000093 782e
000094 7878
000095 752e      	.DB  0x77,0x77,0x2E,0x78,0x78,0x78,0x2E,0x75
000096 0061      	.DB  0x61,0x0
                 _0x2020003:
000097 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000098 0001      	.DW  0x01
000099 0002      	.DW  0x02
00009a 003c      	.DW  __REG_BIT_VARS*2
                 
00009b 0001      	.DW  0x01
00009c 00e8      	.DW  _t_max_razogrev
00009d 003e      	.DW  _0x6*2
                 
00009e 0001      	.DW  0x01
00009f 00e9      	.DW  _t_max_rabochee
0000a0 0040      	.DW  _0x7*2
                 
0000a1 0001      	.DW  0x01
0000a2 00ea      	.DW  _t_min_razogrev
0000a3 0042      	.DW  _0x8*2
                 
0000a4 0001      	.DW  0x01
0000a5 00eb      	.DW  _t_min_rabochee
0000a6 0044      	.DW  _0x9*2
                 
0000a7 0001      	.DW  0x01
0000a8 00ec      	.DW  _time_rabota_ch
0000a9 0046      	.DW  _0xA*2
                 
0000aa 0001      	.DW  0x01
0000ab 00ed      	.DW  _time_rabota_min
0000ac 0048      	.DW  _0xB*2
                 
0000ad 0001      	.DW  0x01
0000ae 00ef      	.DW  _time_smoke_min
0000af 004a      	.DW  _0xC*2
                 
0000b0 0001      	.DW  0x01
0000b1 00f7      	.DW  _regim_rabot
0000b2 004c      	.DW  _0xD*2
                 
0000b3 0001      	.DW  0x01
0000b4 00f8      	.DW  _regim_rabot_old
0000b5 004e      	.DW  _0xE*2
                 
0000b6 0004      	.DW  0x04
0000b7 0006      	.DW  0x06
0000b8 0050      	.DW  _0x175*2
                 
0000b9 0002      	.DW  0x02
0000ba 0119      	.DW  __base_y_G101
0000bb 012e      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
0000bc 0000      	.DW  0
                 
                 __RESET:
0000bd 94f8      	CLI
0000be 27ee      	CLR  R30
0000bf bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000c0 e0f1      	LDI  R31,1
0000c1 bffb      	OUT  GICR,R31
0000c2 bfeb      	OUT  GICR,R30
0000c3 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0000c4 e1f8      	LDI  R31,0x18
0000c5 bdf1      	OUT  WDTCR,R31
0000c6 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000c7 e08d      	LDI  R24,(14-2)+1
0000c8 e0a2      	LDI  R26,2
0000c9 27bb      	CLR  R27
                 __CLEAR_REG:
0000ca 93ed      	ST   X+,R30
0000cb 958a      	DEC  R24
0000cc f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000cd e080      	LDI  R24,LOW(0x200)
0000ce e092      	LDI  R25,HIGH(0x200)
0000cf e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
0000d0 93ed      	ST   X+,R30
0000d1 9701      	SBIW R24,1
0000d2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000d3 e3e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000d4 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000d5 9185      	LPM  R24,Z+
0000d6 9195      	LPM  R25,Z+
0000d7 9700      	SBIW R24,0
0000d8 f061      	BREQ __GLOBAL_INI_END
0000d9 91a5      	LPM  R26,Z+
0000da 91b5      	LPM  R27,Z+
0000db 9005      	LPM  R0,Z+
0000dc 9015      	LPM  R1,Z+
0000dd 01bf      	MOVW R22,R30
0000de 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000df 9005      	LPM  R0,Z+
0000e0 920d      	ST   X+,R0
0000e1 9701      	SBIW R24,1
0000e2 f7e1      	BRNE __GLOBAL_INI_LOOP
0000e3 01fb      	MOVW R30,R22
0000e4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;STACK POINTER INITIALIZATION
0000e5 e5ef      	LDI  R30,LOW(0x25F)
0000e6 bfed      	OUT  SPL,R30
0000e7 e0e2      	LDI  R30,HIGH(0x25F)
0000e8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000e9 eec0      	LDI  R28,LOW(0xE0)
0000ea e0d0      	LDI  R29,HIGH(0xE0)
                 
0000eb c3cd      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xE0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;CodeWizardAVR V2.05.0 Professional
                 ;Project : Koptilnya
                 ;Version : 1
                 ;Date    : 14.07.2011
                 ;
                 ;Chip type               : ATmega8535
                 ;AVR Core Clock frequency: 7,813000 MHz
                 ;*****************************************************/
                 ;// Standard Input/Output functions
                 ;#include <mega8535.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;// Alphanumeric LCD Module functions
                 ;//Инициализация экрана
                 ;#asm
                   .equ __lcd_port=0x18 ;PORTB
                 ; 0000 0013 #endasm
                 ;#include <lcd.h>
                 ;//#include "lcd_rus\lcd_rus.h"
                 ;//=================================
                 ;#ifndef RXB8
                 ;#define RXB8 1
                 ;#endif
                 ;
                 ;#ifndef TXB8
                 ;#define TXB8 0
                 ;#endif
                 ;
                 ;#ifndef UPE
                 ;#define UPE 2
                 ;#endif
                 ;
                 ;#ifndef DOR
                 ;#define DOR 3
                 ;#endif
                 ;
                 ;#ifndef FE
                 ;#define FE 4
                 ;#endif
                 ;
                 ;#ifndef UDRE
                 ;#define UDRE 5
                 ;#endif
                 ;
                 ;#ifndef RXC
                 ;#define RXC 7
                 ;#endif
                 ;
                 ;#define FRAMING_ERROR       (1<<FE)
                 ;#define PARITY_ERROR        (1<<UPE)
                 ;#define DATA_OVERRUN        (1<<DOR)
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE)
                 ;#define RX_COMPLETE         (1<<RXC)
                 ;
                 ;#define _DEBUG_TERMINAL_IO_
                 ;
                 ;// USART Receiver buffer
                 ;#define RX_BUFFER_SIZE 8
                 ;char rx_buffer[RX_BUFFER_SIZE];
                 ;
                 ;//unsigned char rx_wr_index,rx_rd_index,rx_counter;
                 ;unsigned char rx_wr_index,rx_counter;
                 ;
                 ;// This flag is set on USART Receiver buffer overflow
                 ;bit rx_buffer_overflow;
                 ;
                 ;//===================================================================
                 ;// USART Receiver interrupt service routine
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 0048 {
                 
                 	.CSEG
                 _usart_rx_isr:
0000ec 93ea      	ST   -Y,R30
0000ed 93fa      	ST   -Y,R31
0000ee b7ef      	IN   R30,SREG
0000ef 93ea      	ST   -Y,R30
                 ; 0000 0049 char status,data;
                 ; 0000 004A 
                 ; 0000 004B #asm("cli")
0000f0 d7f7      	RCALL __SAVELOCR2
                 ;	status -> R17
                 ;	data -> R16
0000f1 94f8      	cli
                 ; 0000 004C 
                 ; 0000 004D status=UCSRA;
0000f2 b11b      	IN   R17,11
                 ; 0000 004E data=UDR;
0000f3 b10c      	IN   R16,12
                 ; 0000 004F if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0000f4 2fe1      	MOV  R30,R17
0000f5 71ec      	ANDI R30,LOW(0x1C)
0000f6 f009      	BREQ PC+2
0000f7 c013      	RJMP _0x3
                 ; 0000 0050     {
                 ; 0000 0051         rx_buffer[rx_wr_index++]=data;
0000f8 2de5      	MOV  R30,R5
0000f9 9453      	INC  R5
0000fa d655      	RCALL SUBOPT_0x0
0000fb 52e0      	SUBI R30,LOW(-_rx_buffer)
0000fc 4fff      	SBCI R31,HIGH(-_rx_buffer)
0000fd 8300      	ST   Z,R16
                 ; 0000 0052 
                 ; 0000 0053         if (rx_wr_index == RX_BUFFER_SIZE) rx_wr_index=0;
0000fe e0e8      	LDI  R30,LOW(8)
0000ff 15e5      	CP   R30,R5
000100 f009      	BREQ PC+2
000101 c001      	RJMP _0x4
000102 2455      	CLR  R5
                 ; 0000 0054         if (++rx_counter == RX_BUFFER_SIZE)
                 _0x4:
000103 9443      	INC  R4
000104 e0e8      	LDI  R30,LOW(8)
000105 15e4      	CP   R30,R4
000106 f009      	BREQ PC+2
000107 c003      	RJMP _0x5
                 ; 0000 0055         {
                 ; 0000 0056             rx_counter=0;
000108 2444      	CLR  R4
                 ; 0000 0057             rx_buffer_overflow=1;
000109 9468      	SET
00010a f820      	BLD  R2,0
                 ; 0000 0058         }
                 ; 0000 0059     }
                 _0x5:
                 ; 0000 005A #asm("sei")
                 _0x3:
00010b 9478      	sei
                 ; 0000 005B }
00010c d7e5      	RCALL __LOADLOCR2P
00010d 91e9      	LD   R30,Y+
00010e bfef      	OUT  SREG,R30
00010f 91f9      	LD   R31,Y+
000110 91e9      	LD   R30,Y+
000111 9518      	RETI
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;
                 ;char getchar(void)
                 ;{
                 ;    char data;
                 ;    while (rx_counter==0);
                 ;    data=rx_buffer[rx_rd_index++];
                 ;
                 ;    #asm("cli")
                 ;    --rx_counter;
                 ;    #asm("sei")
                 ;    return data;
                 ;}
                 ;
                 ;#pragma used-
                 ;#endif
                 ;
                 ;//=============================================================================
                 ;// управление в режимах
                 ;//порты подключения управляющих реле
                 ;#define blok_lamp_1_ON         PORTA.0 = 1    //Включатель/выключатель первого блока ламп
                 ;#define blok_lamp_2_ON         PORTA.1 = 1    //Включатель/выключатель второго блока ламп
                 ;#define blok_lamp_3_ON         PORTA.2 = 1    //Включатель/выключатель третьего блока ламп
                 ;#define blok_lamp_en_ON        PORTA.3 = 1    //Включатель блока ламп
                 ;#define blok_lamp_dis_ON       PORTA.4 = 1    //Выключатель блока ламп
                 ;#define blok_silovoy_en_ON     PORTA.5 = 1    //Включатель блока электромагнит, дымогенератор, высокое напряжение
                 ;#define blok_silovoy_dis_ON    PORTA.6 = 1    //Выключатель блока электромагнит, дымогенератор, высокое напряжение
                 ;#define blok_rezerv_ON         PORTA.7 = 1    //резерв
                 ;
                 ;#define blok_lamp_1_OFF         PORTA.0 = 0      //Включатель/выключатель первого блока ламп
                 ;#define blok_lamp_2_OFF         PORTA.1 = 0     //Включатель/выключатель второго блока ламп
                 ;#define blok_lamp_3_OFF         PORTA.2 = 0     //Включатель/выключатель третьего блока ламп
                 ;#define blok_lamp_en_OFF        PORTA.3 = 0     //Включатель блока ламп
                 ;#define blok_lamp_dis_OFF       PORTA.4 = 0     //Выключатель блока ламп
                 ;#define blok_silovoy_en_OFF     PORTA.5 = 0     //Включатель блока электромагнит, дымогенератор, высокое напряжение
                 ;#define blok_silovoy_dis_OFF    PORTA.6 = 0     //Выключатель блока электромагнит, дымогенератор, высокое напряжение
                 ;#define blok_rezerv_OFF         PORTA.7 = 0     //резерв
                 ;
                 ;//=============================================================================
                 ;//Режимы работы                                         regim_rabot
                 ;//Инициализация (заставка при включении).               1
                 ;//Корректировка максимальной температуры разогрева. 	11
                 ;//Корректировка минимальной температуры разогрева.      12
                 ;//Корректировка максимальной температуры копчения.  	21
                 ;//Корректировка минимальной температуры копчения.       22
                 ;//Корректировка часов времени работы.	                31
                 ;//Корректировка минут времени работы.                   32
                 ;//Корректировка часов времени работы вытяжки.	        41
                 ;//Корректировка минут времени работы вытяжки.	        42
                 ;//Работа в режиме разогрева.	                        60
                 ;//Работа в режиме копчения.                             70
                 ;//Работа в режиме остывания.	                        80
                 ;//STOP	                                                100
                 ;//===============================================================================
                 ;//порты обозначения кнопок
                 ;#define kn_vverh            PINC.0
                 ;#define kn_vniz             PINC.1
                 ;#define kn_vpravo           PINC.2
                 ;#define kn_vlevo            PINC.3
                 ;#define kn_ENTER            PINC.4
                 ;#define kn_ESC              PINC.5
                 ;
                 ;//==========================================================================
                 ;// Глобальные переменные
                 ;volatile unsigned char t_max_razogrev     = 115;    // максимальная температура разогрева, в градусах Цельсия
                 
                 	.DSEG
                 ;volatile unsigned char t_max_rabochee     = 75;     // максимальная температура работы, в градусах Цельсия
                 ;volatile unsigned char t_min_razogrev     = 105;    // минимальная  температура разогрева, в градусах Цельсия
                 ;volatile unsigned char t_min_rabochee     = 65;     // минимальная температура работы, в градусах Цельсия
                 ;
                 ;volatile unsigned char time_rabota_ch     = 4;      // время работы, измеряется в часах
                 ;volatile unsigned char time_rabota_min    = 30;     // время работы, измеряется в минутах
                 ;volatile unsigned char time_smoke_ch      = 0;      // время работы вытяжки, задается в часах
                 ;volatile unsigned char time_smoke_min     = 10;     // время работы вытяжки, задается в минутах
                 ;
                 ;volatile unsigned char real_time_ch       = 0;      // текущее время работы в часах
                 ;volatile unsigned char real_time_min      = 0;      // текущее время работы в минутах
                 ;volatile unsigned char real_time_sek      = 0;      // текущее время работы в минутах
                 ;
                 ;volatile unsigned char real_temp          = 0;      // минимальная температура работы, в градусах Цельсия
                 ;
                 ;volatile unsigned char real_temp_1razryad = 0;      // 1 разряд температуры при отображении
                 ;volatile unsigned char real_temp_2razryad = 0;      // 2 разряд температуры при отображении
                 ;volatile unsigned char real_temp_3razryad = 0;      // 3 разряд температуры при отображении
                 ;
                 ;volatile unsigned char regim_rabot        = 1;      // состояние режим работы
                 ;volatile unsigned char regim_rabot_old    = 1;      // предыдущее состояние режима работы
                 ;
                 ;unsigned char zadergka_pri_nagatii        = 200;    // задержка при нажатии кнопки
                 ;int zadergka_zastavka                     = 1000;    // время показа заставки
                 ;unsigned char t_puskatel                  = 100;    // необходимое время для старта пускателя
                 ;
                 ;volatile char lcd_str_1[16];
                 ;volatile char lcd_str_2[16];
                 ;
                 ;//=============================================================================
                 ;// Объявление без задания функций. (для обеспечения компиляции)
                 ;void frame(void);
                 ;void screen(void);
                 ;void regim(void);
                 ;void init(void);
                 ;//=============================================================================
                 ;// прерывание ежесекундного (или 0,2 секундного таймера)
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 00C8 {
                 
                 	.CSEG
                 _timer1_compa_isr:
000112 93aa      	ST   -Y,R26
000113 93ea      	ST   -Y,R30
000114 b7ef      	IN   R30,SREG
000115 93ea      	ST   -Y,R30
                 ; 0000 00C9     #asm("cli")
000116 94f8      	cli
                 ; 0000 00CA 
                 ; 0000 00CB     TCNT1H=0;
000117 d63a      	RCALL SUBOPT_0x1
                 ; 0000 00CC     TCNT1L=0;
                 ; 0000 00CD 
                 ; 0000 00CE     real_time_sek++;
000118 91e0 00f2 	LDS  R30,_real_time_sek
00011a 5fef      	SUBI R30,-LOW(1)
00011b 93e0 00f2 	STS  _real_time_sek,R30
                 ; 0000 00CF   	if (real_time_sek == 60) real_time_min++,	real_time_sek =0 ;
00011d d638      	RCALL SUBOPT_0x2
00011e 33ac      	CPI  R26,LOW(0x3C)
00011f f009      	BREQ PC+2
000120 c008      	RJMP _0xF
000121 91e0 00f1 	LDS  R30,_real_time_min
000123 5fef      	SUBI R30,-LOW(1)
000124 93e0 00f1 	STS  _real_time_min,R30
000126 e0e0      	LDI  R30,LOW(0)
000127 93e0 00f2 	STS  _real_time_sek,R30
                 ; 0000 00D0 	if (real_time_min == 60) real_time_ch++,	real_time_min =0 ;
                 _0xF:
000129 d62f      	RCALL SUBOPT_0x3
00012a 33ac      	CPI  R26,LOW(0x3C)
00012b f009      	BREQ PC+2
00012c c008      	RJMP _0x10
00012d 91e0 00f0 	LDS  R30,_real_time_ch
00012f 5fef      	SUBI R30,-LOW(1)
000130 93e0 00f0 	STS  _real_time_ch,R30
000132 e0e0      	LDI  R30,LOW(0)
000133 93e0 00f1 	STS  _real_time_min,R30
                 ; 0000 00D1 	if (real_time_ch  == 24) real_time_ch=0;
                 _0x10:
000135 d626      	RCALL SUBOPT_0x4
000136 31a8      	CPI  R26,LOW(0x18)
000137 f009      	BREQ PC+2
000138 c003      	RJMP _0x11
000139 e0e0      	LDI  R30,LOW(0)
00013a 93e0 00f0 	STS  _real_time_ch,R30
                 ; 0000 00D2 
                 ; 0000 00D3     #asm("sei")
                 _0x11:
00013c 9478      	sei
                 ; 0000 00D4 
                 ; 0000 00D5 //    frame();
                 ; 0000 00D6 //    screen();
                 ; 0000 00D7 }
00013d 91e9      	LD   R30,Y+
00013e bfef      	OUT  SREG,R30
00013f 91e9      	LD   R30,Y+
000140 91a9      	LD   R26,Y+
000141 9518      	RETI
                 ;
                 ;//=============================================================================
                 ;// Реакция на нажатие кнопки вверх
                 ;void vverh (void)
                 ; 0000 00DC {
                 _vverh:
                 ; 0000 00DD     switch(regim_rabot)
000142 d61c      	RCALL SUBOPT_0x5
                 ; 0000 00DE     {
                 ; 0000 00DF         case 11:    t_max_razogrev++;    break;
000143 f009      	BREQ PC+2
000144 c006      	RJMP _0x15
000145 91e0 00e8 	LDS  R30,_t_max_razogrev
000147 5fef      	SUBI R30,-LOW(1)
000148 93e0 00e8 	STS  _t_max_razogrev,R30
00014a c03f      	RJMP _0x14
                 ; 0000 00E0         case 12:    t_min_razogrev++;    break;
                 _0x15:
00014b d61a      	RCALL SUBOPT_0x6
00014c f009      	BREQ PC+2
00014d c006      	RJMP _0x16
00014e 91e0 00ea 	LDS  R30,_t_min_razogrev
000150 5fef      	SUBI R30,-LOW(1)
000151 93e0 00ea 	STS  _t_min_razogrev,R30
000153 c036      	RJMP _0x14
                 ; 0000 00E1         case 21:    t_max_rabochee++;    break;
                 _0x16:
000154 d615      	RCALL SUBOPT_0x7
000155 f009      	BREQ PC+2
000156 c006      	RJMP _0x17
000157 91e0 00e9 	LDS  R30,_t_max_rabochee
000159 5fef      	SUBI R30,-LOW(1)
00015a 93e0 00e9 	STS  _t_max_rabochee,R30
00015c c02d      	RJMP _0x14
                 ; 0000 00E2         case 22:    t_min_rabochee++;    break;
                 _0x17:
00015d d610      	RCALL SUBOPT_0x8
00015e f009      	BREQ PC+2
00015f c006      	RJMP _0x18
000160 91e0 00eb 	LDS  R30,_t_min_rabochee
000162 5fef      	SUBI R30,-LOW(1)
000163 93e0 00eb 	STS  _t_min_rabochee,R30
000165 c024      	RJMP _0x14
                 ; 0000 00E3         case 31:    time_rabota_ch++;    break;
                 _0x18:
000166 d60b      	RCALL SUBOPT_0x9
000167 f009      	BREQ PC+2
000168 c006      	RJMP _0x19
000169 91e0 00ec 	LDS  R30,_time_rabota_ch
00016b 5fef      	SUBI R30,-LOW(1)
00016c 93e0 00ec 	STS  _time_rabota_ch,R30
00016e c01b      	RJMP _0x14
                 ; 0000 00E4         case 32:    time_rabota_min++;   break;
                 _0x19:
00016f d606      	RCALL SUBOPT_0xA
000170 f009      	BREQ PC+2
000171 c006      	RJMP _0x1A
000172 91e0 00ed 	LDS  R30,_time_rabota_min
000174 5fef      	SUBI R30,-LOW(1)
000175 93e0 00ed 	STS  _time_rabota_min,R30
000177 c012      	RJMP _0x14
                 ; 0000 00E5         case 41:    time_smoke_ch++;     break;
                 _0x1A:
000178 d601      	RCALL SUBOPT_0xB
000179 f009      	BREQ PC+2
00017a c006      	RJMP _0x1B
00017b 91e0 00ee 	LDS  R30,_time_smoke_ch
00017d 5fef      	SUBI R30,-LOW(1)
00017e 93e0 00ee 	STS  _time_smoke_ch,R30
000180 c009      	RJMP _0x14
                 ; 0000 00E6         case 42:    time_smoke_min++;    break;
                 _0x1B:
000181 d5fc      	RCALL SUBOPT_0xC
000182 f009      	BREQ PC+2
000183 c006      	RJMP _0x1D
000184 91e0 00ef 	LDS  R30,_time_smoke_min
000186 5fef      	SUBI R30,-LOW(1)
000187 93e0 00ef 	STS  _time_smoke_min,R30
000189 c000      	RJMP _0x14
                 ; 0000 00E7         default    :    {};
                 _0x1D:
                 ; 0000 00E8     }
                 _0x14:
                 ; 0000 00E9 }
00018a 9508      	RET
                 ;
                 ;// Реакция на нажатие кнопки вниз
                 ;void vniz (void)
                 ; 0000 00ED {
                 _vniz:
                 ; 0000 00EE     switch(regim_rabot)
00018b d5d3      	RCALL SUBOPT_0x5
                 ; 0000 00EF     {
                 ; 0000 00F0         case 11:	t_max_razogrev--;	break;
00018c f009      	BREQ PC+2
00018d c006      	RJMP _0x21
00018e 91e0 00e8 	LDS  R30,_t_max_razogrev
000190 50e1      	SUBI R30,LOW(1)
000191 93e0 00e8 	STS  _t_max_razogrev,R30
000193 c03f      	RJMP _0x20
                 ; 0000 00F1         case 12:	t_min_razogrev--;	break;
                 _0x21:
000194 d5d1      	RCALL SUBOPT_0x6
000195 f009      	BREQ PC+2
000196 c006      	RJMP _0x22
000197 91e0 00ea 	LDS  R30,_t_min_razogrev
000199 50e1      	SUBI R30,LOW(1)
00019a 93e0 00ea 	STS  _t_min_razogrev,R30
00019c c036      	RJMP _0x20
                 ; 0000 00F2         case 21:	t_max_rabochee--;	break;
                 _0x22:
00019d d5cc      	RCALL SUBOPT_0x7
00019e f009      	BREQ PC+2
00019f c006      	RJMP _0x23
0001a0 91e0 00e9 	LDS  R30,_t_max_rabochee
0001a2 50e1      	SUBI R30,LOW(1)
0001a3 93e0 00e9 	STS  _t_max_rabochee,R30
0001a5 c02d      	RJMP _0x20
                 ; 0000 00F3         case 22:	t_min_rabochee--;	break;
                 _0x23:
0001a6 d5c7      	RCALL SUBOPT_0x8
0001a7 f009      	BREQ PC+2
0001a8 c006      	RJMP _0x24
0001a9 91e0 00eb 	LDS  R30,_t_min_rabochee
0001ab 50e1      	SUBI R30,LOW(1)
0001ac 93e0 00eb 	STS  _t_min_rabochee,R30
0001ae c024      	RJMP _0x20
                 ; 0000 00F4         case 31:	time_rabota_ch--;	break;
                 _0x24:
0001af d5c2      	RCALL SUBOPT_0x9
0001b0 f009      	BREQ PC+2
0001b1 c006      	RJMP _0x25
0001b2 91e0 00ec 	LDS  R30,_time_rabota_ch
0001b4 50e1      	SUBI R30,LOW(1)
0001b5 93e0 00ec 	STS  _time_rabota_ch,R30
0001b7 c01b      	RJMP _0x20
                 ; 0000 00F5         case 32:	time_rabota_min--;	break;
                 _0x25:
0001b8 d5bd      	RCALL SUBOPT_0xA
0001b9 f009      	BREQ PC+2
0001ba c006      	RJMP _0x26
0001bb 91e0 00ed 	LDS  R30,_time_rabota_min
0001bd 50e1      	SUBI R30,LOW(1)
0001be 93e0 00ed 	STS  _time_rabota_min,R30
0001c0 c012      	RJMP _0x20
                 ; 0000 00F6         case 41:	time_smoke_ch--;	break;
                 _0x26:
0001c1 d5b8      	RCALL SUBOPT_0xB
0001c2 f009      	BREQ PC+2
0001c3 c006      	RJMP _0x27
0001c4 91e0 00ee 	LDS  R30,_time_smoke_ch
0001c6 50e1      	SUBI R30,LOW(1)
0001c7 93e0 00ee 	STS  _time_smoke_ch,R30
0001c9 c009      	RJMP _0x20
                 ; 0000 00F7         case 42:	time_smoke_min--;	break;
                 _0x27:
0001ca d5b3      	RCALL SUBOPT_0xC
0001cb f009      	BREQ PC+2
0001cc c006      	RJMP _0x29
0001cd 91e0 00ef 	LDS  R30,_time_smoke_min
0001cf 50e1      	SUBI R30,LOW(1)
0001d0 93e0 00ef 	STS  _time_smoke_min,R30
0001d2 c000      	RJMP _0x20
                 ; 0000 00F8         default	:	{};
                 _0x29:
                 ; 0000 00F9     }
                 _0x20:
                 ; 0000 00FA }
0001d3 9508      	RET
                 ;
                 ;// Реакция на нажатие кнопки вправо
                 ;void vpravo(void)
                 ; 0000 00FE {
                 _vpravo:
                 ; 0000 00FF     switch(regim_rabot)
0001d4 d58a      	RCALL SUBOPT_0x5
                 ; 0000 0100     {
                 ; 0000 0101         case 11:	regim_rabot = 12;	break;
0001d5 f009      	BREQ PC+2
0001d6 c003      	RJMP _0x2D
0001d7 e0ec      	LDI  R30,LOW(12)
0001d8 d5a9      	RCALL SUBOPT_0xD
0001d9 c029      	RJMP _0x2C
                 ; 0000 0102         case 12:	regim_rabot = 21;	break;
                 _0x2D:
0001da d58b      	RCALL SUBOPT_0x6
0001db f009      	BREQ PC+2
0001dc c003      	RJMP _0x2E
0001dd e1e5      	LDI  R30,LOW(21)
0001de d5a3      	RCALL SUBOPT_0xD
0001df c023      	RJMP _0x2C
                 ; 0000 0103         case 21:	regim_rabot = 22;	break;
                 _0x2E:
0001e0 d589      	RCALL SUBOPT_0x7
0001e1 f009      	BREQ PC+2
0001e2 c003      	RJMP _0x2F
0001e3 e1e6      	LDI  R30,LOW(22)
0001e4 d59d      	RCALL SUBOPT_0xD
0001e5 c01d      	RJMP _0x2C
                 ; 0000 0104         case 22:	regim_rabot = 31;	break;
                 _0x2F:
0001e6 d587      	RCALL SUBOPT_0x8
0001e7 f009      	BREQ PC+2
0001e8 c003      	RJMP _0x30
0001e9 e1ef      	LDI  R30,LOW(31)
0001ea d597      	RCALL SUBOPT_0xD
0001eb c017      	RJMP _0x2C
                 ; 0000 0105         case 31:	regim_rabot = 32;	break;
                 _0x30:
0001ec d585      	RCALL SUBOPT_0x9
0001ed f009      	BREQ PC+2
0001ee c003      	RJMP _0x31
0001ef e2e0      	LDI  R30,LOW(32)
0001f0 d591      	RCALL SUBOPT_0xD
0001f1 c011      	RJMP _0x2C
                 ; 0000 0106         case 32:	regim_rabot = 41;	break;
                 _0x31:
0001f2 d583      	RCALL SUBOPT_0xA
0001f3 f009      	BREQ PC+2
0001f4 c003      	RJMP _0x32
0001f5 e2e9      	LDI  R30,LOW(41)
0001f6 d58b      	RCALL SUBOPT_0xD
0001f7 c00b      	RJMP _0x2C
                 ; 0000 0107         case 41:	regim_rabot = 42;	break;
                 _0x32:
0001f8 d581      	RCALL SUBOPT_0xB
0001f9 f009      	BREQ PC+2
0001fa c003      	RJMP _0x33
0001fb e2ea      	LDI  R30,LOW(42)
0001fc d585      	RCALL SUBOPT_0xD
0001fd c005      	RJMP _0x2C
                 ; 0000 0108         case 42:	regim_rabot = 11;	break;
                 _0x33:
0001fe d57f      	RCALL SUBOPT_0xC
0001ff f009      	BREQ PC+2
000200 c002      	RJMP _0x35
000201 d583      	RCALL SUBOPT_0xE
000202 c000      	RJMP _0x2C
                 ; 0000 0109         default	:	{};
                 _0x35:
                 ; 0000 010A     }
                 _0x2C:
                 ; 0000 010B }
000203 9508      	RET
                 ;
                 ;// Реакция на нажатие кнопки влево
                 ;void vlevo(void)
                 ; 0000 010F {
                 _vlevo:
                 ; 0000 0110     switch(regim_rabot)
000204 d55a      	RCALL SUBOPT_0x5
                 ; 0000 0111     {
                 ; 0000 0112         case 11:	regim_rabot = 42;	break;
000205 f009      	BREQ PC+2
000206 c003      	RJMP _0x39
000207 e2ea      	LDI  R30,LOW(42)
000208 d579      	RCALL SUBOPT_0xD
000209 c029      	RJMP _0x38
                 ; 0000 0113         case 12:	regim_rabot = 11;	break;
                 _0x39:
00020a d55b      	RCALL SUBOPT_0x6
00020b f009      	BREQ PC+2
00020c c002      	RJMP _0x3A
00020d d577      	RCALL SUBOPT_0xE
00020e c024      	RJMP _0x38
                 ; 0000 0114         case 21:	regim_rabot = 12;	break;
                 _0x3A:
00020f d55a      	RCALL SUBOPT_0x7
000210 f009      	BREQ PC+2
000211 c003      	RJMP _0x3B
000212 e0ec      	LDI  R30,LOW(12)
000213 d56e      	RCALL SUBOPT_0xD
000214 c01e      	RJMP _0x38
                 ; 0000 0115         case 22:	regim_rabot = 21;	break;
                 _0x3B:
000215 d558      	RCALL SUBOPT_0x8
000216 f009      	BREQ PC+2
000217 c003      	RJMP _0x3C
000218 e1e5      	LDI  R30,LOW(21)
000219 d568      	RCALL SUBOPT_0xD
00021a c018      	RJMP _0x38
                 ; 0000 0116         case 31:	regim_rabot = 22;	break;
                 _0x3C:
00021b d556      	RCALL SUBOPT_0x9
00021c f009      	BREQ PC+2
00021d c003      	RJMP _0x3D
00021e e1e6      	LDI  R30,LOW(22)
00021f d562      	RCALL SUBOPT_0xD
000220 c012      	RJMP _0x38
                 ; 0000 0117         case 32:	regim_rabot = 31;	break;
                 _0x3D:
000221 d554      	RCALL SUBOPT_0xA
000222 f009      	BREQ PC+2
000223 c003      	RJMP _0x3E
000224 e1ef      	LDI  R30,LOW(31)
000225 d55c      	RCALL SUBOPT_0xD
000226 c00c      	RJMP _0x38
                 ; 0000 0118         case 41:	regim_rabot = 32;	break;
                 _0x3E:
000227 d552      	RCALL SUBOPT_0xB
000228 f009      	BREQ PC+2
000229 c003      	RJMP _0x3F
00022a e2e0      	LDI  R30,LOW(32)
00022b d556      	RCALL SUBOPT_0xD
00022c c006      	RJMP _0x38
                 ; 0000 0119         case 42:	regim_rabot = 41;	break;
                 _0x3F:
00022d d550      	RCALL SUBOPT_0xC
00022e f009      	BREQ PC+2
00022f c003      	RJMP _0x41
000230 e2e9      	LDI  R30,LOW(41)
000231 d550      	RCALL SUBOPT_0xD
000232 c000      	RJMP _0x38
                 ; 0000 011A         default	:	{};
                 _0x41:
                 ; 0000 011B     }
                 _0x38:
                 ; 0000 011C }
000233 9508      	RET
                 ;// Реакция на нажатие кнопки enter
                 ;void enter(void)
                 ; 0000 011F {
                 _enter:
                 ; 0000 0120     switch(regim_rabot)
000234 d52a      	RCALL SUBOPT_0x5
                 ; 0000 0121     {
                 ; 0000 0122         case 11:	regim_rabot = 60;	break;
000235 f009      	BREQ PC+2
000236 c002      	RJMP _0x45
000237 d54f      	RCALL SUBOPT_0xF
000238 c023      	RJMP _0x44
                 ; 0000 0123         case 12:	regim_rabot = 60;	break;
                 _0x45:
000239 d52c      	RCALL SUBOPT_0x6
00023a f009      	BREQ PC+2
00023b c002      	RJMP _0x46
00023c d54a      	RCALL SUBOPT_0xF
00023d c01e      	RJMP _0x44
                 ; 0000 0124         case 21:	regim_rabot = 60;	break;
                 _0x46:
00023e d52b      	RCALL SUBOPT_0x7
00023f f009      	BREQ PC+2
000240 c002      	RJMP _0x47
000241 d545      	RCALL SUBOPT_0xF
000242 c019      	RJMP _0x44
                 ; 0000 0125         case 22:	regim_rabot = 60;	break;
                 _0x47:
000243 d52a      	RCALL SUBOPT_0x8
000244 f009      	BREQ PC+2
000245 c002      	RJMP _0x48
000246 d540      	RCALL SUBOPT_0xF
000247 c014      	RJMP _0x44
                 ; 0000 0126         case 31:	regim_rabot = 60;	break;
                 _0x48:
000248 d529      	RCALL SUBOPT_0x9
000249 f009      	BREQ PC+2
00024a c002      	RJMP _0x49
00024b d53b      	RCALL SUBOPT_0xF
00024c c00f      	RJMP _0x44
                 ; 0000 0127         case 32:	regim_rabot = 60;	break;
                 _0x49:
00024d d528      	RCALL SUBOPT_0xA
00024e f009      	BREQ PC+2
00024f c002      	RJMP _0x4A
000250 d536      	RCALL SUBOPT_0xF
000251 c00a      	RJMP _0x44
                 ; 0000 0128         case 41:	regim_rabot = 60;	break;
                 _0x4A:
000252 d527      	RCALL SUBOPT_0xB
000253 f009      	BREQ PC+2
000254 c002      	RJMP _0x4B
000255 d531      	RCALL SUBOPT_0xF
000256 c005      	RJMP _0x44
                 ; 0000 0129         case 42:	regim_rabot = 60;	break;
                 _0x4B:
000257 d526      	RCALL SUBOPT_0xC
000258 f009      	BREQ PC+2
000259 c002      	RJMP _0x4D
00025a d52c      	RCALL SUBOPT_0xF
00025b c000      	RJMP _0x44
                 ; 0000 012A         default	:	{};
                 _0x4D:
                 ; 0000 012B     }
                 _0x44:
                 ; 0000 012C }
00025c 9508      	RET
                 ;
                 ;// Реакция на нажатие кнопки esc
                 ;void esc(void)
                 ; 0000 0130 {
                 _esc:
                 ; 0000 0131     regim_rabot        = 11;
00025d d527      	RCALL SUBOPT_0xE
                 ; 0000 0132     real_time_ch       = 0;      // текущее время работы в часах
00025e e0e0      	LDI  R30,LOW(0)
00025f 93e0 00f0 	STS  _real_time_ch,R30
                 ; 0000 0133     real_time_min      = 0;      // текущее время работы в минутах
000261 93e0 00f1 	STS  _real_time_min,R30
                 ; 0000 0134     real_time_sek      = 0;      // текущее время работы в минутах
000263 93e0 00f2 	STS  _real_time_sek,R30
                 ; 0000 0135 }
000265 9508      	RET
                 ;
                 ;// проверка нажатия кнопок
                 ;void klaviatura(void)
                 ; 0000 0139 {
                 _klaviatura:
                 ; 0000 013A         if (PINC.0==0) {
000266 9998      	SBIC 0x13,0
000267 c002      	RJMP _0x4E
                 ; 0000 013B             delay_ms(zadergka_pri_nagatii);
000268 d520      	RCALL SUBOPT_0x10
                 ; 0000 013C             vverh();
000269 ded8      	RCALL _vverh
                 ; 0000 013D             }
                 ; 0000 013E         if (PINC.1==0) {
                 _0x4E:
00026a 9999      	SBIC 0x13,1
00026b c002      	RJMP _0x4F
                 ; 0000 013F             delay_ms(zadergka_pri_nagatii);
00026c d51c      	RCALL SUBOPT_0x10
                 ; 0000 0140             vlevo();
00026d df96      	RCALL _vlevo
                 ; 0000 0141             }
                 ; 0000 0142         if (PINC.2==0) {
                 _0x4F:
00026e 999a      	SBIC 0x13,2
00026f c002      	RJMP _0x50
                 ; 0000 0143             delay_ms(zadergka_pri_nagatii);
000270 d518      	RCALL SUBOPT_0x10
                 ; 0000 0144             vniz();
000271 df19      	RCALL _vniz
                 ; 0000 0145             }
                 ; 0000 0146         if (PINC.3==0) {
                 _0x50:
000272 999b      	SBIC 0x13,3
000273 c002      	RJMP _0x51
                 ; 0000 0147             delay_ms(zadergka_pri_nagatii);
000274 d514      	RCALL SUBOPT_0x10
                 ; 0000 0148             vpravo();
000275 df5e      	RCALL _vpravo
                 ; 0000 0149             }
                 ; 0000 014A         if (PINC.4==0) {
                 _0x51:
000276 999c      	SBIC 0x13,4
000277 c002      	RJMP _0x52
                 ; 0000 014B             delay_ms(zadergka_pri_nagatii);
000278 d510      	RCALL SUBOPT_0x10
                 ; 0000 014C             enter();
000279 dfba      	RCALL _enter
                 ; 0000 014D             }
                 ; 0000 014E         if (PINC.5==0) {
                 _0x52:
00027a 999d      	SBIC 0x13,5
00027b c002      	RJMP _0x53
                 ; 0000 014F             delay_ms(zadergka_pri_nagatii);
00027c d50c      	RCALL SUBOPT_0x10
                 ; 0000 0150             esc();
00027d dfdf      	RCALL _esc
                 ; 0000 0151             }
                 ; 0000 0152 }
                 _0x53:
00027e 9508      	RET
                 ;
                 ;//=================================================
                 ;void screen(void)
                 ; 0000 0156 {
                 _screen:
                 ; 0000 0157     lcd_clear();          	// очистка ЛСД
00027f d435      	RCALL _lcd_clear
                 ; 0000 0158 
                 ; 0000 0159     lcd_gotoxy(0,0);      	// установка курсора на 0,0
000280 d50d      	RCALL SUBOPT_0x11
000281 d50c      	RCALL SUBOPT_0x11
000282 d425      	RCALL _lcd_gotoxy
                 ; 0000 015A     lcd_puts(lcd_str_1);
000283 d50d      	RCALL SUBOPT_0x12
000284 d456      	RCALL _lcd_puts
                 ; 0000 015B 
                 ; 0000 015C     lcd_gotoxy(0,1);      	// установка курсора на начало второй строки
000285 d508      	RCALL SUBOPT_0x11
000286 e0e1      	LDI  R30,LOW(1)
000287 93ea      	ST   -Y,R30
000288 d41f      	RCALL _lcd_gotoxy
                 ; 0000 015D     lcd_puts(lcd_str_2);
000289 d50c      	RCALL SUBOPT_0x13
00028a d450      	RCALL _lcd_puts
                 ; 0000 015E 
                 ; 0000 015F 
                 ; 0000 0160 }
00028b 9508      	RET
                 ;
                 ;//==================================================
                 ;void frame(void)
                 ; 0000 0164 {
                 _frame:
                 ; 0000 0165     switch(regim_rabot)
00028c d50e      	RCALL SUBOPT_0x14
                 ; 0000 0166     {
                 ; 0000 0167         case 1		:
00028d f009      	BREQ PC+2
00028e c00c      	RJMP _0x57
                 ; 0000 0168             sprintf(lcd_str_1,"Koptilnya");
00028f d501      	RCALL SUBOPT_0x12
                +
000290 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000291 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000292 d50f      	RCALL SUBOPT_0x15
                 ; 0000 0169             sprintf(lcd_str_2,"v.1.0");
000293 d502      	RCALL SUBOPT_0x13
                +
000294 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
000295 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
000296 d50b      	RCALL SUBOPT_0x15
                 ; 0000 016A             delay_ms(zadergka_zastavka);
000297 929a      	ST   -Y,R9
000298 928a      	ST   -Y,R8
000299 d5f0      	RCALL _delay_ms
                 ; 0000 016B             break;
00029a c0ca      	RJMP _0x56
                 ; 0000 016C         case 11		:
                 _0x57:
00029b 30eb      	CPI  R30,LOW(0xB)
00029c e0a0      	LDI  R26,HIGH(0xB)
00029d 07fa      	CPC  R31,R26
00029e f009      	BREQ PC+2
00029f c00f      	RJMP _0x58
                 ; 0000 016D             sprintf(lcd_str_1,"Max T razogreva");
0002a0 d4f0      	RCALL SUBOPT_0x12
                +
0002a1 e6e4     +LDI R30 , LOW ( 2 * _0x0 + ( 16 ) )
0002a2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW1FN _0x0,16
0002a3 d4fe      	RCALL SUBOPT_0x15
                 ; 0000 016E             sprintf(lcd_str_2,"%c%c%c",
                 ; 0000 016F             (t_max_razogrev/100)%10 +0x30,
                 ; 0000 0170             (t_max_razogrev/10)%10  +0x30,
                 ; 0000 0171             t_max_razogrev%10       +0x30
                 ; 0000 0172             );
0002a4 d4f1      	RCALL SUBOPT_0x13
0002a5 d502      	RCALL SUBOPT_0x16
0002a6 d506      	RCALL SUBOPT_0x17
0002a7 d509      	RCALL SUBOPT_0x18
0002a8 d504      	RCALL SUBOPT_0x17
0002a9 d512      	RCALL SUBOPT_0x19
0002aa d514      	RCALL SUBOPT_0x1A
0002ab 91a0 00e8 	LDS  R26,_t_max_razogrev
0002ad d519      	RCALL SUBOPT_0x1B
                 ; 0000 0173             break;
0002ae c0b6      	RJMP _0x56
                 ; 0000 0174         case 12	    :
                 _0x58:
0002af d4b6      	RCALL SUBOPT_0x6
0002b0 f009      	BREQ PC+2
0002b1 c00e      	RJMP _0x59
                 ; 0000 0175             sprintf(lcd_str_1,"Min T razogreva");
0002b2 d4de      	RCALL SUBOPT_0x12
                +
0002b3 e7eb     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
0002b4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
0002b5 d4ec      	RCALL SUBOPT_0x15
                 ; 0000 0176             sprintf(lcd_str_2,"%c%c%c",
                 ; 0000 0177             (t_min_razogrev/100)%10 +0x30,
                 ; 0000 0178             (t_min_razogrev/10)%10  +0x30,
                 ; 0000 0179             t_min_razogrev%10       +0x30
                 ; 0000 017A             );
0002b6 d4df      	RCALL SUBOPT_0x13
0002b7 d4f0      	RCALL SUBOPT_0x16
0002b8 d518      	RCALL SUBOPT_0x1C
0002b9 d4f7      	RCALL SUBOPT_0x18
0002ba d516      	RCALL SUBOPT_0x1C
0002bb d519      	RCALL SUBOPT_0x1D
0002bc 91a0 00ea 	LDS  R26,_t_min_razogrev
0002be d508      	RCALL SUBOPT_0x1B
                 ; 0000 017B             break;
0002bf c0a5      	RJMP _0x56
                 ; 0000 017C         case 21		:
                 _0x59:
0002c0 d4a9      	RCALL SUBOPT_0x7
0002c1 f009      	BREQ PC+2
0002c2 c00e      	RJMP _0x5A
                 ; 0000 017D             sprintf(lcd_str_1,"Max T rabotia");
0002c3 d4cd      	RCALL SUBOPT_0x12
                +
0002c4 e8eb     +LDI R30 , LOW ( 2 * _0x0 + ( 55 ) )
0002c5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 55 ) )
                 	__POINTW1FN _0x0,55
0002c6 d4db      	RCALL SUBOPT_0x15
                 ; 0000 017E             sprintf(lcd_str_2,"%c%c%c",
                 ; 0000 017F             (t_max_rabochee/100)%10 +0x30,
                 ; 0000 0180             (t_max_rabochee/10)%10  +0x30,
                 ; 0000 0181             t_max_rabochee%10       +0x30
                 ; 0000 0182             );
0002c7 d4ce      	RCALL SUBOPT_0x13
0002c8 d4df      	RCALL SUBOPT_0x16
0002c9 d50d      	RCALL SUBOPT_0x1E
0002ca d4e6      	RCALL SUBOPT_0x18
0002cb d50b      	RCALL SUBOPT_0x1E
0002cc d508      	RCALL SUBOPT_0x1D
0002cd 91a0 00e9 	LDS  R26,_t_max_rabochee
0002cf d4f7      	RCALL SUBOPT_0x1B
                 ; 0000 0183             break;
0002d0 c094      	RJMP _0x56
                 ; 0000 0184         case 22		:
                 _0x5A:
0002d1 d49c      	RCALL SUBOPT_0x8
0002d2 f009      	BREQ PC+2
0002d3 c00e      	RJMP _0x5B
                 ; 0000 0185             sprintf(lcd_str_1,"Min T raboti");
0002d4 d4bc      	RCALL SUBOPT_0x12
                +
0002d5 e9e9     +LDI R30 , LOW ( 2 * _0x0 + ( 69 ) )
0002d6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 69 ) )
                 	__POINTW1FN _0x0,69
0002d7 d4ca      	RCALL SUBOPT_0x15
                 ; 0000 0186             sprintf(lcd_str_2,"%c%c%c",
                 ; 0000 0187             (t_min_rabochee/100)%10 +0x30,
                 ; 0000 0188             (t_min_rabochee/10)%10  +0x30,
                 ; 0000 0189             t_min_rabochee%10       +0x30
                 ; 0000 018A             );
0002d8 d4bd      	RCALL SUBOPT_0x13
0002d9 d4ce      	RCALL SUBOPT_0x16
0002da d500      	RCALL SUBOPT_0x1F
0002db d4d5      	RCALL SUBOPT_0x18
0002dc d4fe      	RCALL SUBOPT_0x1F
0002dd d4f7      	RCALL SUBOPT_0x1D
0002de 91a0 00eb 	LDS  R26,_t_min_rabochee
0002e0 d4e6      	RCALL SUBOPT_0x1B
                 ; 0000 018B             break;
0002e1 c083      	RJMP _0x56
                 ; 0000 018C         case 31		:
                 _0x5B:
0002e2 d48f      	RCALL SUBOPT_0x9
0002e3 f009      	BREQ PC+2
0002e4 c00d      	RJMP _0x5C
                 ; 0000 018D             sprintf(lcd_str_1,"Time rabota, ch");
0002e5 d4ab      	RCALL SUBOPT_0x12
                +
0002e6 eae6     +LDI R30 , LOW ( 2 * _0x0 + ( 82 ) )
0002e7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 82 ) )
                 	__POINTW1FN _0x0,82
0002e8 d4b9      	RCALL SUBOPT_0x15
                 ; 0000 018E             sprintf(lcd_str_2,"%c%c",
                 ; 0000 018F             (time_rabota_ch/10)%10  +0x30,
                 ; 0000 0190             time_rabota_ch%10       +0x30
                 ; 0000 0191             );
0002e9 d4ac      	RCALL SUBOPT_0x13
0002ea d4f4      	RCALL SUBOPT_0x20
0002eb 91a0 00ec 	LDS  R26,_time_rabota_ch
0002ed d4f6      	RCALL SUBOPT_0x21
0002ee 91a0 00ec 	LDS  R26,_time_rabota_ch
0002f0 d4f5      	RCALL SUBOPT_0x22
                 ; 0000 0192             break;
0002f1 c073      	RJMP _0x56
                 ; 0000 0193         case 32		:
                 _0x5C:
0002f2 d483      	RCALL SUBOPT_0xA
0002f3 f009      	BREQ PC+2
0002f4 c00d      	RJMP _0x5D
                 ; 0000 0194             sprintf(lcd_str_1,"Time rabota, min");
0002f5 d49b      	RCALL SUBOPT_0x12
                +
0002f6 ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 98 ) )
0002f7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 98 ) )
                 	__POINTW1FN _0x0,98
0002f8 d4a9      	RCALL SUBOPT_0x15
                 ; 0000 0195             sprintf(lcd_str_2,"%c%c",
                 ; 0000 0196             (time_rabota_min/10)%10 +0x30,
                 ; 0000 0197             time_rabota_min%10      +0x30
                 ; 0000 0198             );
0002f9 d49c      	RCALL SUBOPT_0x13
0002fa d4e4      	RCALL SUBOPT_0x20
0002fb 91a0 00ed 	LDS  R26,_time_rabota_min
0002fd d4e6      	RCALL SUBOPT_0x21
0002fe 91a0 00ed 	LDS  R26,_time_rabota_min
000300 d4e5      	RCALL SUBOPT_0x22
                 ; 0000 0199             break;
000301 c063      	RJMP _0x56
                 ; 0000 019A         case 41		:
                 _0x5D:
000302 d477      	RCALL SUBOPT_0xB
000303 f009      	BREQ PC+2
000304 c00d      	RJMP _0x5E
                 ; 0000 019B             sprintf(lcd_str_1,"Time smoke, ch");
000305 d48b      	RCALL SUBOPT_0x12
                +
000306 ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 115 ) )
000307 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 115 ) )
                 	__POINTW1FN _0x0,115
000308 d499      	RCALL SUBOPT_0x15
                 ; 0000 019C             sprintf(lcd_str_2,"%c%c",
                 ; 0000 019D             (time_smoke_ch/10)%10   +0x30,
                 ; 0000 019E             time_smoke_ch%10        +0x30
                 ; 0000 019F             );
000309 d48c      	RCALL SUBOPT_0x13
00030a d4d4      	RCALL SUBOPT_0x20
00030b 91a0 00ee 	LDS  R26,_time_smoke_ch
00030d d4d6      	RCALL SUBOPT_0x21
00030e 91a0 00ee 	LDS  R26,_time_smoke_ch
000310 d4d5      	RCALL SUBOPT_0x22
                 ; 0000 01A0             break;
000311 c053      	RJMP _0x56
                 ; 0000 01A1         case 42		:
                 _0x5E:
000312 d46b      	RCALL SUBOPT_0xC
000313 f009      	BREQ PC+2
000314 c00d      	RJMP _0x5F
                 ; 0000 01A2             sprintf(lcd_str_1,"Time smoke, min");
000315 d47b      	RCALL SUBOPT_0x12
                +
000316 ede6     +LDI R30 , LOW ( 2 * _0x0 + ( 130 ) )
000317 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 130 ) )
                 	__POINTW1FN _0x0,130
000318 d489      	RCALL SUBOPT_0x15
                 ; 0000 01A3             sprintf(lcd_str_2,"%c%c",
                 ; 0000 01A4             (time_smoke_min/10)%10  +0x30,
                 ; 0000 01A5             time_smoke_min%10       +0x30
                 ; 0000 01A6             );
000319 d47c      	RCALL SUBOPT_0x13
00031a d4c4      	RCALL SUBOPT_0x20
00031b 91a0 00ef 	LDS  R26,_time_smoke_min
00031d d4c6      	RCALL SUBOPT_0x21
00031e 91a0 00ef 	LDS  R26,_time_smoke_min
000320 d4c5      	RCALL SUBOPT_0x22
                 ; 0000 01A7             break;
000321 c043      	RJMP _0x56
                 ; 0000 01A8         case 60		:
                 _0x5F:
000322 33ec      	CPI  R30,LOW(0x3C)
000323 e0a0      	LDI  R26,HIGH(0x3C)
000324 07fa      	CPC  R31,R26
000325 f009      	BREQ PC+2
000326 c00a      	RJMP _0x60
                 ; 0000 01A9 //#pragma rl+
                 ; 0000 01AA             sprintf(lcd_str_1,"RAZOGREVРазогрев");
000327 d469      	RCALL SUBOPT_0x12
                +
000328 eee6     +LDI R30 , LOW ( 2 * _0x0 + ( 146 ) )
000329 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 146 ) )
                 	__POINTW1FN _0x0,146
00032a d477      	RCALL SUBOPT_0x15
                 ; 0000 01AB             sprintf(lcd_str_2,"%c%c:%c%c:%c%c T=%c%c%c C",
                 ; 0000 01AC //#pragma rl-
                 ; 0000 01AD 
                 ; 0000 01AE             (real_time_ch/10)%10	+0x30,
                 ; 0000 01AF             real_time_ch%10		    +0x30,
                 ; 0000 01B0             (real_time_min/10)%10	+0x30,
                 ; 0000 01B1             real_time_min%10		+0x30,
                 ; 0000 01B2             (real_time_sek/10)%10	+0x30,
                 ; 0000 01B3             real_time_sek%10		+0x30,
                 ; 0000 01B4 
                 ; 0000 01B5             real_temp_1razryad,
                 ; 0000 01B6             real_temp_2razryad,
                 ; 0000 01B7             real_temp_3razryad
                 ; 0000 01B8             );
00032b d46a      	RCALL SUBOPT_0x13
00032c d4c3      	RCALL SUBOPT_0x23
00032d d4c8      	RCALL SUBOPT_0x24
00032e d4d0      	RCALL SUBOPT_0x25
00032f d4d8      	RCALL SUBOPT_0x26
                 ; 0000 01B9             break;
000330 c034      	RJMP _0x56
                 ; 0000 01BA         case 70		:
                 _0x60:
000331 34e6      	CPI  R30,LOW(0x46)
000332 e0a0      	LDI  R26,HIGH(0x46)
000333 07fa      	CPC  R31,R26
000334 f009      	BREQ PC+2
000335 c00a      	RJMP _0x61
                 ; 0000 01BB             sprintf(lcd_str_1,"RABOTA");
000336 d45a      	RCALL SUBOPT_0x12
                +
000337 e1e1     +LDI R30 , LOW ( 2 * _0x0 + ( 189 ) )
000338 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 189 ) )
                 	__POINTW1FN _0x0,189
000339 d468      	RCALL SUBOPT_0x15
                 ; 0000 01BC             sprintf(lcd_str_2,"%c%c:%c%c:%c%c T=%c%c%c C",
                 ; 0000 01BD             (real_time_ch/10)%10	+0x30,
                 ; 0000 01BE             real_time_ch%10             +0x30,
                 ; 0000 01BF             (real_time_min/10)%10	+0x30,
                 ; 0000 01C0             real_time_min%10		+0x30,
                 ; 0000 01C1             (real_time_sek/10)%10	+0x30,
                 ; 0000 01C2             real_time_sek%10		+0x30,
                 ; 0000 01C3 
                 ; 0000 01C4             real_temp_1razryad,
                 ; 0000 01C5             real_temp_2razryad,
                 ; 0000 01C6             real_temp_3razryad
                 ; 0000 01C7             );
00033a d45b      	RCALL SUBOPT_0x13
00033b d4b4      	RCALL SUBOPT_0x23
00033c d4b9      	RCALL SUBOPT_0x24
00033d d4c1      	RCALL SUBOPT_0x25
00033e d4c9      	RCALL SUBOPT_0x26
                 ; 0000 01C8             break;
00033f c025      	RJMP _0x56
                 ; 0000 01C9         case 80		:
                 _0x61:
000340 35e0      	CPI  R30,LOW(0x50)
000341 e0a0      	LDI  R26,HIGH(0x50)
000342 07fa      	CPC  R31,R26
000343 f009      	BREQ PC+2
000344 c00a      	RJMP _0x62
                 ; 0000 01CA             sprintf(lcd_str_1,"SMOKE");
000345 d44b      	RCALL SUBOPT_0x12
                +
000346 e1e8     +LDI R30 , LOW ( 2 * _0x0 + ( 196 ) )
000347 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 196 ) )
                 	__POINTW1FN _0x0,196
000348 d459      	RCALL SUBOPT_0x15
                 ; 0000 01CB             sprintf(lcd_str_2,"%c%c:%c%c:%c%c T=%c%c%c C",
                 ; 0000 01CC             (real_time_ch/10)%10	+0x30,
                 ; 0000 01CD             real_time_ch%10             +0x30,
                 ; 0000 01CE             (real_time_min/10)%10	+0x30,
                 ; 0000 01CF             real_time_min%10		+0x30,
                 ; 0000 01D0             (real_time_sek/10)%10	+0x30,
                 ; 0000 01D1             real_time_sek%10		+0x30,
                 ; 0000 01D2 
                 ; 0000 01D3             real_temp_1razryad,
                 ; 0000 01D4             real_temp_2razryad,
                 ; 0000 01D5             real_temp_3razryad
                 ; 0000 01D6             );
000349 d44c      	RCALL SUBOPT_0x13
00034a d4a5      	RCALL SUBOPT_0x23
00034b d4aa      	RCALL SUBOPT_0x24
00034c d4b2      	RCALL SUBOPT_0x25
00034d d4ba      	RCALL SUBOPT_0x26
                 ; 0000 01D7             break;
00034e c016      	RJMP _0x56
                 ; 0000 01D8         case 100	:
                 _0x62:
00034f 36e4      	CPI  R30,LOW(0x64)
000350 e0a0      	LDI  R26,HIGH(0x64)
000351 07fa      	CPC  R31,R26
000352 f009      	BREQ PC+2
000353 c00a      	RJMP _0x64
                 ; 0000 01D9             sprintf(lcd_str_1,"STOP");
000354 d43c      	RCALL SUBOPT_0x12
                +
000355 e1ee     +LDI R30 , LOW ( 2 * _0x0 + ( 202 ) )
000356 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 202 ) )
                 	__POINTW1FN _0x0,202
000357 d44a      	RCALL SUBOPT_0x15
                 ; 0000 01DA             sprintf(lcd_str_2,"%c%c:%c%c:%c%c T=%c%c%c C",
                 ; 0000 01DB             (real_time_ch/10)%10	+0x30,
                 ; 0000 01DC             real_time_ch%10             +0x30,
                 ; 0000 01DD             (real_time_min/10)%10	+0x30,
                 ; 0000 01DE             real_time_min%10		+0x30,
                 ; 0000 01DF             (real_time_sek/10)%10	+0x30,
                 ; 0000 01E0             real_time_sek%10		+0x30,
                 ; 0000 01E1 
                 ; 0000 01E2             real_temp_1razryad,
                 ; 0000 01E3             real_temp_2razryad,
                 ; 0000 01E4             real_temp_3razryad
                 ; 0000 01E5             );
000358 d43d      	RCALL SUBOPT_0x13
000359 d496      	RCALL SUBOPT_0x23
00035a d49b      	RCALL SUBOPT_0x24
00035b d4a3      	RCALL SUBOPT_0x25
00035c d4ab      	RCALL SUBOPT_0x26
                 ; 0000 01E6             break;
00035d c007      	RJMP _0x56
                 ; 0000 01E7 
                 ; 0000 01E8         default	    :
                 _0x64:
                 ; 0000 01E9             lcd_putsf("www.xxx.ua");
                +
00035e e2e3     +LDI R30 , LOW ( 2 * _0x0 + ( 207 ) )
00035f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 207 ) )
                 	__POINTW1FN _0x0,207
000360 d4c4      	RCALL SUBOPT_0x27
000361 d389      	RCALL _lcd_putsf
                 ; 0000 01EA             delay_ms(10);
000362 d459      	RCALL SUBOPT_0x19
000363 d4c1      	RCALL SUBOPT_0x27
000364 d525      	RCALL _delay_ms
                 ; 0000 01EB             break;
                 ; 0000 01EC     }
                 _0x56:
                 ; 0000 01ED }
000365 9508      	RET
                 ;//=================================================
                 ;void regim(void)
                 ; 0000 01F0 {
                 _regim:
                 ; 0000 01F1 
                 ; 0000 01F2 //       regim_rabot_old = regim_rabot;
                 ; 0000 01F3 
                 ; 0000 01F4         switch(regim_rabot)
000366 d434      	RCALL SUBOPT_0x14
                 ; 0000 01F5         {
                 ; 0000 01F6         case 1		:
000367 f009      	BREQ PC+2
000368 c002      	RJMP _0x68
                 ; 0000 01F7                 blok_lamp_1_OFF         ;
000369 d4be      	RCALL SUBOPT_0x28
                 ; 0000 01F8                 blok_lamp_2_OFF         ;
                 ; 0000 01F9                 blok_lamp_3_OFF         ;
                 ; 0000 01FA                 blok_lamp_en_OFF        ;
                 ; 0000 01FB                 blok_lamp_dis_OFF       ;
                 ; 0000 01FC                 blok_silovoy_en_OFF     ;
                 ; 0000 01FD                 blok_silovoy_dis_OFF    ;
                 ; 0000 01FE                 blok_rezerv_OFF         ;
                 ; 0000 01FF             break;
00036a c120      	RJMP _0x67
                 ; 0000 0200         case 11		:
                 _0x68:
00036b 30eb      	CPI  R30,LOW(0xB)
00036c e0a0      	LDI  R26,HIGH(0xB)
00036d 07fa      	CPC  R31,R26
00036e f009      	BREQ PC+2
00036f c014      	RJMP _0x79
                 ; 0000 0201             if (regim_rabot_old==(60||70||80||100))
000370 d4c0      	RCALL SUBOPT_0x29
000371 f009      	BREQ PC+2
000372 c00b      	RJMP _0x7B
000373 d4c0      	RCALL SUBOPT_0x2A
000374 f009      	BREQ PC+2
000375 c008      	RJMP _0x7B
000376 d4c0      	RCALL SUBOPT_0x2B
000377 f009      	BREQ PC+2
000378 c005      	RJMP _0x7B
000379 d4c0      	RCALL SUBOPT_0x2C
00037a f009      	BREQ PC+2
00037b c002      	RJMP _0x7B
00037c e0e0      	LDI  R30,0
00037d c001      	RJMP _0x7C
                 _0x7B:
00037e e0e1      	LDI  R30,1
                 _0x7C:
00037f d4bd      	RCALL SUBOPT_0x2D
000380 f009      	BREQ PC+2
000381 c001      	RJMP _0x7A
                 ; 0000 0202             {
                 ; 0000 0203                 blok_lamp_1_OFF         ;
000382 d4a5      	RCALL SUBOPT_0x28
                 ; 0000 0204                 blok_lamp_2_OFF         ;
                 ; 0000 0205                 blok_lamp_3_OFF         ;
                 ; 0000 0206                 blok_lamp_en_OFF        ;
                 ; 0000 0207                 blok_lamp_dis_OFF       ;
                 ; 0000 0208                 blok_silovoy_en_OFF     ;
                 ; 0000 0209                 blok_silovoy_dis_OFF    ;
                 ; 0000 020A                 blok_rezerv_OFF         ;
                 ; 0000 020B             }
                 ; 0000 020C             break;
                 _0x7A:
000383 c107      	RJMP _0x67
                 ; 0000 020D         case 12         :
                 _0x79:
000384 d3e1      	RCALL SUBOPT_0x6
000385 f009      	BREQ PC+2
000386 c014      	RJMP _0x8D
                 ; 0000 020E             if (regim_rabot_old==(60||70||80||100))
000387 d4a9      	RCALL SUBOPT_0x29
000388 f009      	BREQ PC+2
000389 c00b      	RJMP _0x8F
00038a d4a9      	RCALL SUBOPT_0x2A
00038b f009      	BREQ PC+2
00038c c008      	RJMP _0x8F
00038d d4a9      	RCALL SUBOPT_0x2B
00038e f009      	BREQ PC+2
00038f c005      	RJMP _0x8F
000390 d4a9      	RCALL SUBOPT_0x2C
000391 f009      	BREQ PC+2
000392 c002      	RJMP _0x8F
000393 e0e0      	LDI  R30,0
000394 c001      	RJMP _0x90
                 _0x8F:
000395 e0e1      	LDI  R30,1
                 _0x90:
000396 d4a6      	RCALL SUBOPT_0x2D
000397 f009      	BREQ PC+2
000398 c001      	RJMP _0x8E
                 ; 0000 020F             {
                 ; 0000 0210                 blok_lamp_1_OFF         ;
000399 d48e      	RCALL SUBOPT_0x28
                 ; 0000 0211                 blok_lamp_2_OFF         ;
                 ; 0000 0212                 blok_lamp_3_OFF         ;
                 ; 0000 0213                 blok_lamp_en_OFF        ;
                 ; 0000 0214                 blok_lamp_dis_OFF       ;
                 ; 0000 0215                 blok_silovoy_en_OFF     ;
                 ; 0000 0216                 blok_silovoy_dis_OFF    ;
                 ; 0000 0217                 blok_rezerv_OFF         ;
                 ; 0000 0218             }
                 ; 0000 0219             break;
                 _0x8E:
00039a c0f0      	RJMP _0x67
                 ; 0000 021A         case 21		:
                 _0x8D:
00039b d3ce      	RCALL SUBOPT_0x7
00039c f009      	BREQ PC+2
00039d c014      	RJMP _0xA1
                 ; 0000 021B             if (regim_rabot_old==(60||70||80||100))
00039e d492      	RCALL SUBOPT_0x29
00039f f009      	BREQ PC+2
0003a0 c00b      	RJMP _0xA3
0003a1 d492      	RCALL SUBOPT_0x2A
0003a2 f009      	BREQ PC+2
0003a3 c008      	RJMP _0xA3
0003a4 d492      	RCALL SUBOPT_0x2B
0003a5 f009      	BREQ PC+2
0003a6 c005      	RJMP _0xA3
0003a7 d492      	RCALL SUBOPT_0x2C
0003a8 f009      	BREQ PC+2
0003a9 c002      	RJMP _0xA3
0003aa e0e0      	LDI  R30,0
0003ab c001      	RJMP _0xA4
                 _0xA3:
0003ac e0e1      	LDI  R30,1
                 _0xA4:
0003ad d48f      	RCALL SUBOPT_0x2D
0003ae f009      	BREQ PC+2
0003af c001      	RJMP _0xA2
                 ; 0000 021C             {
                 ; 0000 021D                 blok_lamp_1_OFF         ;
0003b0 d477      	RCALL SUBOPT_0x28
                 ; 0000 021E                 blok_lamp_2_OFF         ;
                 ; 0000 021F                 blok_lamp_3_OFF         ;
                 ; 0000 0220                 blok_lamp_en_OFF        ;
                 ; 0000 0221                 blok_lamp_dis_OFF       ;
                 ; 0000 0222                 blok_silovoy_en_OFF     ;
                 ; 0000 0223                 blok_silovoy_dis_OFF    ;
                 ; 0000 0224                 blok_rezerv_OFF         ;
                 ; 0000 0225             }
                 ; 0000 0226             break;
                 _0xA2:
0003b1 c0d9      	RJMP _0x67
                 ; 0000 0227         case 22		:
                 _0xA1:
0003b2 d3bb      	RCALL SUBOPT_0x8
0003b3 f009      	BREQ PC+2
0003b4 c014      	RJMP _0xB5
                 ; 0000 0228             if (regim_rabot_old==(60||70||80||100))
0003b5 d47b      	RCALL SUBOPT_0x29
0003b6 f009      	BREQ PC+2
0003b7 c00b      	RJMP _0xB7
0003b8 d47b      	RCALL SUBOPT_0x2A
0003b9 f009      	BREQ PC+2
0003ba c008      	RJMP _0xB7
0003bb d47b      	RCALL SUBOPT_0x2B
0003bc f009      	BREQ PC+2
0003bd c005      	RJMP _0xB7
0003be d47b      	RCALL SUBOPT_0x2C
0003bf f009      	BREQ PC+2
0003c0 c002      	RJMP _0xB7
0003c1 e0e0      	LDI  R30,0
0003c2 c001      	RJMP _0xB8
                 _0xB7:
0003c3 e0e1      	LDI  R30,1
                 _0xB8:
0003c4 d478      	RCALL SUBOPT_0x2D
0003c5 f009      	BREQ PC+2
0003c6 c001      	RJMP _0xB6
                 ; 0000 0229             {
                 ; 0000 022A                 blok_lamp_1_OFF         ;
0003c7 d460      	RCALL SUBOPT_0x28
                 ; 0000 022B                 blok_lamp_2_OFF         ;
                 ; 0000 022C                 blok_lamp_3_OFF         ;
                 ; 0000 022D                 blok_lamp_en_OFF        ;
                 ; 0000 022E                 blok_lamp_dis_OFF       ;
                 ; 0000 022F                 blok_silovoy_en_OFF     ;
                 ; 0000 0230                 blok_silovoy_dis_OFF    ;
                 ; 0000 0231                 blok_rezerv_OFF         ;
                 ; 0000 0232             }
                 ; 0000 0233             break;
                 _0xB6:
0003c8 c0c2      	RJMP _0x67
                 ; 0000 0234         case 31		:
                 _0xB5:
0003c9 d3a8      	RCALL SUBOPT_0x9
0003ca f009      	BREQ PC+2
0003cb c014      	RJMP _0xC9
                 ; 0000 0235             if (regim_rabot_old==(60||70||80||100))
0003cc d464      	RCALL SUBOPT_0x29
0003cd f009      	BREQ PC+2
0003ce c00b      	RJMP _0xCB
0003cf d464      	RCALL SUBOPT_0x2A
0003d0 f009      	BREQ PC+2
0003d1 c008      	RJMP _0xCB
0003d2 d464      	RCALL SUBOPT_0x2B
0003d3 f009      	BREQ PC+2
0003d4 c005      	RJMP _0xCB
0003d5 d464      	RCALL SUBOPT_0x2C
0003d6 f009      	BREQ PC+2
0003d7 c002      	RJMP _0xCB
0003d8 e0e0      	LDI  R30,0
0003d9 c001      	RJMP _0xCC
                 _0xCB:
0003da e0e1      	LDI  R30,1
                 _0xCC:
0003db d461      	RCALL SUBOPT_0x2D
0003dc f009      	BREQ PC+2
0003dd c001      	RJMP _0xCA
                 ; 0000 0236             {
                 ; 0000 0237                 blok_lamp_1_OFF         ;
0003de d449      	RCALL SUBOPT_0x28
                 ; 0000 0238                 blok_lamp_2_OFF         ;
                 ; 0000 0239                 blok_lamp_3_OFF         ;
                 ; 0000 023A                 blok_lamp_en_OFF        ;
                 ; 0000 023B                 blok_lamp_dis_OFF       ;
                 ; 0000 023C                 blok_silovoy_en_OFF     ;
                 ; 0000 023D                 blok_silovoy_dis_OFF    ;
                 ; 0000 023E                 blok_rezerv_OFF         ;
                 ; 0000 023F             }
                 ; 0000 0240             break;
                 _0xCA:
0003df c0ab      	RJMP _0x67
                 ; 0000 0241         case 32		:
                 _0xC9:
0003e0 d395      	RCALL SUBOPT_0xA
0003e1 f009      	BREQ PC+2
0003e2 c014      	RJMP _0xDD
                 ; 0000 0242             if (regim_rabot_old==(60||70||80||100))
0003e3 d44d      	RCALL SUBOPT_0x29
0003e4 f009      	BREQ PC+2
0003e5 c00b      	RJMP _0xDF
0003e6 d44d      	RCALL SUBOPT_0x2A
0003e7 f009      	BREQ PC+2
0003e8 c008      	RJMP _0xDF
0003e9 d44d      	RCALL SUBOPT_0x2B
0003ea f009      	BREQ PC+2
0003eb c005      	RJMP _0xDF
0003ec d44d      	RCALL SUBOPT_0x2C
0003ed f009      	BREQ PC+2
0003ee c002      	RJMP _0xDF
0003ef e0e0      	LDI  R30,0
0003f0 c001      	RJMP _0xE0
                 _0xDF:
0003f1 e0e1      	LDI  R30,1
                 _0xE0:
0003f2 d44a      	RCALL SUBOPT_0x2D
0003f3 f009      	BREQ PC+2
0003f4 c001      	RJMP _0xDE
                 ; 0000 0243             {
                 ; 0000 0244                 blok_lamp_1_OFF         ;
0003f5 d432      	RCALL SUBOPT_0x28
                 ; 0000 0245                 blok_lamp_2_OFF         ;
                 ; 0000 0246                 blok_lamp_3_OFF         ;
                 ; 0000 0247                 blok_lamp_en_OFF        ;
                 ; 0000 0248                 blok_lamp_dis_OFF       ;
                 ; 0000 0249                 blok_silovoy_en_OFF     ;
                 ; 0000 024A                 blok_silovoy_dis_OFF    ;
                 ; 0000 024B                 blok_rezerv_OFF         ;
                 ; 0000 024C             }
                 ; 0000 024D             break;
                 _0xDE:
0003f6 c094      	RJMP _0x67
                 ; 0000 024E         case 41		:
                 _0xDD:
0003f7 d382      	RCALL SUBOPT_0xB
0003f8 f009      	BREQ PC+2
0003f9 c014      	RJMP _0xF1
                 ; 0000 024F             if (regim_rabot_old==(60||70||80||100))
0003fa d436      	RCALL SUBOPT_0x29
0003fb f009      	BREQ PC+2
0003fc c00b      	RJMP _0xF3
0003fd d436      	RCALL SUBOPT_0x2A
0003fe f009      	BREQ PC+2
0003ff c008      	RJMP _0xF3
000400 d436      	RCALL SUBOPT_0x2B
000401 f009      	BREQ PC+2
000402 c005      	RJMP _0xF3
000403 d436      	RCALL SUBOPT_0x2C
000404 f009      	BREQ PC+2
000405 c002      	RJMP _0xF3
000406 e0e0      	LDI  R30,0
000407 c001      	RJMP _0xF4
                 _0xF3:
000408 e0e1      	LDI  R30,1
                 _0xF4:
000409 d433      	RCALL SUBOPT_0x2D
00040a f009      	BREQ PC+2
00040b c001      	RJMP _0xF2
                 ; 0000 0250             {
                 ; 0000 0251                 blok_lamp_1_OFF         ;
00040c d41b      	RCALL SUBOPT_0x28
                 ; 0000 0252                 blok_lamp_2_OFF         ;
                 ; 0000 0253                 blok_lamp_3_OFF         ;
                 ; 0000 0254                 blok_lamp_en_OFF        ;
                 ; 0000 0255                 blok_lamp_dis_OFF       ;
                 ; 0000 0256                 blok_silovoy_en_OFF     ;
                 ; 0000 0257                 blok_silovoy_dis_OFF    ;
                 ; 0000 0258                 blok_rezerv_OFF         ;
                 ; 0000 0259             }
                 ; 0000 025A             break;
                 _0xF2:
00040d c07d      	RJMP _0x67
                 ; 0000 025B         case 42		:
                 _0xF1:
00040e d36f      	RCALL SUBOPT_0xC
00040f f009      	BREQ PC+2
000410 c014      	RJMP _0x105
                 ; 0000 025C             if (regim_rabot_old==(60||70||80||100))
000411 d41f      	RCALL SUBOPT_0x29
000412 f009      	BREQ PC+2
000413 c00b      	RJMP _0x107
000414 d41f      	RCALL SUBOPT_0x2A
000415 f009      	BREQ PC+2
000416 c008      	RJMP _0x107
000417 d41f      	RCALL SUBOPT_0x2B
000418 f009      	BREQ PC+2
000419 c005      	RJMP _0x107
00041a d41f      	RCALL SUBOPT_0x2C
00041b f009      	BREQ PC+2
00041c c002      	RJMP _0x107
00041d e0e0      	LDI  R30,0
00041e c001      	RJMP _0x108
                 _0x107:
00041f e0e1      	LDI  R30,1
                 _0x108:
000420 d41c      	RCALL SUBOPT_0x2D
000421 f009      	BREQ PC+2
000422 c001      	RJMP _0x106
                 ; 0000 025D             {
                 ; 0000 025E                 blok_lamp_1_OFF         ;
000423 d404      	RCALL SUBOPT_0x28
                 ; 0000 025F                 blok_lamp_2_OFF         ;
                 ; 0000 0260                 blok_lamp_3_OFF         ;
                 ; 0000 0261                 blok_lamp_en_OFF        ;
                 ; 0000 0262                 blok_lamp_dis_OFF       ;
                 ; 0000 0263                 blok_silovoy_en_OFF     ;
                 ; 0000 0264                 blok_silovoy_dis_OFF    ;
                 ; 0000 0265                 blok_rezerv_OFF         ;
                 ; 0000 0266             }
                 ; 0000 0267             break;
                 _0x106:
000424 c066      	RJMP _0x67
                 ; 0000 0268         case 60		:
                 _0x105:
000425 33ec      	CPI  R30,LOW(0x3C)
000426 e0a0      	LDI  R26,HIGH(0x3C)
000427 07fa      	CPC  R31,R26
000428 f009      	BREQ PC+2
000429 c037      	RJMP _0x119
                 ; 0000 0269             if (regim_rabot_old==(11||12||21||22||31||31||41||42))
00042a e0eb      	LDI  R30,LOW(11)
00042b 30e0      	CPI  R30,0
00042c f009      	BREQ PC+2
00042d c01d      	RJMP _0x11B
00042e e0ec      	LDI  R30,LOW(12)
00042f 30e0      	CPI  R30,0
000430 f009      	BREQ PC+2
000431 c019      	RJMP _0x11B
000432 e1e5      	LDI  R30,LOW(21)
000433 30e0      	CPI  R30,0
000434 f009      	BREQ PC+2
000435 c015      	RJMP _0x11B
000436 e1e6      	LDI  R30,LOW(22)
000437 30e0      	CPI  R30,0
000438 f009      	BREQ PC+2
000439 c011      	RJMP _0x11B
00043a e1ef      	LDI  R30,LOW(31)
00043b 30e0      	CPI  R30,0
00043c f009      	BREQ PC+2
00043d c00d      	RJMP _0x11B
00043e 30e0      	CPI  R30,0
00043f f009      	BREQ PC+2
000440 c00a      	RJMP _0x11B
000441 e2e9      	LDI  R30,LOW(41)
000442 30e0      	CPI  R30,0
000443 f009      	BREQ PC+2
000444 c006      	RJMP _0x11B
000445 e2ea      	LDI  R30,LOW(42)
000446 30e0      	CPI  R30,0
000447 f009      	BREQ PC+2
000448 c002      	RJMP _0x11B
000449 e0e0      	LDI  R30,0
00044a c001      	RJMP _0x11C
                 _0x11B:
00044b e0e1      	LDI  R30,1
                 _0x11C:
00044c d3f0      	RCALL SUBOPT_0x2D
00044d f009      	BREQ PC+2
00044e c007      	RJMP _0x11A
                 ; 0000 026A             {
                 ; 0000 026B                 blok_lamp_1_ON         ;
00044f d3f6      	RCALL SUBOPT_0x2E
                 ; 0000 026C                 blok_lamp_2_ON         ;
                 ; 0000 026D                 blok_lamp_3_ON         ;
                 ; 0000 026E                 blok_lamp_dis_OFF      ;
000450 98dc      	CBI  0x1B,4
                 ; 0000 026F                 blok_silovoy_en_OFF    ;
000451 98dd      	CBI  0x1B,5
                 ; 0000 0270                 blok_silovoy_dis_OFF   ;
000452 98de      	CBI  0x1B,6
                 ; 0000 0271                 blok_rezerv_OFF        ;
000453 98df      	CBI  0x1B,7
                 ; 0000 0272 
                 ; 0000 0273                 blok_lamp_en_ON        ;
000454 d3f5      	RCALL SUBOPT_0x2F
                 ; 0000 0274                 delay_ms(t_puskatel)   ;
                 ; 0000 0275                 blok_lamp_en_OFF       ;
000455 98db      	CBI  0x1B,3
                 ; 0000 0276             }
                 ; 0000 0277             if (real_temp<t_max_razogrev)
                 _0x11A:
000456 91e0 00e8 	LDS  R30,_t_max_razogrev
000458 91a0 00f3 	LDS  R26,_real_temp
00045a 17ae      	CP   R26,R30
00045b f008      	BRLO PC+2
00045c c001      	RJMP _0x12F
                 ; 0000 0278             {
                 ; 0000 0279                 blok_lamp_en_ON        ;
00045d d3ec      	RCALL SUBOPT_0x2F
                 ; 0000 027A                 delay_ms(t_puskatel)   ;
                 ; 0000 027B             }
                 ; 0000 027C 
                 ; 0000 027D                 blok_lamp_1_ON         ;
                 _0x12F:
00045e d3e7      	RCALL SUBOPT_0x2E
                 ; 0000 027E                 blok_lamp_2_ON         ;
                 ; 0000 027F                 blok_lamp_3_ON         ;
                 ; 0000 0280                 blok_lamp_en_OFF      ;
00045f 98db      	CBI  0x1B,3
                 ; 0000 0281             break;
000460 c02a      	RJMP _0x67
                 ; 0000 0282         case 70		:
                 _0x119:
000461 34e6      	CPI  R30,LOW(0x46)
000462 e0a0      	LDI  R26,HIGH(0x46)
000463 07fa      	CPC  R31,R26
000464 f009      	BREQ PC+2
000465 c003      	RJMP _0x13A
                 ; 0000 0283                 blok_lamp_1_ON         ;
000466 d3df      	RCALL SUBOPT_0x2E
                 ; 0000 0284                 blok_lamp_2_ON         ;
                 ; 0000 0285                 blok_lamp_3_ON         ;
                 ; 0000 0286 
                 ; 0000 0287                 blok_silovoy_en_ON    ;
000467 9add      	SBI  0x1B,5
                 ; 0000 0288             break;
000468 c022      	RJMP _0x67
                 ; 0000 0289         case 80		:
                 _0x13A:
000469 35e0      	CPI  R30,LOW(0x50)
00046a e0a0      	LDI  R26,HIGH(0x50)
00046b 07fa      	CPC  R31,R26
00046c f009      	BREQ PC+2
00046d c003      	RJMP _0x143
                 ; 0000 028A                 blok_lamp_1_ON         ;
00046e d3d7      	RCALL SUBOPT_0x2E
                 ; 0000 028B                 blok_lamp_2_ON         ;
                 ; 0000 028C                 blok_lamp_3_ON         ;
                 ; 0000 028D 
                 ; 0000 028E                 blok_silovoy_en_ON    ;
00046f 9add      	SBI  0x1B,5
                 ; 0000 028F             break;
000470 c01a      	RJMP _0x67
                 ; 0000 0290         case 100	:
                 _0x143:
000471 36e4      	CPI  R30,LOW(0x64)
000472 e0a0      	LDI  R26,HIGH(0x64)
000473 07fa      	CPC  R31,R26
000474 f009      	BREQ PC+2
000475 c002      	RJMP _0x15D
                 ; 0000 0291                 blok_lamp_1_OFF         ;
000476 d3b1      	RCALL SUBOPT_0x28
                 ; 0000 0292                 blok_lamp_2_OFF         ;
                 ; 0000 0293                 blok_lamp_3_OFF         ;
                 ; 0000 0294                 blok_lamp_en_OFF        ;
                 ; 0000 0295                 blok_lamp_dis_OFF       ;
                 ; 0000 0296                 blok_silovoy_en_OFF     ;
                 ; 0000 0297                 blok_silovoy_dis_OFF    ;
                 ; 0000 0298                 blok_rezerv_OFF         ;
                 ; 0000 0299             break;
000477 c013      	RJMP _0x67
                 ; 0000 029A         default	    :
                 _0x15D:
                 ; 0000 029B             if (regim_rabot_old==(60||70||80||100))
000478 d3b8      	RCALL SUBOPT_0x29
000479 f009      	BREQ PC+2
00047a c00b      	RJMP _0x15F
00047b d3b8      	RCALL SUBOPT_0x2A
00047c f009      	BREQ PC+2
00047d c008      	RJMP _0x15F
00047e d3b8      	RCALL SUBOPT_0x2B
00047f f009      	BREQ PC+2
000480 c005      	RJMP _0x15F
000481 d3b8      	RCALL SUBOPT_0x2C
000482 f009      	BREQ PC+2
000483 c002      	RJMP _0x15F
000484 e0e0      	LDI  R30,0
000485 c001      	RJMP _0x160
                 _0x15F:
000486 e0e1      	LDI  R30,1
                 _0x160:
000487 d3b5      	RCALL SUBOPT_0x2D
000488 f009      	BREQ PC+2
000489 c001      	RJMP _0x15E
                 ; 0000 029C             {
                 ; 0000 029D                 blok_lamp_1_OFF         ;
00048a d39d      	RCALL SUBOPT_0x28
                 ; 0000 029E                 blok_lamp_2_OFF         ;
                 ; 0000 029F                 blok_lamp_3_OFF         ;
                 ; 0000 02A0                 blok_lamp_en_OFF        ;
                 ; 0000 02A1                 blok_lamp_dis_OFF       ;
                 ; 0000 02A2                 blok_silovoy_en_OFF     ;
                 ; 0000 02A3                 blok_silovoy_dis_OFF    ;
                 ; 0000 02A4                 blok_rezerv_OFF         ;
                 ; 0000 02A5             }
                 ; 0000 02A6             break;
                 _0x15E:
                 ; 0000 02A7         };
                 _0x67:
                 ; 0000 02A8 
                 ; 0000 02A9         regim_rabot_old = regim_rabot;
00048b 91e0 00f7 	LDS  R30,_regim_rabot
00048d 93e0 00f8 	STS  _regim_rabot_old,R30
                 ; 0000 02AA }
00048f 9508      	RET
                 ;//=================================================
                 ;void init(void)
                 ; 0000 02AD {
                 _init:
                 ; 0000 02AE // Port A initialization
                 ; 0000 02AF     PORTA=0x00;
000490 e0e0      	LDI  R30,LOW(0)
000491 bbeb      	OUT  0x1B,R30
                 ; 0000 02B0     DDRA=0xFF;
000492 efef      	LDI  R30,LOW(255)
000493 bbea      	OUT  0x1A,R30
                 ; 0000 02B1 // Port B initialization
                 ; 0000 02B2     PORTB=0x00;
000494 e0e0      	LDI  R30,LOW(0)
000495 bbe8      	OUT  0x18,R30
                 ; 0000 02B3     DDRB=0x00;
000496 bbe7      	OUT  0x17,R30
                 ; 0000 02B4 
                 ; 0000 02B5 // Инициализация порта клавиатуры.
                 ; 0000 02B6 // Port C initialization
                 ; 0000 02B7     PORTC=0xFF;         // вкл. подтягивающие резисторы
000497 efef      	LDI  R30,LOW(255)
000498 bbe5      	OUT  0x15,R30
                 ; 0000 02B8     DDRC=0x00;          // весь порт как вход
000499 e0e0      	LDI  R30,LOW(0)
00049a bbe4      	OUT  0x14,R30
                 ; 0000 02B9 
                 ; 0000 02BA // Timer/Counter 1 initialization
                 ; 0000 02BB // Clock source: System Clock
                 ; 0000 02BC // Clock value: 7,813 kHz
                 ; 0000 02BD // Mode: Normal top=FFFFh
                 ; 0000 02BE // OC1A output: Discon.
                 ; 0000 02BF // OC1B output: Discon.
                 ; 0000 02C0 // Noise Canceler: Off
                 ; 0000 02C1 // Input Capture on Falling Edge
                 ; 0000 02C2 // Timer 1 Overflow Interrupt: Off
                 ; 0000 02C3 // Input Capture Interrupt: Off
                 ; 0000 02C4 // Compare A Match Interrupt: On
                 ; 0000 02C5 // Compare B Match Interrupt: Off
                 ; 0000 02C6     TCCR1A=0x00;
00049b bdef      	OUT  0x2F,R30
                 ; 0000 02C7     TCCR1B=0x05;
00049c e0e5      	LDI  R30,LOW(5)
00049d bdee      	OUT  0x2E,R30
                 ; 0000 02C8     TCNT1H=0x00;
00049e d2b3      	RCALL SUBOPT_0x1
                 ; 0000 02C9     TCNT1L=0x00;
                 ; 0000 02CA     ICR1H=0x00;
00049f e0e0      	LDI  R30,LOW(0)
0004a0 bde7      	OUT  0x27,R30
                 ; 0000 02CB     ICR1L=0x00;
0004a1 bde6      	OUT  0x26,R30
                 ; 0000 02CC     OCR1AH=0x1E;
0004a2 e1ee      	LDI  R30,LOW(30)
0004a3 bdeb      	OUT  0x2B,R30
                 ; 0000 02CD     OCR1AL=0x85;
0004a4 e8e5      	LDI  R30,LOW(133)
0004a5 bdea      	OUT  0x2A,R30
                 ; 0000 02CE     OCR1BH=0x00;
0004a6 e0e0      	LDI  R30,LOW(0)
0004a7 bde9      	OUT  0x29,R30
                 ; 0000 02CF     OCR1BL=0x00;
0004a8 bde8      	OUT  0x28,R30
                 ; 0000 02D0 
                 ; 0000 02D1 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 02D2     TIMSK=0x10;
0004a9 e1e0      	LDI  R30,LOW(16)
0004aa bfe9      	OUT  0x39,R30
                 ; 0000 02D3 
                 ; 0000 02D4 //=================================================
                 ; 0000 02D5 // USART initialization
                 ; 0000 02D6 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 02D7 // USART Receiver: On
                 ; 0000 02D8 // USART Transmitter: On
                 ; 0000 02D9 // USART Mode: Asynchronous
                 ; 0000 02DA // USART Baud Rate: 38400
                 ; 0000 02DB     UCSRA=0x00;
0004ab e0e0      	LDI  R30,LOW(0)
0004ac b9eb      	OUT  0xB,R30
                 ; 0000 02DC     UCSRB=0x18;
0004ad e1e8      	LDI  R30,LOW(24)
0004ae b9ea      	OUT  0xA,R30
                 ; 0000 02DD     UCSRC=0x86;
0004af e8e6      	LDI  R30,LOW(134)
0004b0 bde0      	OUT  0x20,R30
                 ; 0000 02DE     UBRRH=0x00;
0004b1 e0e0      	LDI  R30,LOW(0)
0004b2 bde0      	OUT  0x20,R30
                 ; 0000 02DF     UBRRL=0x0C;
0004b3 e0ec      	LDI  R30,LOW(12)
0004b4 b9e9      	OUT  0x9,R30
                 ; 0000 02E0 //=================================================
                 ; 0000 02E1 // LCD module initialization
                 ; 0000 02E2     lcd_init(16);
0004b5 e1e0      	LDI  R30,LOW(16)
0004b6 93ea      	ST   -Y,R30
0004b7 d255      	RCALL _lcd_init
                 ; 0000 02E3 }
0004b8 9508      	RET
                 ;
                 ;void main(void)
                 ; 0000 02E6 {
                 _main:
                 ; 0000 02E7     init();
0004b9 dfd6      	RCALL _init
                 ; 0000 02E8 
                 ; 0000 02E9     regim_rabot=1;             // Заставка
0004ba e0e1      	LDI  R30,LOW(1)
0004bb d2c6      	RCALL SUBOPT_0xD
                 ; 0000 02EA     frame();
0004bc ddcf      	RCALL _frame
                 ; 0000 02EB     screen();
0004bd ddc1      	RCALL _screen
                 ; 0000 02EC 
                 ; 0000 02ED     delay_ms(zadergka_zastavka);
0004be 929a      	ST   -Y,R9
0004bf 928a      	ST   -Y,R8
0004c0 d3c9      	RCALL _delay_ms
                 ; 0000 02EE 
                 ; 0000 02EF     regim_rabot=11;            // Установка режима работ на задание температуры
0004c1 d2c3      	RCALL SUBOPT_0xE
                 ; 0000 02F0 
                 ; 0000 02F1     frame();
0004c2 ddc9      	RCALL _frame
                 ; 0000 02F2     screen();
0004c3 ddbb      	RCALL _screen
                 ; 0000 02F3 
                 ; 0000 02F4     #asm("sei")                // Разрешение прерываний
0004c4 9478      	sei
                 ; 0000 02F5 
                 ; 0000 02F6     while(1)                   // Вечный цикл
                 _0x171:
                 ; 0000 02F7     {
                 ; 0000 02F8         klaviatura();          // обработка нажатой кнопки
0004c5 dda0      	RCALL _klaviatura
                 ; 0000 02F9 
                 ; 0000 02FA         regim();
0004c6 de9f      	RCALL _regim
                 ; 0000 02FB 
                 ; 0000 02FC /*
                 ; 0000 02FD         if (getchar()=='#')
                 ; 0000 02FE         {
                 ; 0000 02FF                 real_temp_1razryad = getchar();      // 1 разряд температуры при отображении
                 ; 0000 0300                 real_temp_2razryad = getchar();      // 2 разряд температуры при отображении
                 ; 0000 0301                 real_temp_3razryad = getchar();      // 3 разряд температуры при отображении
                 ; 0000 0302 
                 ; 0000 0303                 real_temp=(real_temp_1razryad*100+real_temp_2razryad*10+real_temp_3razryad);
                 ; 0000 0304         }
                 ; 0000 0305 */
                 ; 0000 0306         frame();
0004c7 ddc4      	RCALL _frame
                 ; 0000 0307         screen();
0004c8 ddb6      	RCALL _screen
                 ; 0000 0308     }
0004c9 cffb      	RJMP _0x171
                 _0x173:
                 ; 0000 0309 }
                 _0x174:
0004ca cfff      	RJMP _0x174
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0004cb d41c      	RCALL __SAVELOCR2
0004cc d382      	RCALL SUBOPT_0x30
0004cd 9612      	ADIW R26,2
0004ce d408      	RCALL __GETW1P
0004cf 9730      	SBIW R30,0
0004d0 f409      	BRNE PC+2
0004d1 c022      	RJMP _0x2000010
0004d2 d37c      	RCALL SUBOPT_0x30
0004d3 d37e      	RCALL SUBOPT_0x31
0004d4 018f      	MOVW R16,R30
0004d5 9730      	SBIW R30,0
0004d6 f009      	BREQ PC+2
0004d7 c001      	RJMP _0x2000011
0004d8 c00d      	RJMP _0x2000012
                 _0x2000011:
                +
0004d9 3002     +CPI R16 , LOW ( 2 )
0004da e0e0     +LDI R30 , HIGH ( 2 )
0004db 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0004dc f408      	BRSH PC+2
0004dd c015      	RJMP _0x2000013
0004de 01f8      	MOVW R30,R16
0004df 9731      	SBIW R30,1
0004e0 018f      	MOVW R16,R30
                +
0004e1 81aa     +LDD R26 , Y + 2
0004e2 81bb     +LDD R27 , Y + 2 + 1
0004e3 9614     +ADIW R26 , 4
0004e4 93ed     +ST X + , R30
0004e5 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0004e6 d368      	RCALL SUBOPT_0x30
0004e7 9612      	ADIW R26,2
0004e8 d36c      	RCALL SUBOPT_0x32
0004e9 9731      	SBIW R30,1
0004ea 81ac      	LDD  R26,Y+4
0004eb 83a0      	STD  Z+0,R26
0004ec d362      	RCALL SUBOPT_0x30
0004ed d3e9      	RCALL __GETW1P
0004ee 23ff      	TST  R31
0004ef f40a      	BRPL PC+2
0004f0 c002      	RJMP _0x2000014
0004f1 d35d      	RCALL SUBOPT_0x30
0004f2 d362      	RCALL SUBOPT_0x32
                 _0x2000014:
                 _0x2000013:
0004f3 c005      	RJMP _0x2000015
                 _0x2000010:
0004f4 d35a      	RCALL SUBOPT_0x30
0004f5 efef      	LDI  R30,LOW(65535)
0004f6 efff      	LDI  R31,HIGH(65535)
0004f7 93ed      	ST   X+,R30
0004f8 93fc      	ST   X,R31
                 _0x2000015:
0004f9 d3f5      	RCALL __LOADLOCR2
0004fa 9625      	ADIW R28,5
0004fb 9508      	RET
                 __print_G100:
0004fc 9726      	SBIW R28,6
0004fd d3e6      	RCALL __SAVELOCR6
0004fe e010      	LDI  R17,0
0004ff 85ac      	LDD  R26,Y+12
000500 85bd      	LDD  R27,Y+12+1
000501 e0e0      	LDI  R30,LOW(0)
000502 e0f0      	LDI  R31,HIGH(0)
000503 93ed      	ST   X+,R30
000504 93fc      	ST   X,R31
                 _0x2000016:
000505 89ea      	LDD  R30,Y+18
000506 89fb      	LDD  R31,Y+18+1
000507 9631      	ADIW R30,1
000508 8bea      	STD  Y+18,R30
000509 8bfb      	STD  Y+18+1,R31
00050a 9731      	SBIW R30,1
00050b 91e4      	LPM  R30,Z
00050c 2f2e      	MOV  R18,R30
00050d 30e0      	CPI  R30,0
00050e f409      	BRNE PC+2
00050f c129      	RJMP _0x2000018
000510 2fe1      	MOV  R30,R17
000511 30e0      	CPI  R30,0
000512 f009      	BREQ PC+2
000513 c007      	RJMP _0x200001C
000514 3225      	CPI  R18,37
000515 f009      	BREQ PC+2
000516 c002      	RJMP _0x200001D
000517 e011      	LDI  R17,LOW(1)
000518 c001      	RJMP _0x200001E
                 _0x200001D:
000519 d341      	RCALL SUBOPT_0x33
                 _0x200001E:
00051a c11d      	RJMP _0x200001B
                 _0x200001C:
00051b 30e1      	CPI  R30,LOW(0x1)
00051c f009      	BREQ PC+2
00051d c019      	RJMP _0x200001F
00051e 3225      	CPI  R18,37
00051f f009      	BREQ PC+2
000520 c003      	RJMP _0x2000020
000521 d339      	RCALL SUBOPT_0x33
000522 e010      	LDI  R17,LOW(0)
000523 c114      	RJMP _0x200001B
                 _0x2000020:
000524 e012      	LDI  R17,LOW(2)
000525 e040      	LDI  R20,LOW(0)
000526 e000      	LDI  R16,LOW(0)
000527 322d      	CPI  R18,45
000528 f009      	BREQ PC+2
000529 c002      	RJMP _0x2000021
00052a e001      	LDI  R16,LOW(1)
00052b c10c      	RJMP _0x200001B
                 _0x2000021:
00052c 322b      	CPI  R18,43
00052d f009      	BREQ PC+2
00052e c002      	RJMP _0x2000022
00052f e24b      	LDI  R20,LOW(43)
000530 c107      	RJMP _0x200001B
                 _0x2000022:
000531 3220      	CPI  R18,32
000532 f009      	BREQ PC+2
000533 c002      	RJMP _0x2000023
000534 e240      	LDI  R20,LOW(32)
000535 c102      	RJMP _0x200001B
                 _0x2000023:
000536 c003      	RJMP _0x2000024
                 _0x200001F:
000537 30e2      	CPI  R30,LOW(0x2)
000538 f009      	BREQ PC+2
000539 c008      	RJMP _0x2000025
                 _0x2000024:
00053a e050      	LDI  R21,LOW(0)
00053b e013      	LDI  R17,LOW(3)
00053c 3320      	CPI  R18,48
00053d f009      	BREQ PC+2
00053e c002      	RJMP _0x2000026
00053f 6800      	ORI  R16,LOW(128)
000540 c0f7      	RJMP _0x200001B
                 _0x2000026:
000541 c003      	RJMP _0x2000027
                 _0x2000025:
000542 30e3      	CPI  R30,LOW(0x3)
000543 f009      	BREQ PC+2
000544 c0f3      	RJMP _0x200001B
                 _0x2000027:
000545 3320      	CPI  R18,48
000546 f408      	BRSH PC+2
000547 c004      	RJMP _0x200002A
000548 332a      	CPI  R18,58
000549 f008      	BRLO PC+2
00054a c001      	RJMP _0x200002A
00054b c001      	RJMP _0x200002B
                 _0x200002A:
00054c c007      	RJMP _0x2000029
                 _0x200002B:
00054d e0aa      	LDI  R26,LOW(10)
00054e 9f5a      	MUL  R21,R26
00054f 2d50      	MOV  R21,R0
000550 2fe2      	MOV  R30,R18
000551 53e0      	SUBI R30,LOW(48)
000552 0f5e      	ADD  R21,R30
000553 c0e4      	RJMP _0x200001B
                 _0x2000029:
000554 2fe2      	MOV  R30,R18
000555 36e3      	CPI  R30,LOW(0x63)
000556 f009      	BREQ PC+2
000557 c008      	RJMP _0x200002F
000558 d30a      	RCALL SUBOPT_0x34
000559 d30c      	RCALL SUBOPT_0x35
00055a d308      	RCALL SUBOPT_0x34
00055b 81a4      	LDD  R26,Z+4
00055c 93aa      	ST   -Y,R26
00055d d30c      	RCALL SUBOPT_0x36
00055e c0d8      	RJMP _0x2000030
00055f c003      	RJMP _0x2000031
                 _0x200002F:
000560 37e3      	CPI  R30,LOW(0x73)
000561 f009      	BREQ PC+2
000562 c007      	RJMP _0x2000032
                 _0x2000031:
000563 d30d      	RCALL SUBOPT_0x37
000564 d30e      	RCALL SUBOPT_0x38
000565 d310      	RCALL SUBOPT_0x39
000566 d1d4      	RCALL _strlen
000567 2f1e      	MOV  R17,R30
000568 c00a      	RJMP _0x2000033
000569 c003      	RJMP _0x2000034
                 _0x2000032:
00056a 37e0      	CPI  R30,LOW(0x70)
00056b f009      	BREQ PC+2
00056c c00b      	RJMP _0x2000035
                 _0x2000034:
00056d d303      	RCALL SUBOPT_0x37
00056e d304      	RCALL SUBOPT_0x38
00056f d306      	RCALL SUBOPT_0x39
000570 d1d4      	RCALL _strlenf
000571 2f1e      	MOV  R17,R30
000572 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000573 6002      	ORI  R16,LOW(2)
000574 770f      	ANDI R16,LOW(127)
000575 e030      	LDI  R19,LOW(0)
000576 c037      	RJMP _0x2000036
000577 c003      	RJMP _0x2000037
                 _0x2000035:
000578 36e4      	CPI  R30,LOW(0x64)
000579 f009      	BREQ PC+2
00057a c001      	RJMP _0x2000038
                 _0x2000037:
00057b c003      	RJMP _0x2000039
                 _0x2000038:
00057c 36e9      	CPI  R30,LOW(0x69)
00057d f009      	BREQ PC+2
00057e c002      	RJMP _0x200003A
                 _0x2000039:
00057f 6004      	ORI  R16,LOW(4)
000580 c003      	RJMP _0x200003B
                 _0x200003A:
000581 37e5      	CPI  R30,LOW(0x75)
000582 f009      	BREQ PC+2
000583 c006      	RJMP _0x200003C
                 _0x200003B:
000584 e2ea      	LDI  R30,LOW(_tbl10_G100*2)
000585 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000586 d2f2      	RCALL SUBOPT_0x3A
000587 e015      	LDI  R17,LOW(5)
000588 c00d      	RJMP _0x200003D
000589 c003      	RJMP _0x200003E
                 _0x200003C:
00058a 35e8      	CPI  R30,LOW(0x58)
00058b f009      	BREQ PC+2
00058c c002      	RJMP _0x200003F
                 _0x200003E:
00058d 6008      	ORI  R16,LOW(8)
00058e c003      	RJMP _0x2000040
                 _0x200003F:
00058f 37e8      	CPI  R30,LOW(0x78)
000590 f009      	BREQ PC+2
000591 c0a5      	RJMP _0x2000071
                 _0x2000040:
000592 e3e4      	LDI  R30,LOW(_tbl16_G100*2)
000593 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000594 d2e4      	RCALL SUBOPT_0x3A
000595 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000596 ff02      	SBRS R16,2
000597 c013      	RJMP _0x2000042
000598 d2d8      	RCALL SUBOPT_0x37
000599 d2d9      	RCALL SUBOPT_0x38
00059a d2e1      	RCALL SUBOPT_0x3B
00059b 85ab      	LDD  R26,Y+11
00059c 23aa      	TST  R26
00059d f00a      	BRMI PC+2
00059e c005      	RJMP _0x2000043
00059f 85ea      	LDD  R30,Y+10
0005a0 85fb      	LDD  R31,Y+10+1
0005a1 d2f8      	RCALL __ANEGW1
0005a2 d2d9      	RCALL SUBOPT_0x3B
0005a3 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0005a4 3040      	CPI  R20,0
0005a5 f409      	BRNE PC+2
0005a6 c002      	RJMP _0x2000044
0005a7 5f1f      	SUBI R17,-LOW(1)
0005a8 c001      	RJMP _0x2000045
                 _0x2000044:
0005a9 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0005aa c003      	RJMP _0x2000046
                 _0x2000042:
0005ab d2c5      	RCALL SUBOPT_0x37
0005ac d2c6      	RCALL SUBOPT_0x38
0005ad d2ce      	RCALL SUBOPT_0x3B
                 _0x2000046:
                 _0x2000036:
0005ae fd00      	SBRC R16,0
0005af c011      	RJMP _0x2000047
                 _0x2000048:
0005b0 1715      	CP   R17,R21
0005b1 f008      	BRLO PC+2
0005b2 c00e      	RJMP _0x200004A
0005b3 ff07      	SBRS R16,7
0005b4 c008      	RJMP _0x200004B
0005b5 ff02      	SBRS R16,2
0005b6 c004      	RJMP _0x200004C
0005b7 7f0b      	ANDI R16,LOW(251)
0005b8 2f24      	MOV  R18,R20
0005b9 5011      	SUBI R17,LOW(1)
0005ba c001      	RJMP _0x200004D
                 _0x200004C:
0005bb e320      	LDI  R18,LOW(48)
                 _0x200004D:
0005bc c001      	RJMP _0x200004E
                 _0x200004B:
0005bd e220      	LDI  R18,LOW(32)
                 _0x200004E:
0005be d29c      	RCALL SUBOPT_0x33
0005bf 5051      	SUBI R21,LOW(1)
0005c0 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0005c1 2f31      	MOV  R19,R17
0005c2 ff01      	SBRS R16,1
0005c3 c017      	RJMP _0x200004F
                 _0x2000050:
0005c4 3030      	CPI  R19,0
0005c5 f409      	BRNE PC+2
0005c6 c013      	RJMP _0x2000052
0005c7 ff03      	SBRS R16,3
0005c8 c005      	RJMP _0x2000053
0005c9 81ee      	LDD  R30,Y+6
0005ca 81ff      	LDD  R31,Y+6+1
0005cb 9125      	LPM  R18,Z+
0005cc d2ac      	RCALL SUBOPT_0x3A
0005cd c005      	RJMP _0x2000054
                 _0x2000053:
0005ce 81ae      	LDD  R26,Y+6
0005cf 81bf      	LDD  R27,Y+6+1
0005d0 912d      	LD   R18,X+
0005d1 83ae      	STD  Y+6,R26
0005d2 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0005d3 d287      	RCALL SUBOPT_0x33
0005d4 3050      	CPI  R21,0
0005d5 f409      	BRNE PC+2
0005d6 c001      	RJMP _0x2000055
0005d7 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0005d8 5031      	SUBI R19,LOW(1)
0005d9 cfea      	RJMP _0x2000050
                 _0x2000052:
0005da c052      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0005db e320      	LDI  R18,LOW(48)
0005dc 81ee      	LDD  R30,Y+6
0005dd 81ff      	LDD  R31,Y+6+1
0005de d2fc      	RCALL __GETW1PF
0005df 87e8      	STD  Y+8,R30
0005e0 87f9      	STD  Y+8+1,R31
0005e1 81ee      	LDD  R30,Y+6
0005e2 81ff      	LDD  R31,Y+6+1
0005e3 9632      	ADIW R30,2
0005e4 d294      	RCALL SUBOPT_0x3A
                 _0x200005A:
0005e5 85e8      	LDD  R30,Y+8
0005e6 85f9      	LDD  R31,Y+8+1
0005e7 85aa      	LDD  R26,Y+10
0005e8 85bb      	LDD  R27,Y+10+1
0005e9 17ae      	CP   R26,R30
0005ea 07bf      	CPC  R27,R31
0005eb f408      	BRSH PC+2
0005ec c009      	RJMP _0x200005C
0005ed 5f2f      	SUBI R18,-LOW(1)
0005ee 85a8      	LDD  R26,Y+8
0005ef 85b9      	LDD  R27,Y+8+1
0005f0 85ea      	LDD  R30,Y+10
0005f1 85fb      	LDD  R31,Y+10+1
0005f2 1bea      	SUB  R30,R26
0005f3 0bfb      	SBC  R31,R27
0005f4 d287      	RCALL SUBOPT_0x3B
0005f5 cfef      	RJMP _0x200005A
                 _0x200005C:
0005f6 332a      	CPI  R18,58
0005f7 f408      	BRSH PC+2
0005f8 c005      	RJMP _0x200005D
0005f9 ff03      	SBRS R16,3
0005fa c002      	RJMP _0x200005E
0005fb 5f29      	SUBI R18,-LOW(7)
0005fc c001      	RJMP _0x200005F
                 _0x200005E:
0005fd 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0005fe ff04      	SBRS R16,4
0005ff c001      	RJMP _0x2000060
000600 c020      	RJMP _0x2000061
                 _0x2000060:
000601 3321      	CPI  R18,49
000602 f008      	BRLO PC+2
000603 c006      	RJMP _0x2000063
000604 85a8      	LDD  R26,Y+8
000605 85b9      	LDD  R27,Y+8+1
000606 9711      	SBIW R26,1
000607 f409      	BRNE PC+2
000608 c001      	RJMP _0x2000063
000609 c002      	RJMP _0x2000062
                 _0x2000063:
00060a 6100      	ORI  R16,LOW(16)
00060b c00c      	RJMP _0x2000065
                 _0x2000062:
00060c 1753      	CP   R21,R19
00060d f408      	BRSH PC+2
00060e c003      	RJMP _0x2000067
00060f fd00      	SBRC R16,0
000610 c001      	RJMP _0x2000067
000611 c001      	RJMP _0x2000068
                 _0x2000067:
000612 c013      	RJMP _0x2000066
                 _0x2000068:
000613 e220      	LDI  R18,LOW(32)
000614 ff07      	SBRS R16,7
000615 c00b      	RJMP _0x2000069
000616 e320      	LDI  R18,LOW(48)
000617 6100      	ORI  R16,LOW(16)
                 _0x2000065:
000618 ff02      	SBRS R16,2
000619 c007      	RJMP _0x200006A
00061a 7f0b      	ANDI R16,LOW(251)
00061b 934a      	ST   -Y,R20
00061c d24d      	RCALL SUBOPT_0x36
00061d 3050      	CPI  R21,0
00061e f409      	BRNE PC+2
00061f c001      	RJMP _0x200006B
000620 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000621 d239      	RCALL SUBOPT_0x33
000622 3050      	CPI  R21,0
000623 f409      	BRNE PC+2
000624 c001      	RJMP _0x200006C
000625 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000626 5031      	SUBI R19,LOW(1)
                 _0x2000057:
000627 85a8      	LDD  R26,Y+8
000628 85b9      	LDD  R27,Y+8+1
000629 9712      	SBIW R26,2
00062a f408      	BRSH PC+2
00062b c001      	RJMP _0x2000059
00062c cfae      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
00062d ff00      	SBRS R16,0
00062e c008      	RJMP _0x200006D
                 _0x200006E:
00062f 3050      	CPI  R21,0
000630 f409      	BRNE PC+2
000631 c005      	RJMP _0x2000070
000632 5051      	SUBI R21,LOW(1)
000633 e2e0      	LDI  R30,LOW(32)
000634 93ea      	ST   -Y,R30
000635 d234      	RCALL SUBOPT_0x36
000636 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
000637 e010      	LDI  R17,LOW(0)
                 _0x200002E:
                 _0x200001B:
000638 cecc      	RJMP _0x2000016
                 _0x2000018:
000639 85ac      	LDD  R26,Y+12
00063a 85bd      	LDD  R27,Y+12+1
00063b d29b      	RCALL __GETW1P
00063c d2ae      	RCALL __LOADLOCR6
00063d 9664      	ADIW R28,20
00063e 9508      	RET
                 _sprintf:
00063f 92ff      	PUSH R15
000640 2ef8      	MOV  R15,R24
000641 9726      	SBIW R28,6
000642 d2a3      	RCALL __SAVELOCR4
000643 d23b      	RCALL SUBOPT_0x3C
000644 9730      	SBIW R30,0
000645 f009      	BREQ PC+2
000646 c006      	RJMP _0x2000072
000647 efef      	LDI  R30,LOW(65535)
000648 efff      	LDI  R31,HIGH(65535)
000649 d2a3      	RCALL __LOADLOCR4
00064a 962a      	ADIW R28,10
00064b 90ff      	POP  R15
00064c 9508      	RET
                 _0x2000072:
00064d 01de      	MOVW R26,R28
00064e 9616      	ADIW R26,6
00064f d246      	RCALL __ADDW2R15
000650 018d      	MOVW R16,R26
000651 d22d      	RCALL SUBOPT_0x3C
000652 d226      	RCALL SUBOPT_0x3A
000653 e0e0      	LDI  R30,LOW(0)
000654 87e8      	STD  Y+8,R30
000655 87e9      	STD  Y+8+1,R30
000656 01de      	MOVW R26,R28
000657 961a      	ADIW R26,10
000658 d23d      	RCALL __ADDW2R15
000659 d27d      	RCALL __GETW1P
00065a d1ca      	RCALL SUBOPT_0x27
00065b 931a      	ST   -Y,R17
00065c 930a      	ST   -Y,R16
00065d eceb      	LDI  R30,LOW(_put_buff_G100)
00065e e0f4      	LDI  R31,HIGH(_put_buff_G100)
00065f d1c5      	RCALL SUBOPT_0x27
000660 01fe      	MOVW R30,R28
000661 963a      	ADIW R30,10
000662 d1c2      	RCALL SUBOPT_0x27
000663 de98      	RCALL __print_G100
000664 019f      	MOVW R18,R30
000665 81ae      	LDD  R26,Y+6
000666 81bf      	LDD  R27,Y+6+1
000667 e0e0      	LDI  R30,LOW(0)
000668 93ec      	ST   X,R30
000669 01f9      	MOVW R30,R18
00066a d282      	RCALL __LOADLOCR4
00066b 962a      	ADIW R28,10
00066c 90ff      	POP  R15
00066d 9508      	RET
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G101:
00066e e0ff          ldi   r31,15
                 __lcd_delay0:
00066f 95fa          dec   r31
000670 f7f1          brne  __lcd_delay0
000671 9508      	RET
                 __lcd_ready:
000672 b3a7          in    r26,__lcd_direction
000673 70af          andi  r26,0xf                 ;set as input
000674 bba7          out   __lcd_direction,r26
000675 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
000676 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
000677 dff6      	RCALL __lcd_delay_G101
000678 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000679 dff4      	RCALL __lcd_delay_G101
00067a b3a6          in    r26,__lcd_pin
00067b 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
00067c dff1      	RCALL __lcd_delay_G101
00067d 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
00067e dfef      	RCALL __lcd_delay_G101
00067f 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000680 fda7          sbrc  r26,__lcd_busy_flag
000681 cff5          rjmp  __lcd_busy
000682 9508      	RET
                 __lcd_write_nibble_G101:
000683 7fa0          andi  r26,0xf0
000684 2bab          or    r26,r27
000685 bba8          out   __lcd_port,r26          ;write
000686 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
000687 dfe6      	RCALL __lcd_delay_G101
000688 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000689 dfe4      	RCALL __lcd_delay_G101
00068a 9508      	RET
                 __lcd_write_data:
00068b 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00068c b3a7          in    r26,__lcd_direction
00068d 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
00068e bba7          out   __lcd_direction,r26
00068f b3b8          in    r27,__lcd_port
000690 70bf          andi  r27,0xf
000691 81a8          ld    r26,y
000692 dff0      	RCALL __lcd_write_nibble_G101
000693 81a8          ld    r26,y
000694 95a2          swap  r26
000695 dfed      	RCALL __lcd_write_nibble_G101
000696 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
000697 9621      	ADIW R28,1
000698 9508      	RET
                 __lcd_read_nibble_G101:
000699 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
00069a dfd3      	RCALL __lcd_delay_G101
00069b b3e6          in    r30,__lcd_pin           ;read
00069c 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
00069d dfd0      	RCALL __lcd_delay_G101
00069e 7fe0          andi  r30,0xf0
00069f 9508      	RET
                 _lcd_read_byte0_G101:
0006a0 dfcd      	RCALL __lcd_delay_G101
0006a1 dff7      	RCALL __lcd_read_nibble_G101
0006a2 2fae          mov   r26,r30
0006a3 dff5      	RCALL __lcd_read_nibble_G101
0006a4 98c1          cbi   __lcd_port,__lcd_rd     ;RD=0
0006a5 95e2          swap  r30
0006a6 2bea          or    r30,r26
0006a7 9508      	RET
                 _lcd_gotoxy:
0006a8 dfc9      	RCALL __lcd_ready
0006a9 81e8      	LD   R30,Y
0006aa d0a5      	RCALL SUBOPT_0x0
0006ab 5ee7      	SUBI R30,LOW(-__base_y_G101)
0006ac 4ffe      	SBCI R31,HIGH(-__base_y_G101)
0006ad 81e0      	LD   R30,Z
0006ae 81a9      	LDD  R26,Y+1
0006af 0fea      	ADD  R30,R26
0006b0 d1d3      	RCALL SUBOPT_0x3D
0006b1 80b9      	LDD  R11,Y+1
0006b2 80a8      	LDD  R10,Y+0
0006b3 9622      	ADIW R28,2
0006b4 9508      	RET
                 _lcd_clear:
0006b5 dfbc      	RCALL __lcd_ready
0006b6 e0e2      	LDI  R30,LOW(2)
0006b7 d1cc      	RCALL SUBOPT_0x3D
0006b8 dfb9      	RCALL __lcd_ready
0006b9 e0ec      	LDI  R30,LOW(12)
0006ba d1c9      	RCALL SUBOPT_0x3D
0006bb dfb6      	RCALL __lcd_ready
0006bc e0e1      	LDI  R30,LOW(1)
0006bd d1c6      	RCALL SUBOPT_0x3D
0006be e0e0      	LDI  R30,LOW(0)
0006bf 2eae      	MOV  R10,R30
0006c0 2ebe      	MOV  R11,R30
0006c1 9508      	RET
                 _lcd_putchar:
0006c2 93ef          push r30
0006c3 93ff          push r31
0006c4 81a8          ld   r26,y
0006c5 9468          set
0006c6 30aa          cpi  r26,10
0006c7 f021          breq __lcd_putchar1
0006c8 94e8          clt
0006c9 14bd      	CP   R11,R13
0006ca f408      	BRSH PC+2
0006cb c005      	RJMP _0x2020004
                 	__lcd_putchar1:
0006cc 94a3      	INC  R10
0006cd d0c0      	RCALL SUBOPT_0x11
0006ce 92aa      	ST   -Y,R10
0006cf dfd8      	RCALL _lcd_gotoxy
0006d0 f036      	brts __lcd_putchar0
                 _0x2020004:
0006d1 94b3      	INC  R11
0006d2 df9f          rcall __lcd_ready
0006d3 9ac0          sbi  __lcd_port,__lcd_rs ;RS=1
0006d4 81a8          ld   r26,y
0006d5 93aa          st   -y,r26
0006d6 dfb4          rcall __lcd_write_data
                 __lcd_putchar0:
0006d7 91ff          pop  r31
0006d8 91ef          pop  r30
0006d9 9621      	ADIW R28,1
0006da 9508      	RET
                 _lcd_puts:
0006db 931a      	ST   -Y,R17
                 _0x2020005:
0006dc 81a9      	LDD  R26,Y+1
0006dd 81ba      	LDD  R27,Y+1+1
0006de 91ed      	LD   R30,X+
0006df 83a9      	STD  Y+1,R26
0006e0 83ba      	STD  Y+1+1,R27
0006e1 2f1e      	MOV  R17,R30
0006e2 30e0      	CPI  R30,0
0006e3 f409      	BRNE PC+2
0006e4 c003      	RJMP _0x2020007
0006e5 931a      	ST   -Y,R17
0006e6 dfdb      	RCALL _lcd_putchar
0006e7 cff4      	RJMP _0x2020005
                 _0x2020007:
0006e8 8118      	LDD  R17,Y+0
0006e9 9623      	ADIW R28,3
0006ea 9508      	RET
                 _lcd_putsf:
0006eb 931a      	ST   -Y,R17
                 _0x2020008:
0006ec 81e9      	LDD  R30,Y+1
0006ed 81fa      	LDD  R31,Y+1+1
0006ee 9631      	ADIW R30,1
0006ef 83e9      	STD  Y+1,R30
0006f0 83fa      	STD  Y+1+1,R31
0006f1 9731      	SBIW R30,1
0006f2 91e4      	LPM  R30,Z
0006f3 2f1e      	MOV  R17,R30
0006f4 30e0      	CPI  R30,0
0006f5 f409      	BRNE PC+2
0006f6 c003      	RJMP _0x202000A
0006f7 931a      	ST   -Y,R17
0006f8 dfc9      	RCALL _lcd_putchar
0006f9 cff2      	RJMP _0x2020008
                 _0x202000A:
0006fa 8118      	LDD  R17,Y+0
0006fb 9623      	ADIW R28,3
0006fc 9508      	RET
                 __long_delay_G101:
0006fd 27aa          clr   r26
0006fe 27bb          clr   r27
                 __long_delay0:
0006ff 9711          sbiw  r26,1         ;2 cycles
000700 f7f1          brne  __long_delay0 ;2 cycles
000701 9508      	RET
                 __lcd_init_write_G101:
000702 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000703 b3a7          in    r26,__lcd_direction
000704 6fa7          ori   r26,0xf7                ;set as output
000705 bba7          out   __lcd_direction,r26
000706 b3b8          in    r27,__lcd_port
000707 70bf          andi  r27,0xf
000708 81a8          ld    r26,y
000709 df79      	RCALL __lcd_write_nibble_G101
00070a 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
00070b 9621      	ADIW R28,1
00070c 9508      	RET
                 _lcd_init:
00070d 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
00070e 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
00070f 80d8      	LDD  R13,Y+0
000710 81e8      	LD   R30,Y
000711 58e0      	SUBI R30,-LOW(128)
                +
000712 93e0 011b+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000714 81e8      	LD   R30,Y
000715 54e0      	SUBI R30,-LOW(192)
                +
000716 93e0 011c+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000718 d16d      	RCALL SUBOPT_0x3E
000719 d16c      	RCALL SUBOPT_0x3E
00071a d16b      	RCALL SUBOPT_0x3E
00071b dfe1      	RCALL __long_delay_G101
00071c e2e0      	LDI  R30,LOW(32)
00071d 93ea      	ST   -Y,R30
00071e dfe3      	RCALL __lcd_init_write_G101
00071f dfdd      	RCALL __long_delay_G101
000720 e2e8      	LDI  R30,LOW(40)
000721 d162      	RCALL SUBOPT_0x3D
000722 dfda      	RCALL __long_delay_G101
000723 e0e4      	LDI  R30,LOW(4)
000724 d15f      	RCALL SUBOPT_0x3D
000725 dfd7      	RCALL __long_delay_G101
000726 e8e5      	LDI  R30,LOW(133)
000727 d15c      	RCALL SUBOPT_0x3D
000728 dfd4      	RCALL __long_delay_G101
000729 b3a7          in    r26,__lcd_direction
00072a 70af          andi  r26,0xf                 ;set as input
00072b bba7          out   __lcd_direction,r26
00072c 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
00072d df72      	RCALL _lcd_read_byte0_G101
00072e 30e5      	CPI  R30,LOW(0x5)
00072f f409      	BRNE PC+2
000730 c003      	RJMP _0x202000B
000731 e0e0      	LDI  R30,LOW(0)
000732 9621      	ADIW R28,1
000733 9508      	RET
                 _0x202000B:
000734 df3d      	RCALL __lcd_ready
000735 e0e6      	LDI  R30,LOW(6)
000736 d14d      	RCALL SUBOPT_0x3D
000737 df7d      	RCALL _lcd_clear
000738 e0e1      	LDI  R30,LOW(1)
000739 9621      	ADIW R28,1
00073a 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
00073b 91a9          ld   r26,y+
00073c 91b9          ld   r27,y+
00073d 27ee          clr  r30
00073e 27ff          clr  r31
                 strlen0:
00073f 916d          ld   r22,x+
000740 2366          tst  r22
000741 f011          breq strlen1
000742 9631          adiw r30,1
000743 cffb          rjmp strlen0
                 strlen1:
000744 9508          ret
                 _strlenf:
000745 27aa          clr  r26
000746 27bb          clr  r27
000747 91e9          ld   r30,y+
000748 91f9          ld   r31,y+
                 strlenf0:
000749 9005      	lpm  r0,z+
00074a 2000          tst  r0
00074b f011          breq strlenf1
00074c 9611          adiw r26,1
00074d cffb          rjmp strlenf0
                 strlenf1:
00074e 01fd          movw r30,r26
00074f 9508          ret
                 
                 	.DSEG
                 _rx_buffer:
0000e0           	.BYTE 0x8
                 _t_max_razogrev:
0000e8           	.BYTE 0x1
                 _t_max_rabochee:
0000e9           	.BYTE 0x1
                 _t_min_razogrev:
0000ea           	.BYTE 0x1
                 _t_min_rabochee:
0000eb           	.BYTE 0x1
                 _time_rabota_ch:
0000ec           	.BYTE 0x1
                 _time_rabota_min:
0000ed           	.BYTE 0x1
                 _time_smoke_ch:
0000ee           	.BYTE 0x1
                 _time_smoke_min:
0000ef           	.BYTE 0x1
                 _real_time_ch:
0000f0           	.BYTE 0x1
                 _real_time_min:
0000f1           	.BYTE 0x1
                 _real_time_sek:
0000f2           	.BYTE 0x1
                 _real_temp:
0000f3           	.BYTE 0x1
                 _real_temp_1razryad:
0000f4           	.BYTE 0x1
                 _real_temp_2razryad:
0000f5           	.BYTE 0x1
                 _real_temp_3razryad:
0000f6           	.BYTE 0x1
                 _regim_rabot:
0000f7           	.BYTE 0x1
                 _regim_rabot_old:
0000f8           	.BYTE 0x1
                 _lcd_str_1:
0000f9           	.BYTE 0x10
                 _lcd_str_2:
000109           	.BYTE 0x10
                 __base_y_G101:
000119           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x0:
000750 e0f0      	LDI  R31,0
000751 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000752 e0e0      	LDI  R30,LOW(0)
000753 bded      	OUT  0x2D,R30
000754 bdec      	OUT  0x2C,R30
000755 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
000756 91a0 00f2 	LDS  R26,_real_time_sek
000758 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000759 91a0 00f1 	LDS  R26,_real_time_min
00075b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
00075c 91a0 00f0 	LDS  R26,_real_time_ch
00075e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
00075f 91e0 00f7 	LDS  R30,_regim_rabot
000761 dfee      	RCALL SUBOPT_0x0
000762 30eb      	CPI  R30,LOW(0xB)
000763 e0a0      	LDI  R26,HIGH(0xB)
000764 07fa      	CPC  R31,R26
000765 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x6:
000766 30ec      	CPI  R30,LOW(0xC)
000767 e0a0      	LDI  R26,HIGH(0xC)
000768 07fa      	CPC  R31,R26
000769 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x7:
00076a 31e5      	CPI  R30,LOW(0x15)
00076b e0a0      	LDI  R26,HIGH(0x15)
00076c 07fa      	CPC  R31,R26
00076d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x8:
00076e 31e6      	CPI  R30,LOW(0x16)
00076f e0a0      	LDI  R26,HIGH(0x16)
000770 07fa      	CPC  R31,R26
000771 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x9:
000772 31ef      	CPI  R30,LOW(0x1F)
000773 e0a0      	LDI  R26,HIGH(0x1F)
000774 07fa      	CPC  R31,R26
000775 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xA:
000776 32e0      	CPI  R30,LOW(0x20)
000777 e0a0      	LDI  R26,HIGH(0x20)
000778 07fa      	CPC  R31,R26
000779 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xB:
00077a 32e9      	CPI  R30,LOW(0x29)
00077b e0a0      	LDI  R26,HIGH(0x29)
00077c 07fa      	CPC  R31,R26
00077d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xC:
00077e 32ea      	CPI  R30,LOW(0x2A)
00077f e0a0      	LDI  R26,HIGH(0x2A)
000780 07fa      	CPC  R31,R26
000781 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0xD:
000782 93e0 00f7 	STS  _regim_rabot,R30
000784 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000785 e0eb      	LDI  R30,LOW(11)
000786 cffb      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
000787 e3ec      	LDI  R30,LOW(60)
000788 cff9      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x10:
000789 2de7      	MOV  R30,R7
00078a dfc5      	RCALL SUBOPT_0x0
00078b 93fa      	ST   -Y,R31
00078c 93ea      	ST   -Y,R30
00078d c0fc      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
00078e e0e0      	LDI  R30,LOW(0)
00078f 93ea      	ST   -Y,R30
000790 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x12:
000791 efe9      	LDI  R30,LOW(_lcd_str_1)
000792 e0f0      	LDI  R31,HIGH(_lcd_str_1)
000793 93fa      	ST   -Y,R31
000794 93ea      	ST   -Y,R30
000795 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x13:
000796 e0e9      	LDI  R30,LOW(_lcd_str_2)
000797 e0f1      	LDI  R31,HIGH(_lcd_str_2)
000798 93fa      	ST   -Y,R31
000799 93ea      	ST   -Y,R30
00079a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
00079b 91e0 00f7 	LDS  R30,_regim_rabot
00079d dfb2      	RCALL SUBOPT_0x0
00079e 30e1      	CPI  R30,LOW(0x1)
00079f e0a0      	LDI  R26,HIGH(0x1)
0007a0 07fa      	CPC  R31,R26
0007a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:50 WORDS
                 SUBOPT_0x15:
0007a2 93fa      	ST   -Y,R31
0007a3 93ea      	ST   -Y,R30
0007a4 e080      	LDI  R24,0
0007a5 de99      	RCALL _sprintf
0007a6 9624      	ADIW R28,4
0007a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16:
                +
0007a8 e7e4     +LDI R30 , LOW ( 2 * _0x0 + ( 32 ) )
0007a9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 32 ) )
                 	__POINTW1FN _0x0,32
0007aa 93fa      	ST   -Y,R31
0007ab 93ea      	ST   -Y,R30
0007ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
0007ad 91a0 00e8 	LDS  R26,_t_max_razogrev
0007af e0b0      	LDI  R27,0
0007b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x18:
0007b1 e6e4      	LDI  R30,LOW(100)
0007b2 e0f0      	LDI  R31,HIGH(100)
0007b3 d102      	RCALL __DIVW21
0007b4 01df      	MOVW R26,R30
0007b5 e0ea      	LDI  R30,LOW(10)
0007b6 e0f0      	LDI  R31,HIGH(10)
0007b7 d103      	RCALL __MODW21
0007b8 96f0      	ADIW R30,48
0007b9 d0e4      	RCALL __CWD1
0007ba d124      	RCALL __PUTPARD1
0007bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 61 TIMES, CODE SIZE REDUCTION:58 WORDS
                 SUBOPT_0x19:
0007bc e0ea      	LDI  R30,LOW(10)
0007bd e0f0      	LDI  R31,HIGH(10)
0007be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:131 WORDS
                 SUBOPT_0x1A:
0007bf d0f6      	RCALL __DIVW21
0007c0 01df      	MOVW R26,R30
0007c1 dffa      	RCALL SUBOPT_0x19
0007c2 d0f8      	RCALL __MODW21
0007c3 96f0      	ADIW R30,48
0007c4 d0d9      	RCALL __CWD1
0007c5 d119      	RCALL __PUTPARD1
0007c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1B:
0007c7 27bb      	CLR  R27
0007c8 dff3      	RCALL SUBOPT_0x19
0007c9 d0f1      	RCALL __MODW21
0007ca 96f0      	ADIW R30,48
0007cb d0d2      	RCALL __CWD1
0007cc d112      	RCALL __PUTPARD1
0007cd e08c      	LDI  R24,12
0007ce de70      	RCALL _sprintf
0007cf 9660      	ADIW R28,16
0007d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1C:
0007d1 91a0 00ea 	LDS  R26,_t_min_razogrev
0007d3 e0b0      	LDI  R27,0
0007d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1D:
0007d5 dfe6      	RCALL SUBOPT_0x19
0007d6 cfe8      	RJMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E:
0007d7 91a0 00e9 	LDS  R26,_t_max_rabochee
0007d9 e0b0      	LDI  R27,0
0007da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1F:
0007db 91a0 00eb 	LDS  R26,_t_min_rabochee
0007dd e0b0      	LDI  R27,0
0007de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20:
                +
0007df e7e6     +LDI R30 , LOW ( 2 * _0x0 + ( 34 ) )
0007e0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 34 ) )
                 	__POINTW1FN _0x0,34
0007e1 93fa      	ST   -Y,R31
0007e2 93ea      	ST   -Y,R30
0007e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x21:
0007e4 e0b0      	LDI  R27,0
0007e5 cfef      	RJMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x22:
0007e6 27bb      	CLR  R27
0007e7 dfd4      	RCALL SUBOPT_0x19
0007e8 d0d2      	RCALL __MODW21
0007e9 96f0      	ADIW R30,48
0007ea d0b3      	RCALL __CWD1
0007eb d0f3      	RCALL __PUTPARD1
0007ec e088      	LDI  R24,8
0007ed de51      	RCALL _sprintf
0007ee 962c      	ADIW R28,12
0007ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23:
                +
0007f0 efe7     +LDI R30 , LOW ( 2 * _0x0 + ( 163 ) )
0007f1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 163 ) )
                 	__POINTW1FN _0x0,163
0007f2 93fa      	ST   -Y,R31
0007f3 93ea      	ST   -Y,R30
0007f4 df67      	RCALL SUBOPT_0x4
0007f5 cfee      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x24:
0007f6 df65      	RCALL SUBOPT_0x4
0007f7 27bb      	CLR  R27
0007f8 dfc3      	RCALL SUBOPT_0x19
0007f9 d0c1      	RCALL __MODW21
0007fa 96f0      	ADIW R30,48
0007fb d0a2      	RCALL __CWD1
0007fc d0e2      	RCALL __PUTPARD1
0007fd df5b      	RCALL SUBOPT_0x3
0007fe cfe5      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x25:
0007ff df59      	RCALL SUBOPT_0x3
000800 27bb      	CLR  R27
000801 dfba      	RCALL SUBOPT_0x19
000802 d0b8      	RCALL __MODW21
000803 96f0      	ADIW R30,48
000804 d099      	RCALL __CWD1
000805 d0d9      	RCALL __PUTPARD1
000806 df4f      	RCALL SUBOPT_0x2
000807 cfdc      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:82 WORDS
                 SUBOPT_0x26:
000808 df4d      	RCALL SUBOPT_0x2
000809 27bb      	CLR  R27
00080a dfb1      	RCALL SUBOPT_0x19
00080b d0af      	RCALL __MODW21
00080c 96f0      	ADIW R30,48
00080d d090      	RCALL __CWD1
00080e d0d0      	RCALL __PUTPARD1
00080f 91e0 00f4 	LDS  R30,_real_temp_1razryad
000811 27ff      	CLR  R31
000812 2766      	CLR  R22
000813 2777      	CLR  R23
000814 d0ca      	RCALL __PUTPARD1
000815 91e0 00f5 	LDS  R30,_real_temp_2razryad
000817 27ff      	CLR  R31
000818 2766      	CLR  R22
000819 2777      	CLR  R23
00081a d0c4      	RCALL __PUTPARD1
00081b 91e0 00f6 	LDS  R30,_real_temp_3razryad
00081d 27ff      	CLR  R31
00081e 2766      	CLR  R22
00081f 2777      	CLR  R23
000820 d0be      	RCALL __PUTPARD1
000821 e284      	LDI  R24,36
000822 de1c      	RCALL _sprintf
000823 96a8      	ADIW R28,40
000824 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x27:
000825 93fa      	ST   -Y,R31
000826 93ea      	ST   -Y,R30
000827 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:68 WORDS
                 SUBOPT_0x28:
000828 98d8      	CBI  0x1B,0
000829 98d9      	CBI  0x1B,1
00082a 98da      	CBI  0x1B,2
00082b 98db      	CBI  0x1B,3
00082c 98dc      	CBI  0x1B,4
00082d 98dd      	CBI  0x1B,5
00082e 98de      	CBI  0x1B,6
00082f 98df      	CBI  0x1B,7
000830 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x29:
000831 e3ec      	LDI  R30,LOW(60)
000832 30e0      	CPI  R30,0
000833 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2A:
000834 e4e6      	LDI  R30,LOW(70)
000835 30e0      	CPI  R30,0
000836 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2B:
000837 e5e0      	LDI  R30,LOW(80)
000838 30e0      	CPI  R30,0
000839 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2C:
00083a e6e4      	LDI  R30,LOW(100)
00083b 30e0      	CPI  R30,0
00083c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:79 WORDS
                 SUBOPT_0x2D:
00083d 91a0 00f8 	LDS  R26,_regim_rabot_old
00083f e0b0      	LDI  R27,0
000840 e0f0      	LDI  R31,0
000841 fde7      	SBRC R30,7
000842 efff      	SER  R31
000843 17ea      	CP   R30,R26
000844 07fb      	CPC  R31,R27
000845 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E:
000846 9ad8      	SBI  0x1B,0
000847 9ad9      	SBI  0x1B,1
000848 9ada      	SBI  0x1B,2
000849 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2F:
00084a 9adb      	SBI  0x1B,3
00084b 2de6      	MOV  R30,R6
00084c df03      	RCALL SUBOPT_0x0
00084d dfd7      	RCALL SUBOPT_0x27
00084e c03b      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
00084f 81aa      	LDD  R26,Y+2
000850 81bb      	LDD  R27,Y+2+1
000851 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31:
000852 9614      	ADIW R26,4
000853 d083      	RCALL __GETW1P
000854 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x32:
000855 91ed      	LD   R30,X+
000856 91fd      	LD   R31,X+
000857 9631      	ADIW R30,1
000858 93fe      	ST   -X,R31
000859 93ee      	ST   -X,R30
00085a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x33:
00085b 932a      	ST   -Y,R18
00085c 85ed      	LDD  R30,Y+13
00085d 85fe      	LDD  R31,Y+13+1
00085e dfc6      	RCALL SUBOPT_0x27
00085f 89e9      	LDD  R30,Y+17
000860 89fa      	LDD  R31,Y+17+1
000861 9509      	ICALL
000862 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34:
000863 89e8      	LDD  R30,Y+16
000864 89f9      	LDD  R31,Y+16+1
000865 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x35:
000866 9734      	SBIW R30,4
000867 8be8      	STD  Y+16,R30
000868 8bf9      	STD  Y+16+1,R31
000869 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x36:
00086a 85ed      	LDD  R30,Y+13
00086b 85fe      	LDD  R31,Y+13+1
00086c dfb8      	RCALL SUBOPT_0x27
00086d 89e9      	LDD  R30,Y+17
00086e 89fa      	LDD  R31,Y+17+1
00086f 9509      	ICALL
000870 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
000871 dff1      	RCALL SUBOPT_0x34
000872 cff3      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
000873 89a8      	LDD  R26,Y+16
000874 89b9      	LDD  R27,Y+16+1
000875 cfdc      	RJMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x39:
000876 83ee      	STD  Y+6,R30
000877 83ff      	STD  Y+6+1,R31
000878 cfac      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A:
000879 83ee      	STD  Y+6,R30
00087a 83ff      	STD  Y+6+1,R31
00087b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
00087c 87ea      	STD  Y+10,R30
00087d 87fb      	STD  Y+10+1,R31
00087e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
00087f 01de      	MOVW R26,R28
000880 961c      	ADIW R26,12
000881 d014      	RCALL __ADDW2R15
000882 d054      	RCALL __GETW1P
000883 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D:
000884 93ea      	ST   -Y,R30
000885 ce05      	RJMP __lcd_write_data
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3E:
000886 de76      	RCALL __long_delay_G101
000887 e3e0      	LDI  R30,LOW(48)
000888 93ea      	ST   -Y,R30
000889 ce78      	RJMP __lcd_init_write_G101
                 
                 
                 	.CSEG
                 _delay_ms:
00088a 91e9      	ld   r30,y+
00088b 91f9      	ld   r31,y+
00088c 9630      	adiw r30,0
00088d f039      	breq __delay_ms1
                 __delay_ms0:
                +
00088e ea81     +LDI R24 , LOW ( 0x7A1 )
00088f e097     +LDI R25 , HIGH ( 0x7A1 )
                +__DELAY_USW_LOOP :
000890 9701     +SBIW R24 , 1
000891 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7A1
000892 95a8      	wdr
000893 9731      	sbiw r30,1
000894 f7c9      	brne __delay_ms0
                 __delay_ms1:
000895 9508      	ret
                 
                 __ADDW2R15:
000896 2400      	CLR  R0
000897 0daf      	ADD  R26,R15
000898 1db0      	ADC  R27,R0
000899 9508      	RET
                 
                 __ANEGW1:
00089a 95f1      	NEG  R31
00089b 95e1      	NEG  R30
00089c 40f0      	SBCI R31,0
00089d 9508      	RET
                 
                 __CWD1:
00089e 2f6f      	MOV  R22,R31
00089f 0f66      	ADD  R22,R22
0008a0 0b66      	SBC  R22,R22
0008a1 2f76      	MOV  R23,R22
0008a2 9508      	RET
                 
                 __DIVW21U:
0008a3 2400      	CLR  R0
0008a4 2411      	CLR  R1
0008a5 e190      	LDI  R25,16
                 __DIVW21U1:
0008a6 0faa      	LSL  R26
0008a7 1fbb      	ROL  R27
0008a8 1c00      	ROL  R0
0008a9 1c11      	ROL  R1
0008aa 1a0e      	SUB  R0,R30
0008ab 0a1f      	SBC  R1,R31
0008ac f418      	BRCC __DIVW21U2
0008ad 0e0e      	ADD  R0,R30
0008ae 1e1f      	ADC  R1,R31
0008af c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0008b0 60a1      	SBR  R26,1
                 __DIVW21U3:
0008b1 959a      	DEC  R25
0008b2 f799      	BRNE __DIVW21U1
0008b3 01fd      	MOVW R30,R26
0008b4 01d0      	MOVW R26,R0
0008b5 9508      	RET
                 
                 __DIVW21:
0008b6 d012      	RCALL __CHKSIGNW
0008b7 dfeb      	RCALL __DIVW21U
0008b8 f40e      	BRTC __DIVW211
0008b9 dfe0      	RCALL __ANEGW1
                 __DIVW211:
0008ba 9508      	RET
                 
                 __MODW21:
0008bb 94e8      	CLT
0008bc ffb7      	SBRS R27,7
0008bd c004      	RJMP __MODW211
0008be 95a0      	COM  R26
0008bf 95b0      	COM  R27
0008c0 9611      	ADIW R26,1
0008c1 9468      	SET
                 __MODW211:
0008c2 fdf7      	SBRC R31,7
0008c3 dfd6      	RCALL __ANEGW1
0008c4 dfde      	RCALL __DIVW21U
0008c5 01fd      	MOVW R30,R26
0008c6 f40e      	BRTC __MODW212
0008c7 dfd2      	RCALL __ANEGW1
                 __MODW212:
0008c8 9508      	RET
                 
                 __CHKSIGNW:
0008c9 94e8      	CLT
0008ca fff7      	SBRS R31,7
0008cb c002      	RJMP __CHKSW1
0008cc dfcd      	RCALL __ANEGW1
0008cd 9468      	SET
                 __CHKSW1:
0008ce ffb7      	SBRS R27,7
0008cf c006      	RJMP __CHKSW2
0008d0 95a0      	COM  R26
0008d1 95b0      	COM  R27
0008d2 9611      	ADIW R26,1
0008d3 f800      	BLD  R0,0
0008d4 9403      	INC  R0
0008d5 fa00      	BST  R0,0
                 __CHKSW2:
0008d6 9508      	RET
                 
                 __GETW1P:
0008d7 91ed      	LD   R30,X+
0008d8 91fc      	LD   R31,X
0008d9 9711      	SBIW R26,1
0008da 9508      	RET
                 
                 __GETW1PF:
0008db 9005      	LPM  R0,Z+
0008dc 91f4      	LPM  R31,Z
0008dd 2de0      	MOV  R30,R0
0008de 9508      	RET
                 
                 __PUTPARD1:
0008df 937a      	ST   -Y,R23
0008e0 936a      	ST   -Y,R22
0008e1 93fa      	ST   -Y,R31
0008e2 93ea      	ST   -Y,R30
0008e3 9508      	RET
                 
                 __SAVELOCR6:
0008e4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0008e5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0008e6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0008e7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0008e8 931a      	ST   -Y,R17
0008e9 930a      	ST   -Y,R16
0008ea 9508      	RET
                 
                 __LOADLOCR6:
0008eb 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0008ec 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0008ed 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0008ee 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0008ef 8119      	LDD  R17,Y+1
0008f0 8108      	LD   R16,Y
0008f1 9508      	RET
                 
                 __LOADLOCR2P:
0008f2 9109      	LD   R16,Y+
0008f3 9119      	LD   R17,Y+
0008f4 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8535 register use summary:
r0 :  19 r1 :   5 r2 :   1 r3 :   0 r4 :   3 r5 :   4 r6 :   1 r7 :   1 
r8 :   2 r9 :   2 r10:   4 r11:   4 r12:   0 r13:   2 r14:   0 r15:   5 
r16:  36 r17:  30 r18:  29 r19:   8 r20:   9 r21:  17 r22:  14 r23:   5 
r24:  14 r25:   5 r26: 154 r27:  44 r28:  23 r29:   1 r30: 419 r31: 117 
x  :  19 y  : 160 z  :  17 
Registers used: 32 out of 35 (91.4%)

ATmega8535 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   5 
adiw  :  40 and   :   0 andi  :  11 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  : 151 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   4 
brlt  :   0 brmi  :   1 brne  :  20 brpl  :   1 brsh  :   7 brtc  :   2 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 cbi   :  24 
cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 clr   :  27 
cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :   4 cp    :   8 
cpc   :  22 cpi   :  68 cpse  :   0 dec   :   3 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :  12 
inc   :   5 ld    :  31 ldd   :  64 ldi   : 218 lds   :  47 lpm   :  16 
lsl   :   1 lsr   :   0 mov   :  22 movw  :  19 mul   :   1 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   2 ori   :   9 out   :  37 
pop   :   4 push  :   3 rcall : 455 ret   :  95 reti  :   2 rjmp  : 356 
rol   :   3 ror   :   0 sbc   :   3 sbci  :   3 sbi   :  15 sbic  :   6 
sbis  :   0 sbiw  :  19 sbr   :   1 sbrc  :   5 sbrs  :  13 sec   :   0 
seh   :   0 sei   :   3 sen   :   0 ser   :   1 ses   :   0 set   :   4 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  67 std   :  21 
sts   :  29 sub   :   2 subi  :  36 swap  :   2 tst   :   4 wdr   :   1 

Instructions used: 66 out of 114 (57.9%)

ATmega8535 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0011ea   4250    336   4586    8192  56.0%
[.dseg] 0x000060 0x00011d      0     61     61     512  11.9%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 17 warnings
